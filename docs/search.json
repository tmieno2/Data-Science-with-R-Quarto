[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Science with R for Environmental, Agricultural, and Social Scientists",
    "section": "",
    "text": "This website hosts course materials for Data Science with R for Environmental, Agricultural, and Social Scientists (AECN 896-05) at UNL."
  },
  {
    "objectID": "lectures/index.html",
    "href": "lectures/index.html",
    "title": "Lecture Slides",
    "section": "",
    "text": "Title\n\n\n\n\n\n\n01: Introduction to R\n\n\n\n\n02-0: Clone Github Repositories\n\n\n\n\n02-1: Using Quarto to Create Documents\n\n\n\n\n02-2: Using Quarto to Create Presentations\n\n\n\n\n02-3: Using Quarto to Create a Website\n\n\n\n\n03-1-Data wrangling with tidyverse: The Basics\n\n\n\n\n03-1: Importing Files and Exporting to Files\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/Quarto.html",
    "href": "lectures/Chapter-2-Quarto/Quarto.html",
    "title": "Using Quarto to Create Documents",
    "section": "",
    "text": "What is Quarto?\nChunk options\nCaching\nYAML\nDirectory\nOutput types"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/Quarto.html#quarto-introduction-1",
    "href": "lectures/Chapter-2-Quarto/Quarto.html#quarto-introduction-1",
    "title": "Using Quarto to Create Documents",
    "section": "Quarto: Introduction",
    "text": "Quarto: Introduction\n\nWhat is and why Quarto?Using WORD?Generating a report using Quarto\n\n\n\nIt allows you to effortlessly generate documents that can print both R codes and their outcomes (this lecture note is indeed written using Quarto) in a single document.\nIt is useful when you report the analysis you conducted and its source R codes to your advisor or anyone you report to (as long as that person understands R).\nThe power of Quarto goes well beyond just creating a simple html document. The full power of Quarto is on display here.\n\n\n\n\nIt would be a real pain to do so because you need to copy and paste all the R codes you run and the results onto WORD manually.\nOften times, copied R codes and results are very much likely to be badly formatted when pasting them\nQuarto obviates the need of repeating copying and pasting when you would like to communicate what you did (R codes) and what you found (results) without worrying too much about formatting.\n\n\n\nGenerating a report using Quarto is a two-step process:\n\nCreate an Quarto file (file with .qmd as an extension) with regular texts and R codes mixed inside it.\n\n\nYou use a special syntax to let the computer know which parts of the file are simple texts and which parts are R codes.\n\n\nTell the computer to process the qmd file (a click of a button on RStudio, or use the render() function)\n\n\nThe computer runs the R codes and get their outcomes\nCombine the text parts, R codes, and their results to produce a document"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/Quarto.html#quarto-the-basics-1",
    "href": "lectures/Chapter-2-Quarto/Quarto.html#quarto-the-basics-1",
    "title": "Using Quarto to Create Documents",
    "section": "Quarto: the Basics",
    "text": "Quarto: the Basics\n\nR code chunksLet’s knitqmd v.s. outputInline codeMarkdown basicsCaveat\n\n\nA qmd file would consist of two types of inputs:\n\nR code chunks\nRegular texts\n\n\n\n\n\nSpecial Syntax\n\n\nWe can indicate R codes chunks by placing R codes inside a special syntax.\n```{r}\ncodes\n```\n\n\n\n\n\n\n\n\nDirection\n\n\nTake a look at qmd_sample.qmd, which can be downloaded from here.\n\nR codes summary(cars) and plot(pressure) are enclosed individually by the special syntax\nSo, in this qmd file, R knows that it should treat them as R codes, but not regular texts.\nOn the other hand, any texts that are not enclosed by the special syntax would be recognized as regular text.\n\n\n\n\n\n\n\nThe process of compiling an qmd file to produce a document is called knitting.\n\nThe easiest way to knit is to hit the Knit button located at the top of the code pane (upper left pane by default)\nAlternatively, you can use the render() function to knit like below:\n\n\nrender(\"sample_rmd.Rmd\")\n\n\n\nInspect the qmd file and its output document:\n\n\nqmd side\n\nlines 1-15: a YAML header where you control the aesthetics of the output document (more on this later)\nlines 36-38: texts not enclosed by the special syntax\nlines 40-42: summary(cars) is an R code, which is enclosed by the special syntax\n\n\nhtml side\n\nlines 1-15: nothing\nlines 36-38: printed as regular texts\nlines 40-42: the R code and its results printed\n\n\n\n\n\n\nYou can refer to an R object previously defined in line and display its content in line:\n.content-box-red[Direction]\nSee lines 62-68 of the qmd file\n\n\n\nheader\nmake a list\nfont\ncode highlighting\ninline math\nmath\nweb link\ncitation\n\n.content-box-red[Direction]\nCompare Chapter 2 of the qmd file and its output html file\n\n\n\nWhen you knit an qmd file and create a report, R creates an R session/environment that is completely  independent  of whatever R sessions or environments you may have on your RStudio.\nThis means that when you knit an qmd file, you cannot refer to R objects you have defined on your current R session."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/Quarto.html#chunk-options-1",
    "href": "lectures/Chapter-2-Quarto/Quarto.html#chunk-options-1",
    "title": "Using Quarto to Create Documents",
    "section": "Chunk options",
    "text": "Chunk options\n\nWhat?Example: echoVarious optionsSpecify chunk options globally\n\n\nChunk options are special codes inside R code chunks to control how the code chunks operate.\nHere are some example options:\n\necho\neval\nmessage\nwarning\nresults\ninclude\ncache\nfig.cap, fig-height, etc\n\n\n\n\nInspect the qmd file and its output document and observe that\n\nFrom the R code chunk with summary(cars), the code itself and its outcome are presented in the output\nFrom the R code chunk with plot(pressure), only its outcome is presented in the output\n\nThis is because of the chunk option echo = FALSE in the second R code chunk\n\n\n\n\necho and evalmessage and warningresultsincludefigure-related\n\n\n.footnote[ 1 Values in red indicates that they are the default values]\n.content-box-green[Chunk option: echo]\n\necho ( TRUE  or FALSE): specify whether the R codes appear in the output document or not\neval ( TRUE  or FALSE): specify whether the R codes are evaluated or not\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 95-115) and its output document to see their effects.\n\n\n\n\n\n\n\nmessage (TRUE or  FALSE ): specify weather messages associated with R codes evaluation appear in the output document or not\nwarning (TRUE or  FALSE ): specify weather warnings associated with R codes evaluation appear in the output document or not\n\n.content-box-red[Direction]\nInspect the rmd file (lines 119-140) and its output document\n\n\nresults ( markup , hide, asis)\n\nhide: hides all the results including warnings and messages\nasis: the outputs of the R codes are printed as-is without any suitable formatting (which the default option markup does)\n\n\n.content-box-red[Direction]\nInspect the rmd file (lines 144-156) and its output document\n.footnote[ 1 Values in red indicates that they are the default values ]\n\n\ninclude = FALSE is equivalent to having eval = TRUE, echo = FALSE, results = \"hide\"\n\n.content-box-red[Direction]\nInspect the rmd file (lines 160-173) and its output document\n\n\n.content-box-green[Chunk option for figure]\n\nfig.align: ‘default’, ‘center’, ‘left’, ‘right’\nfig.width: in inches\nfig.height: in inches\nfig.cap: figure caption\n\n\n.content-box-red[Direction]\nPlay with these options. See here for more chunk options.\n\n\n\n\n\n\n\nWhat and why?How\n\n\nSometimes, it is useful to set chunk options that apply globally (for the entire documents).\nFor example,\n\nYou are writing a term paper and the instructor may want to see only results, but not R codes.\nYou do not want any of the R codes to appear on the output document, but echo = TRUE is the default.\n\n\n\nYou can use opts_chunk$set() from the knitr package to set chunk options globally.\n\nopts_chunk$set(\n  echo = FALSE,\n  messages = FALSE,\n  warnings = FALSE,\n  fig.align = \"center\",\n  fig.width = 5,\n  fig.height = 4\n)\n\n.content-box-red[Direction]\nRemove eval = F from the R chunk at line 17 and knit.\n.content-box-green[Important]: Local option overrides the global option."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/Quarto.html#caching-1",
    "href": "lectures/Chapter-2-Quarto/Quarto.html#caching-1",
    "title": "Using Quarto to Create Documents",
    "section": "Caching",
    "text": "Caching\n\nWhat?\n\n\n\nIn the course of creating a document using Rmarkdown, You are going to hit the “Knit” button numerous times when you are writing a report to check whether the final output looks fine.\nEvery time you knit, all the R code chunks are evaluated, which is inefficient because R has evaluated those R code chunks before.\nSo, if we can somehow store the results of R code chunks (caching), and then let R call up the saved results instead of re-evaluating the codes all over again, we can save lots of time.\nThe benefit of doing so is greater when the processing time of the codes is longer. Caching can be done by adding cache==TRUE as a chunk option.\nBy adding the option, once an R chunk is processed, its results are saved and can be reused again by R later when you compile the document again.\n\n\n\n.content-box-red[Direction]\n\nchange eval = F to eval = T in the cache_1 chunk\nknit and confirm that sample_rmd_cache and sample_rmd_files folders are created\nknit again and observe that the knitting process is much faster now\n\n\n\nWhen any part of the R codes within a cached R code chunk is changed, R is smart enough to recognize the change and evaluate the R code chunk again without using the cached results for the chunk.\n.content-box-red[Direction]\nChange y = 1 + x + v to y = 1 + 2 * x +v in the cache_1 chunk and knit\n\n\n\nSometimes, your R codes within an cached R code chunk have not changed, but the content of a dataset used in the R code chunk may have changed.\nIn such a case, R is unable to recognize the change in the content of the dataset.\n\n.content-box-red[Direction]\n\nchange eval = F to eval = T in the cache_2 chunk and knit\nchange y = 1 + 2 * x + v back to y = 1 + x +v and knit (notice that the printed number from cache_2 did not change)\n\n\n\n\nTo R, everything in the cache_2 chunk looks the same as they only look at the code texts, but not the contents of R objects.\nTherefore, R would call up the saved results instead of rerunning the R codes, which is not what you want.\nYou can use the dependson option to make R recognize any changes in cached R objects\n\n.content-box-green[Direction]\nAdd dependson = \"cache_1\" to the cache_2 chunk as an option and knit again."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/Quarto.html#yaml-1",
    "href": "lectures/Chapter-2-Quarto/Quarto.html#yaml-1",
    "title": "Using Quarto to Create Documents",
    "section": "YAML",
    "text": "YAML\n\nWhat?\n\n\nAt the very beginning of an rmd file, you have a YAML header, where you specify how the resulting documents look like.\n.content-box-green[Example]\n---\ntitle: \"Reporting using Rmarkdown\"\nauthor: \"Taro Mieno\"\ndate: \"2024-08-22\"\noutput:\n  html_document:\n    number_sections: yes\n    theme: flatly\n    toc: yes\n    toc_float: yes\n  word_document:\n    toc: yes\n---\n\n\n\n\nDirection\n\n\n\nTry other themes and highlight methods found here\nVisit here for the other options."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/Quarto.html#directory-1",
    "href": "lectures/Chapter-2-Quarto/Quarto.html#directory-1",
    "title": "Using Quarto to Create Documents",
    "section": "Directory",
    "text": "Directory\n\nReading Files\n\n\nSuppose you are interested in reading a dataset file like this:\n\nread.csv(\"corn_price.csv\")\n\n\n.content-box-red[Important]:\nBy default, RStudio looks for corn_price.csv in the same folder in which the Rmd file is located.\n\n.content-box-green[So,]\n\nIn my case, the sample_rmd.rmd is located in /Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Chapter-2-Rmarkdown.\nSo, RStudio tries to find /Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Chapter-2-Rmarkdown/corn_price.csv.\nIf the file is not in the directory, RStudio won’t be able to find the file to import and returns an error. Clearly, all the subsequent actions dependent on the dataset will not run.\n\n\n\nTo avoid errors in reading files, there are three options:\n\n.content-box-green[Option 1.] (recommended for a beginner)\nPut all the datasets you intend to use in the same directory in which your rmd file is located\n.content-box-green[Option 2.]\nIf the file is not in the directory, supply the full path to the file like this\n\nread.csv(\"~/Dropbox/TeachingUNL/Data-Science-with-R/Chapter-2-Rmarkdown/corn_price.csv\")\n\n.content-box-green[Option 3.]\nTell R to look for a specific directory for datasets by setting a working directory using opts_knit$set(root.dir = directory) at the beginning\n\nopts_knit$set(root.dir = \"~/Dropbox/TeachingUNL/Data-Science-with-R/Chapter-2-Rmarkdown/\")"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/Quarto.html#output-types-1",
    "href": "lectures/Chapter-2-Quarto/Quarto.html#output-types-1",
    "title": "Using Quarto to Create Documents",
    "section": "Output types",
    "text": "Output types\n\nInteractive featuresInteractive features: tabletime-series dataggplot2 figures\n\n\n\nhtml\nWord\npdf\n\n\n.content-box-green[How]\nTo select the output type, first click on the black triangle button next to the “Knit” button, and then select your preferred option type.\n\nBy far the preferred version of the three is html if you do not intend to print out the output document.\nhtml is void of the concept of page. Consequently, you do not have to worry about how you should organize texts, tables, and figures within a page (fixed amount of space).\nThe formatting of figure and tables can be screwed up in Word\n\n\n\nhtml is much more powerful than pdf or WORD in the sense that it is interactive.\nhtmlwidgets: tools to generate interactive contents using R\nSee the list of htmlwidgets here\n\n\ndatatable() from the DT package lets you create an interactive table\n\n\n\n\n\n\n\n\n\nlibrary(dygraphs)\ndygraph(nhtemp, main = \"New Haven Temperatures\") %&gt;%\n  dyRangeSelector(dateWindow = c(\"1920-01-01\", \"1960-01-01\"))\n\n\n\n\n\n\n\n\nlibrary(ggplot2)\nlibrary(plotly)\np &lt;- ggplot(data = diamonds) +\n  geom_bar(aes(x = cut, fill = clarity), position = \"dodge\")\n\nggplotly(p)"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/Quarto.html#resources",
    "href": "lectures/Chapter-2-Quarto/Quarto.html#resources",
    "title": "Using Quarto to Create Documents",
    "section": "Resources",
    "text": "Resources\nHere is a list of some useful resources to learn Rmarkdown.\n\nR Markdown: The Definitive Guide\nIntroduction to R markdown by Rstudio\nCheat sheet by Rstudio"
  },
  {
    "objectID": "syllabus/syllabus_24.html",
    "href": "syllabus/syllabus_24.html",
    "title": "Instructor:",
    "section": "",
    "text": "Instructor:\nTaro Mieno:\n\nEmail: tmieno2@unl.edu\nOffice: 209 Filley Hall\n\n\n\nSchedule\n\nLectures: MW 1:00 - 2:30 PM\nOffice Hours: by appointment\n\n\n\nCourse Description:\nThe goal of this course is to prepare students for jobs that require quantitative skills beyond Microsoft Excel and graduate programs. The R software is used throughout the course. In order to achieve the goal, students will be introduced to the basics of programming and how to apply it to real world issues in the field of agricultural (agricultural economics, agronomy, etc) and environmental sciences. By completing the course, students will know data wrangling (e.g., merging, transforming datasets), data visualization, and exploratory data analysis, spatial data management.\n\n\nReading Materials\n\nRecommended:\n\nGrolemund, Garrett. and Wickham, Hadley. 2019 \nLovelace, Robin., Nowosad, Jakub., and Muenchow, Jannes. 2019 \n\nPrerequisites:\n\nIntroductory statistics (STAT 218) or equivalent\n\n\n\n\nGrading\n\n\ntitlescoreAssignments (3 assignments)60%Final Paper40%Total100%\n\n\n\nAssignments: There will be 3 assignments. Late submissions will have 1/3 of a letter grade deducted from the grade for that submission, increasing by an additional 1/3 grade for each 24 hours beyond the deadline.\nFinal Paper: In this assignment, you write a paper with a particular emphasis on programming using real-world data sets. You must identify a topic that would involve collecting datasets from multiple different data sources. The topic has to be approved by me to avoid a final project without significant programming tasks by . The proposal of your final project detailing what datasets to use, where you collect them, and how you use them have to be submitted by .\n\n\n\nImportant Deadlines:\n\nFinal project topic approved by the instructor: October 30\nFinal project proposal: November 13\nFinal project submission: December 20\n\n\n\nTopics Covered\n\nIntroduction to R\nQuarto\nData Wrangling\nMerge and reshape datasets\nData visualization\nMiscellaneous data manipulations\nHow to write and organize codes\nResearch flow illustration\nWriting your own function\nLooping\nParallel computing\nCreate tables\nSpatial data\nWriting reproducible articles\n\n\n\nAcademic Honesty:\nStudents are expected to adhere to guidelines concerning academic dishonesty outlined in Section 4.2 of University’s Student Code of Conduct. Students are encouraged to contact the instructor for clarification of these guidelines if they have questions or concerns. The Department of Agricultural Economics has a written policy defining academic dishonesty, the potential sanctions for incidents of academic dishonesty, and the appeal process for students facing potential sanctions. The Department also has a policy regarding potential appeals of final course grades. These policies are available for review on the department’s website\n\n\nStudents with disabilities:\nStudents with disabilities are encouraged to contact the instructor for a confidential discussion of their individual needs for academic accommodation. It is the policy of the University of Nebraska-Lincoln to provide flexible and individualized accommodation to students with documented disabilities that may affect their ability to fully participate in course activities or to meet course requirements. To receive accommodation services, students must be registered with the Services for Students with Disabilities (SSD) office, 132 Canfield Administration, 472-3787 voice or TTY."
  },
  {
    "objectID": "lectures/Chapter-0/logistics.html",
    "href": "lectures/Chapter-0/logistics.html",
    "title": "Course Logistics",
    "section": "",
    "text": "MW: 1:00 pm ~ 2:30 pm"
  },
  {
    "objectID": "lectures/Chapter-0/logistics.html#meeting-time",
    "href": "lectures/Chapter-0/logistics.html#meeting-time",
    "title": "Course Logistics",
    "section": "",
    "text": "MW: 1:00 pm ~ 2:30 pm"
  },
  {
    "objectID": "lectures/Chapter-0/logistics.html#grading",
    "href": "lectures/Chapter-0/logistics.html#grading",
    "title": "Course Logistics",
    "section": "Grading",
    "text": "Grading\n\nAssignment 1: 20 points\nAssignment 2: 20 points\nAssignment 3: 20 points\nFinal project: 40 points"
  },
  {
    "objectID": "lectures/Chapter-0/logistics.html#request",
    "href": "lectures/Chapter-0/logistics.html#request",
    "title": "Course Logistics",
    "section": "Request",
    "text": "Request\nAny requests on topics to cover?"
  },
  {
    "objectID": "lectures/Chapter-0/logistics.html#self-introduction",
    "href": "lectures/Chapter-0/logistics.html#self-introduction",
    "title": "Course Logistics",
    "section": "Self-introduction",
    "text": "Self-introduction"
  },
  {
    "objectID": "IndustryPartnership/FCSA/proposal.html",
    "href": "IndustryPartnership/FCSA/proposal.html",
    "title": "Proposal for course matericals by FCSA",
    "section": "",
    "text": "The key motivation of the collaboration with FCSA is to expose students to real-world application of data science skills so that they have a good idea of how course materials can be used in practice.\n\n\n\nMock project(s) that uses R codes to analyze financial data to get actionable insights.\n\n\nR codes conduct following things.\n\nExploratory data analysis\nAnalysis\nHyepothesis testing\n\nHere are desired specific elements in the R codes that are used.\n\ntidyverse is used where possible for data wrangling (dplyr, tidyr) and visualization (ggplot2). I heard from Shara that you guys use Power BI for data visualization. That is good to see as well if you do not use ggplot2.\ndata.table is used where computation speed matters (Shara told me you guys do this for some operations).\nLooping is used for automating repetitive processes\n\nI would like to store the codes in my github repository for this course.\n\n\n\nI would like to store these datasets in a public repository that current and future students can access for assignments or their final projects.\n\n\n\nPlease let me know if you would like to record a video or give a in-class live delivery (in this case, I would like to ask your permission for recording). We meet at 1pm on Mondays and Wednesdays.\nThis presentation has the following structure:\n\nIntroduction of the presenter and what FCSA does\nPresents the mock project\nQualifications (what are you looking for from job applicants?)\nWork envrironment?\nAny opportunity? (internship)"
  },
  {
    "objectID": "IndustryPartnership/FCSA/proposal.html#ideal-prodcuts-from-fcsa-for-the-course",
    "href": "IndustryPartnership/FCSA/proposal.html#ideal-prodcuts-from-fcsa-for-the-course",
    "title": "Proposal for course matericals by FCSA",
    "section": "",
    "text": "The key motivation of the collaboration with FCSA is to expose students to real-world application of data science skills so that they have a good idea of how course materials can be used in practice."
  },
  {
    "objectID": "IndustryPartnership/FCSA/proposal.html#desired-contentes-shared-by-fcsa",
    "href": "IndustryPartnership/FCSA/proposal.html#desired-contentes-shared-by-fcsa",
    "title": "Proposal for course matericals by FCSA",
    "section": "",
    "text": "Mock project(s) that uses R codes to analyze financial data to get actionable insights.\n\n\nR codes conduct following things.\n\nExploratory data analysis\nAnalysis\nHyepothesis testing\n\nHere are desired specific elements in the R codes that are used.\n\ntidyverse is used where possible for data wrangling (dplyr, tidyr) and visualization (ggplot2). I heard from Shara that you guys use Power BI for data visualization. That is good to see as well if you do not use ggplot2.\ndata.table is used where computation speed matters (Shara told me you guys do this for some operations).\nLooping is used for automating repetitive processes\n\nI would like to store the codes in my github repository for this course.\n\n\n\nI would like to store these datasets in a public repository that current and future students can access for assignments or their final projects.\n\n\n\nPlease let me know if you would like to record a video or give a in-class live delivery (in this case, I would like to ask your permission for recording). We meet at 1pm on Mondays and Wednesdays.\nThis presentation has the following structure:\n\nIntroduction of the presenter and what FCSA does\nPresents the mock project\nQualifications (what are you looking for from job applicants?)\nWork envrironment?\nAny opportunity? (internship)"
  },
  {
    "objectID": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html",
    "href": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html",
    "title": "Writing Articles to WORD using Rmarkdown",
    "section": "",
    "text": "Learn how to use a combination of R packages to generate (mostly) publication-ready articles in WORD"
  },
  {
    "objectID": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html#learning-objectives",
    "href": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html#learning-objectives",
    "title": "Writing Articles to WORD using Rmarkdown",
    "section": "",
    "text": "Learn how to use a combination of R packages to generate (mostly) publication-ready articles in WORD"
  },
  {
    "objectID": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html#before-you-start",
    "href": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html#before-you-start",
    "title": "Writing Articles to WORD using Rmarkdown",
    "section": "Before you start",
    "text": "Before you start\n\nThis lecture slides assume basic knowledge on how to use Rmarkdown. See here first if are not familiar with Rmarkdown.\nGo here and download all the files including sample_to_word.Rmd (a sample Rmarkdown file)."
  },
  {
    "objectID": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html#steps",
    "href": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html#steps",
    "title": "Writing Articles to WORD using Rmarkdown",
    "section": "Steps",
    "text": "Steps\nHere are the proposed steps to generate a fully publication-ready article:\n\nWrite an Rmarkdown file and knit to a WORD file (the focus of this lecture)\n\nregular texts\nR codes for analysis, tables, figures\n\nDo final formatting jobs on the output WORD file (not discussed here) to the specific needs required by the final destination of the article"
  },
  {
    "objectID": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html#why-rmarkdown-word",
    "href": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html#why-rmarkdown-word",
    "title": "Writing Articles to WORD using Rmarkdown",
    "section": "Why Rmarkdown-WORD?",
    "text": "Why Rmarkdown-WORD?\n\nNo manual copying and pasting of tables and figures\nNo manual formatting of tables and figures when they get updated in the course of your research projects\nNo manual updating of data-driven numbers (e.g., coefficient estimates, summary numbers) in text"
  },
  {
    "objectID": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html#what-can-you-do-with-rmarkdown-word",
    "href": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html#what-can-you-do-with-rmarkdown-word",
    "title": "Writing Articles to WORD using Rmarkdown",
    "section": "What can you do with Rmarkdown-WORD?",
    "text": "What can you do with Rmarkdown-WORD?\n\ninclude (run) R codes to\n\nrun statistical or modeling analysis\n\ncreate figures (e.g., the ggplot2 package)\ncreate tables (e.g., the modelsummary and flextable packages)\n\nrefer to the R objects generated (data, tables, figures) to place them in the output WORD file\ncross-reference tables and figures using special syntaxes\ncreate citations and a reference list automatically using special syntaxes\nformat citation and reference styles using Citation Style Language\nuse Latex math syntax to write equations\nuse markdown syntax for formatting the output WORD file\n\nheadings\nfootnotes"
  },
  {
    "objectID": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html#structure-of-the-rmarkdown-file",
    "href": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html#structure-of-the-rmarkdown-file",
    "title": "Writing Articles to WORD using Rmarkdown",
    "section": "Structure of the Rmarkdown file",
    "text": "Structure of the Rmarkdown file\n\nYAML header\nMain body\n\nNarrative\nR code (analysis, figures, tables)\n\n\n\n\nYAML header"
  },
  {
    "objectID": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html#track-change",
    "href": "lectures/Chapter-9-WritingArticle/write_article_with_rmd_rjs.html#track-change",
    "title": "Writing Articles to WORD using Rmarkdown",
    "section": "Track Change",
    "text": "Track Change"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html",
    "href": "lectures/Chapter-1-Introduction/Introduction.html",
    "title": "Introduction to R",
    "section": "",
    "text": "become familiar with programming\nbecome capable of using R software to conduct research independently\n\nmanipulate data\nvisualize data\nreport results\nspatial data management"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#learning-objectives",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#learning-objectives",
    "title": "Introduction to R",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nbecome familiar with programming\nbecome capable of using R software to conduct research independently\n\nmanipulate data\nvisualize data\nreport results\nspatial data management"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#table-of-contents",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#table-of-contents",
    "title": "Introduction to R",
    "section": "Table of contents",
    "text": "Table of contents\n\nIntroduction to R and RStudio\nVarious object types\nFunctions and packages\nSome fundamentals on vector, matrix, list, and data.frame"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#r",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#r",
    "title": "Introduction to R",
    "section": "R",
    "text": "R\n\na very popular statistical programming language used in academia and industry\n\nstarted out as software to do statistics, designed by a number of statisticians\nis open-source and free\nhas been and is evolving rapidly by the contributions of its users\nstate-of-the-art statistical methods (e.g., machine learning algorithms) written by the developers of the methods\ngeographic information system (GIS)\nbig data handling and analysis"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#rstudio",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#rstudio",
    "title": "Introduction to R",
    "section": "RStudio",
    "text": "RStudio\n\nR has a terrible graphic user interface\nRStudio is by far the most popular graphic user interface of R\n\n\nR User Interface"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#install-r-and-rstudio",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#install-r-and-rstudio",
    "title": "Introduction to R",
    "section": "Install R and RStudio",
    "text": "Install R and RStudio\n\nInstall R\nInstall RStudio"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#introduction-to-rstudio",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#introduction-to-rstudio",
    "title": "Introduction to R",
    "section": "Introduction to RStudio",
    "text": "Introduction to RStudio\nFour panes\n\nR script (upper left)\nConsole (lower left)\nEnvironment (upper right)\nFiles, plots, packages, and help (lower right)\n\nSmall tips\n\nAppearance\nPane Layout"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#objectives",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#objectives",
    "title": "Introduction to R",
    "section": "Objectives",
    "text": "Objectives\nLearn how to\n\ndo basic mathematical operations\ndefine objects in R\nlearn different object types\nuse RStudio at the same time"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#basic-element-types-atomic-mode",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#basic-element-types-atomic-mode",
    "title": "Introduction to R",
    "section": "Basic element types (atomic mode)",
    "text": "Basic element types (atomic mode)\n\ninteger: e.g., 1, 3,\n\nnumeric (double): e.g., 1, 1.3\ncomplex:\nlogical (boolean): true or false\ncharacter: combination of letters (numerical operations not allowed)"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#basic-arithmetic-r-as-a-calculator",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#basic-arithmetic-r-as-a-calculator",
    "title": "Introduction to R",
    "section": "Basic arithmetic: R as a calculator",
    "text": "Basic arithmetic: R as a calculator\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\nRStudio Tip\n\n\nYou can run the selected codes by hitting\n\nMac: command + enter\nWindows: Control + enter"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#logical-values-and-operators",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#logical-values-and-operators",
    "title": "Introduction to R",
    "section": "logical values and operators",
    "text": "logical values and operators\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#character",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#character",
    "title": "Introduction to R",
    "section": "Character",
    "text": "Character\nContents enclosed by double (or single) quotation marks will be recognized as characters.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nYou cannot do addition using characters\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nWe will learn string manipulations later using the stringr package."
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#assigning-contents-to-an-object",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#assigning-contents-to-an-object",
    "title": "Introduction to R",
    "section": "Assigning contents to an object",
    "text": "Assigning contents to an object\n\nHowExampleObject evaluationMore examplesNotes\n\n\n\nYou can assign contents (numeric numbers, character, boolean, etc) to an object on R and reuse it later using either &lt;- or =.\n\n\nobject_name &lt;- contents\nobject_name = contents\n\n\n\nIt does not really matter which of &lt;- or = to use. You should pick whichever makes sense for you (though it is often recommended to use &lt;-). But, it is a good idea to be consistent.\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nNotice that these objects are now in the list of objects on the environment tab of RStudio.\n\n\n\nNote\n\n\nYou can insert the assignment operator (&lt;-) by hitting\n\nMac: Option + -\nWindows Alt + -\n\n\n\n\n\n\nOnce objects are created, you can evaluate them on the console to see what is inside:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\nNote\n\n\nI often ask you to evaluate an R object. That just means looking inside the R object to see what is inside.\n\n\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nSeveral things to remember about assignment:\n\nIf you assign contents to an object of the same name, the object that had the same name will be overwritten\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nObject names cannot start with a numeric number. Try the following:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nYou cannot use a reserved word as the name of an object (complete list found here)\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#objects",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#objects",
    "title": "Introduction to R",
    "section": "Objects",
    "text": "Objects\n\nBasicsVectorListMatrixdata.frameRecognizing the class\n\n\n\nR is an object-oriented programming (OOP), which basically means:\n\n“Everything is an object and everything has a name.”\n\nR has many different object types (classes)\n\nvector\nmatrix\ndata.frame\nlist\nfunction\n\n\n\n\n\n\n\n\nDefinition\n\n\nA vectors is a class of object that consists of elements of the same kind (it can have only one type of elements). You use c() to create a vector.\n\n\n\n\nExample\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nDifferent modes?\nWhat if we mix elements of different mode\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nAll the numeric values are converted to characters.\n\n\n\n\n\n\nDefinition\n\n\nA list is a class of object that consists of elements of mixed types.\n\n\n\n\nExample\n\nA list is very flexible. It can hold basically any type of R objects as its elements.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nWe will see more complex examples later.\n\n\n\n\n\n\n\nDefinition\n\n\nA matrix is a class of object that consists of elements of the same kind (it can have only one element) stored in a two-dimensional array.\n\n\n\n\nExamples\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\ndata.frame is like a matrix (or a list of columns)\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nThere are different kinds of objects that are like “data.frame”\n\ntibble\ndata.table\n\nWe will talk about some of them later.\n\n\n\nWhy?HowVisual inspection\n\n\nIt is critical to recognize the class of the objects:\n\nthe same function does different things depending on the class of the object to which the function is applied\n\nsome functions work on some object classes, but not on others\n\nMany of the errors you will encounter while working on R has something to do with applying functions that are not applicable to the objects you are working on!\n\n\nUse class, typeof, and str commands to know more about what kind of objects you are dealing with:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nYou could also use View() function for visual inspection:\n\nView(yield_data)"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#function",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#function",
    "title": "Introduction to R",
    "section": "Function",
    "text": "Function\n\nWhat is a function?Why functions?Some other useful functionsExercises\n\n\nA function takes R objects (vector, data.frame, etc), processes them, and returns R objects\n\nExample:\nmin() takes a vector of values as an argument and returns the minimum of all the values in the vector\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nFunctions (both base and user-written) are what makes R compelling to use as major statistical and programming software!\nIndeed, this course is pretty much all about learning useful functions that make your life easier\nWe will learn lots of functions that are made available through user-written packages\n\n\n\n\ncreate a sequence of values\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nrepeat values\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nsum values\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nfind the length of an vector\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\ngenerate a vector (call it \\(x\\)) that starts from 1 and increase by 2 until 99\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\ncalculate the sample mean of \\(x\\)\n\n\\(\\frac{1}{n}\\sum_{i=1}^n x_i\\)\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\ncalculate the sample variance of \\(x\\)\n\n\\(\\frac{1}{n}\\sum_{i=1}^n (x_i-\\bar{x})^2\\), where \\(\\bar{x}\\) is the sample mean\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#package",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#package",
    "title": "Introduction to R",
    "section": "Package",
    "text": "Package\n\nWhat are packages?How to use them?\n\n\nA drawer in your work space (R environment) that has specialized tools (functions) to complete tasks.\n\nExample packages:\n\ndplyr (data wrangling)\ndata.table (data wrangling)\nggplot2 (data visualization)\nsf (spatial vector data handling)\nraster (spatial raster data handling)\nstars (spatiotemporal data handling)\n\n\n\n\nBefore you use tools (functions) in the drawer (package), you need to buy (install) it first. You can install a package using the following syntax:\n\n\ninstall.packages(\"package name\")\n\n\n\nFor example,\n\n\ninstall.packages(ggplot2)\n\n\n\nYou need to bring the drawer (package) to your working space (R environment) by using the library() function:\n\n\nlibrary(ggplot2)\n\n\n\nNow, you can start using specialized tools (functions) in the drawer (package)!!"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#working-with-r-or-any-computer-programs",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#working-with-r-or-any-computer-programs",
    "title": "Introduction to R",
    "section": "Working with R (or any computer programs)",
    "text": "Working with R (or any computer programs)\n\nYou are the architect who has the blueprint of the final product, but does not have an ability to build specific pieces by yourself\nYou work with one worker (R) who can build specific pieces perfectly without any error  if given right tools and instructions \nThis worker is weird. If you do not give right tools or your instruction is wrong, he/she will speak up and tell you there has been an error. He/she will not try to figure out how things could have been done differently by himself/herself.\nYour job is to provide the right tools and instructions to the worker (R), and correct your instructions when you found out you made a mistake (debugging)"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#vector-1",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#vector-1",
    "title": "Introduction to R",
    "section": "Vector",
    "text": "Vector\n\nPrepArithmetic operationsAccess elements\n\n\nLet’s define two vectors to work with\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\nNote\n\n\nVector arithmetic operations happen element by element!\n\n\n\n\n\n\n\nTo access element(s) of a vector, you use [] like below:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nYou can access multiple elements of a vector\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#matrix-1",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#matrix-1",
    "title": "Introduction to R",
    "section": "Matrix",
    "text": "Matrix\n\nPrepArithmetic operationsOther operationsAccess elements\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nTo access element(s) of a matrix, you use [] just like we did for a vector. But, now you have two arguments inside [].\n\nmatrix[indices for rows, indices for columns]  \n\n\nExamples\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#list-1",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#list-1",
    "title": "Introduction to R",
    "section": "List",
    "text": "List\n\nAccess elements using [[]]Access elements using $\n\n\nTo access element(s) of a matrix, you can use either [[]] operator for accessing a single element and use [] for multiple elements.\nExample: single element\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nExample: multiple elements\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nYou can also use $ operator to access a single element of a list as long as the element has a name.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#data.frame-1",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#data.frame-1",
    "title": "Introduction to R",
    "section": "data.frame",
    "text": "data.frame\n\nBasicsAccess parts of a data.frame\n\n\ndata.frame (and its relatives)\n\nis the most common object type we use.\nis a special kind of list of vectors that are of the same length that makes a matrix-like structure\nshares properties of both the matrix and the list\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nAccessing parts of a data.frame works like accessing elements of a matrix or list.\n\nExamples\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n We will spend lots of time on how to do data wrangling on data.frames using the tidyverse package!"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#examples",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#examples",
    "title": "Introduction to R",
    "section": "Examples",
    "text": "Examples\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n We will spend lots of time on how to do data wrangling on data.frames using the tidyverse package!"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/Introduction.html#next-class-quarto",
    "href": "lectures/Chapter-1-Introduction/Introduction.html#next-class-quarto",
    "title": "Introduction to R",
    "section": "Next class: Quarto",
    "text": "Next class: Quarto"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "",
    "text": "Importing and exporting data\ndata.frame and tibble\nData manipulation with dplyr: the Basics\nGrouped operations\nExtensions"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#data.frame-and-tibble-1",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#data.frame-and-tibble-1",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "data.frame and tibble",
    "text": "data.frame and tibble\n\nWhat are they?ObjectivesPreparation 1Preparation 2\n\n\ndata.frame\nThe traditional (most common) class of two-dimensional data (rows and columns) supported by R.\n\ntibble\nA relatively newer class of two-dimensional data that brings minor enhancements over data.frame.\ntibble is defined by the tibble package, which is part of the tidyverse package.\n\n\n\nLearn basic operations on data.frame and tibble\nHighlight some differences between the two (They are almost interchangeable, and you do no need to pay much attention to which class of data you are dealing with)\n\n\n\nWe use HousePrices dataset from the AER package.\n\n#--- load the AER package ---#\nlibrary(AER)\n\n#--- load the HousePrices data ---#\ndata(HousePrices)\n\n\nHousePrices is a data.frame.\n\nclass(HousePrices)\n\n[1] \"data.frame\"\n\n\n\n\nYou can convert a data.frame into a tibble using as_tibble():\n\nHousePrices_tbl &lt;- as_tibble(HousePrices)\n\nHousePrices is a tibble (and also a data.frame).\n\nclass(HousePrices_tbl)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\""
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#display-method",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#display-method",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "display method",
    "text": "display method\n\n\ndata.frame\n\nHousePrices\n\n     price lotsize bedrooms bathrooms stories driveway recreation fullbase\n1    42000    5850        3         1       2      yes         no      yes\n2    38500    4000        2         1       1      yes         no       no\n3    49500    3060        3         1       1      yes         no       no\n4    60500    6650        3         1       2      yes        yes       no\n5    61000    6360        2         1       1      yes         no       no\n6    66000    4160        3         1       1      yes        yes      yes\n7    66000    3880        3         2       2      yes         no      yes\n8    69000    4160        3         1       3      yes         no       no\n9    83800    4800        3         1       1      yes        yes      yes\n10   88500    5500        3         2       4      yes        yes       no\n11   90000    7200        3         2       1      yes         no      yes\n12   30500    3000        2         1       1       no         no       no\n13   27000    1700        3         1       2      yes         no       no\n14   36000    2880        3         1       1       no         no       no\n15   37000    3600        2         1       1      yes         no       no\n16   37900    3185        2         1       1      yes         no       no\n17   40500    3300        3         1       2       no         no       no\n18   40750    5200        4         1       3      yes         no       no\n19   45000    3450        1         1       1      yes         no       no\n20   45000    3986        2         2       1       no        yes      yes\n21   48500    4785        3         1       2      yes        yes      yes\n22   65900    4510        4         2       2      yes         no      yes\n23   37900    4000        3         1       2      yes         no       no\n24   38000    3934        2         1       1      yes         no       no\n25   42000    4960        2         1       1      yes         no       no\n26   42300    3000        2         1       2      yes         no       no\n27   43500    3800        2         1       1      yes         no       no\n28   44000    4960        2         1       1      yes         no      yes\n29   44500    3000        3         1       1       no         no       no\n30   44900    4500        3         1       2      yes         no       no\n31   45000    3500        2         1       1       no         no      yes\n32   48000    3500        4         1       2      yes         no       no\n33   49000    4000        2         1       1      yes         no       no\n34   51500    4500        2         1       1      yes         no       no\n35   61000    6360        2         1       2      yes         no       no\n36   61000    4500        2         1       1      yes         no       no\n37   61700    4032        2         1       1      yes         no      yes\n38   67000    5170        3         1       4      yes         no       no\n39   82000    5400        4         2       2      yes         no       no\n40   54500    3150        2         2       1       no         no      yes\n41   66500    3745        3         1       2      yes         no      yes\n42   70000    4520        3         1       2      yes         no      yes\n43   82000    4640        4         1       2      yes         no       no\n44   92000    8580        5         3       2      yes         no       no\n45   38000    2000        2         1       2      yes         no       no\n46   44000    2160        3         1       2       no         no      yes\n47   41000    3040        2         1       1       no         no       no\n48   43000    3090        3         1       2       no         no       no\n49   48000    4960        4         1       3       no         no       no\n50   54800    3350        3         1       2      yes         no       no\n51   55000    5300        5         2       2      yes         no       no\n52   57000    4100        4         1       1       no         no      yes\n53   68000    9166        2         1       1      yes         no      yes\n54   95000    4040        3         1       2      yes         no      yes\n55   38000    3630        3         3       2       no        yes       no\n56   25000    3620        2         1       1      yes         no       no\n57   25245    2400        3         1       1       no         no       no\n58   56000    7260        3         2       1      yes        yes      yes\n59   35500    4400        3         1       2      yes         no       no\n60   30000    2400        3         1       2      yes         no       no\n61   48000    4120        2         1       2      yes         no       no\n62   48000    4750        2         1       1      yes         no       no\n63   52000    4280        2         1       1      yes         no       no\n64   54000    4820        3         1       2      yes         no       no\n65   56000    5500        4         1       2      yes        yes      yes\n66   60000    5500        3         1       2      yes         no       no\n67   60000    5040        3         1       2      yes         no      yes\n68   67000    6000        2         1       1      yes         no      yes\n69   47000    2500        2         1       1       no         no       no\n70   70000    4095        3         1       2       no        yes      yes\n71   45000    4095        2         1       1      yes         no       no\n72   51000    3150        3         1       2      yes         no      yes\n73   32500    1836        2         1       1       no         no      yes\n74   34000    2475        3         1       2      yes         no       no\n75   35000    3210        3         1       2      yes         no      yes\n76   36000    3180        3         1       1       no         no       no\n77   45000    1650        3         1       2       no         no      yes\n78   47000    3180        4         1       2      yes         no      yes\n79   55000    3180        2         2       1      yes         no      yes\n80   63900    6360        2         1       1      yes         no      yes\n81   50000    4240        3         1       2      yes         no       no\n82   35000    3240        2         1       1       no        yes       no\n83   50000    3650        3         1       2      yes         no       no\n84   43000    3240        3         1       2      yes         no       no\n85   55500    3780        2         1       2      yes        yes      yes\n86   57000    6480        3         1       2       no         no       no\n87   60000    5850        2         1       1      yes        yes      yes\n88   78000    3150        3         2       1      yes        yes      yes\n89   35000    3000        2         1       1      yes         no       no\n90   44000    3090        2         1       1      yes        yes      yes\n91   47000    6060        3         1       1      yes        yes      yes\n92   58000    5900        4         2       2       no         no      yes\n93  163000    7420        4         1       2      yes        yes      yes\n94  128000    8500        3         2       4      yes         no       no\n95  123500    8050        3         1       1      yes        yes      yes\n96   39000    6800        2         1       1      yes         no       no\n97   53900    8250        3         1       1      yes         no       no\n98   59900    8250        3         1       1      yes         no      yes\n99   35000    3500        2         1       1      yes        yes       no\n100  43000    2835        2         1       1      yes         no       no\n101  57000    4500        3         2       2       no         no      yes\n102  79000    3300        3         3       2      yes         no      yes\n103 125000    4320        3         1       2      yes         no      yes\n104 132000    3500        4         2       2      yes         no       no\n105  58000    4992        3         2       2      yes         no       no\n106  43000    4600        2         1       1      yes         no       no\n107  48000    3720        2         1       1       no         no       no\n108  58500    3680        3         2       2      yes         no       no\n109  73000    3000        3         2       2      yes        yes      yes\n110  63500    3750        2         1       1      yes        yes      yes\n111  43000    5076        3         1       1       no         no       no\n112  46500    4500        2         1       1       no         no       no\n113  92000    5000        3         1       2      yes         no       no\n114  75000    4260        4         1       2      yes         no      yes\n115  75000    6540        4         2       2       no         no       no\n116  85000    3700        4         1       2      yes        yes       no\n117  93000    3760        3         1       2      yes         no       no\n118  94500    4000        3         2       2      yes         no      yes\n119 106500    4300        3         2       2      yes         no      yes\n120 116000    6840        5         1       2      yes        yes      yes\n121  61500    4400        2         1       1      yes         no       no\n122  80000   10500        4         2       2      yes         no       no\n123  37000    4400        2         1       1      yes         no       no\n124  59500    4840        3         1       2      yes         no       no\n125  70000    4120        2         1       1      yes         no      yes\n126  95000    4260        4         2       2      yes         no       no\n127 117000    5960        3         3       2      yes        yes      yes\n128 122500    8800        3         2       2      yes         no       no\n129 123500    4560        3         2       2      yes        yes      yes\n130 127000    4600        3         2       2      yes        yes       no\n131  35000    4840        2         1       2      yes         no       no\n132  44500    3850        3         1       2      yes         no       no\n133  49900    4900        3         1       2       no         no       no\n134  50500    3850        3         1       1      yes         no       no\n135  65000    3760        3         1       1      yes         no       no\n136  90000    6000        4         2       4      yes         no       no\n137  46000    4370        3         1       2      yes         no       no\n138  35000    7700        2         1       1      yes         no       no\n139  26500    2990        2         1       1       no         no       no\n140  43000    3750        3         1       2      yes         no       no\n141  56000    3000        3         1       2      yes         no       no\n142  40000    2650        3         1       2      yes         no      yes\n143  51000    4500        4         2       2      yes         no      yes\n144  51000    4500        2         1       1       no         no       no\n145  57250    4500        3         1       2       no         no      yes\n146  44000    4500        2         1       2      yes         no       no\n147  61000    2175        3         1       2       no        yes      yes\n148  62000    4500        3         2       3      yes         no       no\n149  80000    4800        5         2       3       no         no      yes\n150  50000    4600        4         1       2      yes         no       no\n151  59900    3450        3         1       2      yes         no       no\n152  35500    3000        3         1       2       no         no       no\n153  37000    3600        2         2       2      yes         no      yes\n154  42000    3600        3         1       2       no         no       no\n155  48000    3750        3         1       1      yes         no       no\n156  60000    2610        4         3       2       no         no       no\n157  60000    2953        3         1       2      yes         no      yes\n158  60000    2747        4         2       2       no         no       no\n159  62000    1905        5         1       2       no         no      yes\n160  63000    3968        3         1       2       no         no       no\n161  63900    3162        3         1       2      yes         no       no\n162 130000    6000        4         1       2      yes         no      yes\n163  25000    2910        3         1       1       no         no       no\n164  50000    2135        3         2       2       no         no       no\n165  52900    3120        3         1       2       no         no      yes\n166  62000    4075        3         1       1      yes        yes      yes\n167  73500    3410        3         1       2       no         no       no\n168  38000    2800        3         1       1      yes         no       no\n169  46000    2684        2         1       1      yes         no       no\n170  48000    3100        3         1       2       no         no      yes\n171  52500    3630        2         1       1      yes         no      yes\n172  32000    1950        3         1       1       no         no       no\n173  38000    2430        3         1       1       no         no       no\n174  46000    4320        3         1       1       no         no       no\n175  50000    3036        3         1       2      yes         no      yes\n176  57500    3630        3         2       2      yes         no       no\n177  70000    5400        4         1       2      yes         no       no\n178  69900    3420        4         2       2      yes         no      yes\n179  74500    3180        3         2       2      yes         no       no\n180  42000    3660        4         1       2       no         no       no\n181  60000    4410        2         1       1       no         no       no\n182  50000    3990        3         1       2      yes         no       no\n183  58000    4340        3         1       1      yes         no       no\n184  63900    3510        3         1       2      yes         no       no\n185  28000    3420        5         1       2       no         no       no\n186  54000    3420        2         1       2      yes         no       no\n187  44700    5495        3         1       1      yes         no      yes\n188  47000    3480        4         1       2       no         no       no\n189  50000    7424        3         1       1       no         no       no\n190  57250    3460        4         1       2      yes         no       no\n191  67000    3630        3         1       2      yes         no       no\n192  52500    3630        2         1       1      yes         no       no\n193  42000    3480        3         1       2       no         no       no\n194  57500    3460        3         2       1      yes         no      yes\n195  33000    3180        2         1       1      yes         no       no\n196  34400    3635        2         1       1       no         no       no\n197  40000    3960        3         1       1      yes         no       no\n198  40500    4350        3         1       2       no         no       no\n199  46500    3930        2         1       1       no         no       no\n200  52000    3570        3         1       2      yes         no      yes\n201  53000    3600        3         1       1      yes         no       no\n202  53900    2520        5         2       1       no         no      yes\n203  50000    3480        3         1       1       no         no       no\n204  55500    3180        4         2       2      yes         no       no\n205  56000    3290        2         1       1      yes         no       no\n206  60000    4000        4         2       2       no         no       no\n207  60000    2325        3         1       2       no         no       no\n208  69500    4350        2         1       1      yes         no      yes\n209  72000    3540        2         1       1       no        yes      yes\n210  92500    3960        3         1       1      yes         no      yes\n211  40500    2640        2         1       1       no         no       no\n212  42000    2700        2         1       1       no         no       no\n213  47900    2700        3         1       1       no         no       no\n214  52000    3180        3         1       2       no         no      yes\n215  62000    3500        4         1       2      yes         no       no\n216  41000    3630        2         1       1      yes         no       no\n217 138300    6000        4         3       2      yes        yes      yes\n218  42000    3150        3         1       2       no         no       no\n219  47000    3792        4         1       2      yes         no       no\n220  64500    3510        3         1       3      yes         no       no\n221  46000    3120        3         1       2       no         no       no\n222  58000    3000        4         1       3      yes         no      yes\n223  70100    4200        3         1       2      yes         no       no\n224  78500    2817        4         2       2       no        yes      yes\n225  87250    3240        4         1       3      yes         no       no\n226  70800    2800        3         2       2       no         no      yes\n227  56000    3816        2         1       1      yes         no      yes\n228  48000    3185        2         1       1      yes         no      yes\n229  68000    6321        3         1       2      yes         no      yes\n230  79000    3650        3         2       2      yes         no       no\n231  80000    4700        4         1       2      yes        yes      yes\n232  87000    6615        4         2       2      yes        yes       no\n233  25000    3850        3         1       2      yes         no       no\n234  32500    3970        1         1       1       no         no       no\n235  36000    3000        2         1       2      yes         no       no\n236  42500    4352        4         1       2       no         no       no\n237  43000    3630        4         1       2      yes         no       no\n238  50000    3600        6         1       2      yes         no       no\n239  26000    3000        2         1       1      yes         no      yes\n240  30000    3000        4         1       2      yes         no       no\n241  34000    2787        4         2       2      yes         no       no\n242  52000    3000        2         1       2      yes         no       no\n243  70000    4770        3         1       1      yes        yes      yes\n244  27000    3649        2         1       1      yes         no       no\n245  32500    3970        3         1       2      yes         no      yes\n246  37200    2910        2         1       1       no         no       no\n247  38000    3480        2         1       1      yes         no       no\n248  42000    6615        3         1       2      yes         no       no\n249  44500    3500        2         1       1      yes         no       no\n250  45000    3450        3         1       2      yes         no      yes\n251  48500    3450        3         1       1      yes         no      yes\n252  52000    3520        2         2       1      yes         no      yes\n253  53900    6930        4         1       2       no         no       no\n254  60000    4600        3         2       2      yes         no       no\n255  61000    4360        4         1       2      yes         no       no\n256  64500    3450        3         1       2      yes         no      yes\n257  71000    4410        4         3       2      yes         no      yes\n258  75500    4600        2         2       1      yes         no       no\n259  33500    3640        2         1       1      yes         no       no\n260  41000    6000        2         1       1      yes         no       no\n261  41000    5400        4         1       2      yes         no       no\n262  46200    3640        4         1       2      yes         no      yes\n263  48500    3640        2         1       1      yes         no       no\n264  48900    4040        2         1       1      yes         no       no\n265  50000    3640        2         1       1      yes         no       no\n266  51000    3640        2         1       1      yes         no       no\n267  52500    5640        2         1       1       no         no       no\n268  52500    3600        2         1       1      yes         no       no\n269  54000    3600        2         1       1      yes         no       no\n270  59000    4632        4         1       2      yes         no       no\n271  60000    3640        3         2       2      yes         no      yes\n272  63000    4900        2         1       2      yes         no      yes\n273  64000    4510        4         1       2      yes         no       no\n274  64900    4100        2         2       1      yes        yes      yes\n275  65000    3640        3         1       2      yes         no       no\n276  66000    5680        3         1       2      yes        yes       no\n277  70000    6300        3         1       1      yes         no       no\n278  65500    4000        3         1       2      yes         no       no\n279  57000    3960        3         1       2      yes         no       no\n280  52000    5960        3         1       2      yes        yes      yes\n281  54000    5830        2         1       1      yes         no       no\n282  74500    4500        4         2       1       no         no      yes\n283  90000    4100        3         2       3      yes         no       no\n284  45000    6750        2         1       1      yes         no       no\n285  45000    9000        3         1       2      yes         no       no\n286  65000    2550        3         1       2      yes         no      yes\n287  55000    7152        3         1       2      yes         no       no\n288  62000    6450        4         1       2      yes         no       no\n289  30000    3360        2         1       1      yes         no       no\n290  34000    3264        2         1       1      yes         no       no\n291  38000    4000        3         1       1      yes         no       no\n292  39000    4000        3         1       2      yes         no       no\n293  45000    3069        2         1       1      yes         no       no\n294  47000    4040        2         1       1      yes         no       no\n295  47500    4040        2         1       1      yes         no       no\n296  49000    3185        2         1       1      yes         no       no\n297  50000    5900        2         1       1      yes         no       no\n298  50000    3120        3         1       2      yes         no       no\n299  52900    5450        2         1       1      yes         no       no\n300  53000    4040        2         1       1      yes         no       no\n301  55000    4080        2         1       1      yes         no       no\n302  56000    8080        3         1       1      yes         no       no\n303  58500    4040        2         1       2      yes         no       no\n304  59500    4080        3         1       2      yes         no       no\n305  60000    5800        3         1       1      yes         no       no\n306  64000    5885        2         1       1      yes         no       no\n307  67000    9667        4         2       2      yes        yes      yes\n308  68100    3420        4         2       2      yes         no       no\n309  70000    5800        2         1       1      yes        yes      yes\n310  72000    7600        4         1       2      yes         no       no\n311  57500    5400        3         1       1      yes         no       no\n312  69900    4995        4         2       1      yes         no      yes\n313  70000    3000        3         1       2      yes         no      yes\n314  75000    5500        3         2       1      yes         no      yes\n315  76900    6450        3         2       1      yes        yes      yes\n316  78000    6210        4         1       4      yes        yes       no\n317  80000    5000        3         1       4      yes         no       no\n318  82000    5000        3         1       3      yes         no       no\n319  83000    5828        4         1       4      yes        yes       no\n320  83000    5200        3         1       3      yes         no       no\n321  83900    5500        3         1       3      yes        yes       no\n322  88500    6350        3         2       3      yes        yes       no\n323  93000    8250        3         2       3      yes         no       no\n324  98000    6000        3         1       1      yes         no       no\n325  98500    7700        3         2       1      yes         no       no\n326  99000    8880        3         2       2      yes         no      yes\n327 101000    8880        2         1       1      yes         no       no\n328 110000    6480        3         2       4      yes         no       no\n329 115442    7000        3         2       4      yes         no       no\n330 120000    8875        3         1       1      yes         no       no\n331 124000    7155        3         2       1      yes        yes      yes\n332 175000    8960        4         4       4      yes         no       no\n333  50000    7350        2         1       1      yes         no       no\n334  55000    3850        2         1       1      yes         no       no\n335  60000    7000        3         1       1      yes         no       no\n336  61000    7770        2         1       1      yes         no       no\n337 106000    7440        3         2       1      yes        yes      yes\n338 155000    7500        3         3       1      yes         no      yes\n339 141000    8100        4         1       2      yes        yes      yes\n340  62500    3900        3         1       2      yes         no       no\n341  70000    2970        3         1       3      yes         no       no\n342  73000    3000        3         1       2      yes         no      yes\n343  80000   10500        2         1       1      yes         no       no\n344  80000    5500        3         2       2      yes         no       no\n345  88000    4500        3         1       4      yes         no       no\n346  49000    3850        3         1       1      yes         no       no\n347  52000    4130        3         2       2      yes         no       no\n348  59500    4046        3         1       2      yes         no      yes\n349  60000    4079        3         1       3      yes         no       no\n350  64000    4000        3         1       2      yes         no       no\n351  64500    9860        3         1       1      yes         no       no\n352  68500    7000        3         1       2      yes         no      yes\n353  78500    7980        3         1       1      yes         no       no\n354  86000    6800        2         1       1      yes        yes      yes\n355  86900    4300        6         2       2      yes         no       no\n356  75000   10269        3         1       1      yes         no       no\n357  78000    6100        3         1       3      yes        yes       no\n358  95000    6420        3         2       3      yes         no       no\n359  97000   12090        4         2       2      yes         no       no\n360 107000    6600        3         1       4      yes         no       no\n361 130000    6600        4         2       2      yes        yes      yes\n362 145000    8580        4         3       4      yes         no       no\n363 175000    9960        3         2       2      yes         no      yes\n364  72000   10700        3         1       2      yes        yes      yes\n365  84900   15600        3         1       1      yes         no       no\n366  99000   13200        2         1       1      yes         no      yes\n367 114000    9000        4         2       4      yes         no       no\n368 120000    7950        5         2       2      yes         no      yes\n369 145000   16200        5         3       2      yes         no       no\n370  79000    6100        3         2       1      yes         no      yes\n371  82000    6360        3         1       1      yes        yes      yes\n372  85000    6420        3         1       1      yes         no      yes\n373 100500    6360        4         2       3      yes         no       no\n374 122000    6540        4         2       2      yes        yes      yes\n375 126500    6420        3         2       2      yes         no       no\n376 133000    6550        4         2       2      yes         no       no\n377 140000    5750        3         2       4      yes        yes       no\n378 190000    7420        4         2       3      yes         no       no\n379  84000    7160        3         1       1      yes         no      yes\n380  97000    4000        3         2       2      yes         no      yes\n381 103500    9000        4         2       4      yes        yes       no\n382 112500    6550        3         1       2      yes         no      yes\n383 140000   13200        3         1       2      yes         no      yes\n384  74700    7085        3         1       1      yes        yes      yes\n385  78000    6600        4         2       2      yes        yes      yes\n386  78900    6900        3         1       1      yes        yes      yes\n387  83900   11460        3         1       3      yes         no       no\n388  85000    7020        3         1       1      yes         no      yes\n389  85000    6540        3         1       1      yes        yes      yes\n390  86000    8000        3         1       1      yes        yes      yes\n391  86900    9620        3         1       1      yes         no      yes\n392  94500   10500        3         2       1      yes         no      yes\n393  96000    5020        3         1       4      yes         no       no\n394 106000    7440        3         2       4      yes         no       no\n395  72000    6600        3         1       1      yes        yes      yes\n396  74500    7200        3         1       2      yes        yes      yes\n397  77000    6710        3         2       2      yes        yes      yes\n398  80750    6660        4         2       2      yes        yes      yes\n399  82900    7000        3         1       1      yes         no      yes\n400  85000    7231        3         1       2      yes        yes      yes\n401  92500    7410        3         1       1      yes        yes      yes\n402  76000    7800        3         1       1      yes         no      yes\n403  77500    6825        3         1       1      yes        yes      yes\n404  80000    6360        3         1       3      yes         no       no\n405  80000    6600        4         2       1      yes         no      yes\n406  86000    6900        3         2       1      yes        yes      yes\n407  87000    6600        3         1       1      yes        yes      yes\n408  87500    6420        3         1       3      yes         no      yes\n409  89000    6600        3         2       1      yes         no      yes\n410  89900    6600        3         2       3      yes         no       no\n411  90000    9000        3         1       1      yes         no      yes\n412  95000    6500        3         2       3      yes         no       no\n413 112000    6360        3         2       4      yes         no       no\n414  31900    5300        3         1       1       no         no       no\n415  52000    2850        3         2       2       no         no      yes\n416  90000    6400        3         1       1      yes        yes      yes\n417 100000   11175        3         1       1      yes         no      yes\n418  91700    6750        2         1       1      yes        yes      yes\n419 174500    7500        4         2       2      yes         no      yes\n420  94700    6000        3         1       2      yes         no       no\n421  68000   10240        2         1       1      yes         no       no\n422  80000    5136        3         1       2      yes        yes      yes\n423  61100    3400        3         1       2      yes         no      yes\n424  62900    2880        3         1       2      yes         no       no\n425  65500    3840        3         1       2      yes         no       no\n426  66000    2870        2         1       2      yes        yes      yes\n427  49500    5320        2         1       1      yes         no       no\n428  50000    3512        2         1       1      yes         no       no\n429  53500    3480        2         1       1      yes         no       no\n430  58550    3600        3         1       1      yes         no      yes\n431  64500    3520        2         1       2      yes         no       no\n432  65000    5320        3         1       2      yes        yes      yes\n433  69000    6040        3         1       1      yes         no       no\n434  73000   11410        2         1       2      yes         no       no\n435  75000    8400        3         1       2      yes        yes      yes\n436  75000    5300        4         2       1      yes         no       no\n437 132000    7800        3         2       2      yes         no       no\n438  60000    3520        3         1       2      yes         no       no\n439  65000    5360        3         1       2      yes         no       no\n440  69000    6862        3         1       2      yes         no       no\n441  51900    3520        3         1       1      yes         no       no\n442  57000    4050        2         1       2      yes        yes      yes\n443  65000    3520        3         1       1      yes         no       no\n444  79500    4400        4         1       2      yes         no       no\n445  72500    5720        2         1       2      yes         no       no\n446 104900   11440        4         1       2      yes         no      yes\n447 114900    7482        3         2       3      yes         no       no\n448 120000    5500        4         2       2      yes         no      yes\n449  58000    4320        3         1       2      yes         no       no\n450  67000    5400        2         1       2      yes         no       no\n451  67000    4320        3         1       1      yes         no       no\n452  69000    4815        2         1       1      yes         no       no\n453  73000    6100        3         1       1      yes         no      yes\n454  73500    7980        3         1       1      yes         no       no\n455  74900    6050        3         1       1      yes         no      yes\n456  75000    3800        3         1       2      yes        yes      yes\n457  79500    5400        5         1       2      yes        yes      yes\n458 120900    6000        3         2       4      yes        yes      yes\n459  44555    2398        3         1       1      yes         no       no\n460  47000    2145        3         1       2      yes         no      yes\n461  47600    2145        3         1       2      yes         no      yes\n462  49000    2145        3         1       3      yes         no       no\n463  49000    2610        3         1       2      yes         no      yes\n464  49000    1950        3         2       2      yes         no      yes\n465  49500    2145        3         1       3      yes         no       no\n466  52000    2275        3         1       3      yes         no       no\n467  54000    2856        3         1       3      yes         no       no\n468  55000    2015        3         1       2      yes         no      yes\n469  55000    2176        2         1       2      yes        yes       no\n470  56000    2145        4         2       1      yes         no      yes\n471  60000    2145        3         1       3      yes         no       no\n472  60500    2787        3         1       1      yes         no      yes\n473  50000    9500        3         1       2      yes         no       no\n474  64900    4990        4         2       2      yes        yes      yes\n475  93000    6670        3         1       3      yes         no      yes\n476  85000    6254        4         2       1      yes         no      yes\n477  61500   10360        2         1       1      yes         no       no\n478  88500    5500        3         2       1      yes        yes      yes\n479  88000    5450        4         2       1      yes         no      yes\n480  89000    5500        3         1       3      yes         no       no\n481  89500    6000        4         1       3      yes        yes      yes\n482  95000    5700        3         1       1      yes        yes      yes\n483  95500    6600        2         2       4      yes         no      yes\n484  51500    4000        2         1       1      yes         no       no\n485  62900    4880        3         1       1      yes         no       no\n486 118500    4880        4         2       2      yes         no       no\n487  42900    8050        2         1       1      yes         no       no\n488  44100    8100        2         1       1      yes         no       no\n489  47000    5880        3         1       1      yes         no       no\n490  50000    5880        2         1       1      yes         no       no\n491  50000   12944        3         1       1      yes         no       no\n492  53000    6020        3         1       1      yes         no       no\n493  53000    4050        2         1       1      yes         no       no\n494  54000    8400        2         1       1      yes         no       no\n495  58500    5600        2         1       1      yes         no       no\n496  59000    5985        3         1       1      yes         no      yes\n497  60000    4500        3         1       1      yes         no      yes\n498  62900    4920        3         1       2      yes         no       no\n499  64000    8250        3         1       1      yes         no       no\n500  65000    8400        4         1       4      yes         no       no\n501  67900    6440        2         1       1      yes         no       no\n502  68500    8100        4         1       4      yes         no      yes\n503  70000    6720        3         1       1      yes         no       no\n504  70500    5948        3         1       2      yes         no       no\n505  71500    8150        3         2       1      yes        yes      yes\n506  71900    4800        2         1       1      yes        yes      yes\n507  75000    9800        4         2       2      yes        yes       no\n508  75000    8520        3         1       1      yes         no       no\n509  87000    8372        3         1       3      yes         no       no\n510  64000    4040        3         1       2      yes         no       no\n511  70000    4646        3         1       2      yes        yes      yes\n512  47500    4775        4         1       2      yes         no       no\n513  62600    4950        4         1       2      yes         no       no\n514  66000    5010        3         1       2      yes         no      yes\n515  58900    6060        2         1       1      yes         no      yes\n516  53000    3584        2         1       1      yes         no       no\n517  95000    6000        3         2       3      yes        yes       no\n518  96500    6000        4         2       4      yes         no       no\n519 101000    6240        4         2       2      yes         no       no\n520 102000    6000        3         2       2      yes        yes       no\n521 103000    7680        4         2       4      yes        yes       no\n522 105000    6000        4         2       4      yes        yes       no\n523 108000    6000        4         2       4      yes         no       no\n524 110000    6000        4         2       4      yes         no       no\n525 113000    6000        4         2       4      yes         no       no\n526 120000    7475        3         2       4      yes         no       no\n527 105000    5150        3         2       4      yes         no       no\n528 106000    6325        3         1       4      yes         no       no\n529 107500    6000        3         2       4      yes         no       no\n530 108000    6000        3         2       3      yes         no       no\n531 113750    6000        3         1       4      yes        yes       no\n532 120000    7000        3         1       4      yes         no       no\n533  70000   12900        3         1       1      yes         no       no\n534  71000    7686        3         1       1      yes        yes      yes\n535  82000    5000        3         1       3      yes         no       no\n536  82000    5800        3         2       4      yes         no       no\n537  82500    6000        3         2       4      yes         no       no\n538  83000    4800        3         1       3      yes         no       no\n539  84000    6500        3         2       3      yes         no       no\n540  85000    7320        4         2       2      yes         no       no\n541  85000    6525        3         2       4      yes         no       no\n542  91500    4800        3         2       4      yes        yes       no\n543  94000    6000        3         2       4      yes         no       no\n544 103000    6000        3         2       4      yes        yes       no\n545 105000    6000        3         2       2      yes        yes       no\n546 105000    6000        3         1       2      yes         no       no\n    gasheat aircon garage prefer\n1        no     no      1     no\n2        no     no      0     no\n3        no     no      0     no\n4        no     no      0     no\n5        no     no      0     no\n6        no    yes      0     no\n7        no     no      2     no\n8        no     no      0     no\n9        no     no      0     no\n10       no    yes      1     no\n11       no    yes      3     no\n12       no     no      0     no\n13       no     no      0     no\n14       no     no      0     no\n15       no     no      0     no\n16       no    yes      0     no\n17       no     no      1     no\n18       no     no      0     no\n19       no     no      0     no\n20       no     no      1     no\n21       no    yes      1     no\n22       no     no      0     no\n23       no    yes      0     no\n24       no     no      0     no\n25       no     no      0     no\n26       no     no      0     no\n27       no     no      0     no\n28       no    yes      0     no\n29       no    yes      0     no\n30       no    yes      0     no\n31       no     no      0     no\n32       no    yes      2     no\n33       no     no      0     no\n34       no     no      0     no\n35       no     no      0     no\n36       no    yes      2     no\n37       no     no      0     no\n38       no    yes      0     no\n39       no    yes      2     no\n40       no     no      0     no\n41       no     no      0     no\n42       no    yes      0     no\n43       no     no      1     no\n44       no     no      2     no\n45       no     no      0     no\n46       no     no      0     no\n47       no     no      0     no\n48       no     no      0     no\n49       no     no      0     no\n50       no     no      0     no\n51       no     no      0     no\n52       no     no      0     no\n53       no    yes      2     no\n54      yes     no      1     no\n55       no     no      0     no\n56       no     no      0     no\n57       no     no      0     no\n58       no     no      3     no\n59       no     no      0     no\n60       no     no      0     no\n61       no     no      0     no\n62       no     no      0     no\n63       no    yes      2     no\n64       no     no      0     no\n65       no     no      0     no\n66       no    yes      0     no\n67       no    yes      0     no\n68       no    yes      1     no\n69       no    yes      0     no\n70       no    yes      0     no\n71       no     no      2     no\n72       no     no      0     no\n73       no     no      0     no\n74       no     no      0     no\n75       no     no      0     no\n76       no     no      0     no\n77       no     no      0     no\n78       no    yes      0     no\n79       no     no      2     no\n80       no    yes      1     no\n81       no    yes      0     no\n82       no     no      1     no\n83       no     no      0     no\n84       no     no      2     no\n85       no     no      0     no\n86       no    yes      1     no\n87       no     no      2     no\n88       no    yes      0     no\n89       no     no      1     no\n90       no     no      0     no\n91       no     no      0     no\n92       no     no      1     no\n93       no    yes      2     no\n94       no    yes      2     no\n95       no    yes      1     no\n96       no     no      0     no\n97       no     no      2     no\n98       no     no      3     no\n99       no     no      0     no\n100      no     no      0     no\n101      no    yes      0     no\n102      no     no      0     no\n103     yes     no      2     no\n104     yes     no      2     no\n105      no     no      2     no\n106      no     no      0     no\n107      no    yes      0     no\n108      no     no      0     no\n109      no     no      0     no\n110      no     no      0     no\n111      no     no      0     no\n112      no     no      0     no\n113      no    yes      0     no\n114      no    yes      0     no\n115      no    yes      0     no\n116      no    yes      0     no\n117     yes     no      2     no\n118      no    yes      1     no\n119      no     no      1     no\n120      no    yes      1     no\n121      no     no      1     no\n122      no     no      1     no\n123      no     no      0     no\n124      no     no      1     no\n125      no     no      1     no\n126     yes     no      0     no\n127      no     no      1     no\n128      no    yes      2     no\n129      no    yes      1     no\n130      no    yes      2     no\n131      no     no      0     no\n132      no     no      0     no\n133      no     no      0     no\n134      no     no      2     no\n135      no     no      2     no\n136      no     no      1     no\n137      no     no      0     no\n138      no     no      0     no\n139      no     no      1     no\n140      no     no      0     no\n141      no     no      0     no\n142      no     no      1     no\n143      no     no      2     no\n144      no     no      0     no\n145      no    yes      0     no\n146     yes     no      1     no\n147      no    yes      0     no\n148     yes     no      1     no\n149     yes     no      0     no\n150      no     no      0     no\n151      no     no      1     no\n152      no     no      0     no\n153      no     no      1     no\n154      no     no      1     no\n155      no     no      0     no\n156      no     no      0     no\n157      no    yes      0     no\n158      no     no      0     no\n159      no     no      0     no\n160      no     no      0     no\n161      no    yes      1     no\n162      no     no      2     no\n163      no     no      0     no\n164      no     no      0     no\n165     yes     no      0     no\n166      no     no      2     no\n167      no    yes      0     no\n168      no     no      0     no\n169      no    yes      1     no\n170      no     no      0     no\n171      no     no      0     no\n172     yes     no      0     no\n173      no     no      0     no\n174      no     no      1     no\n175      no     no      0     no\n176     yes     no      2     no\n177      no     no      0     no\n178      no    yes      2     no\n179      no     no      2     no\n180      no     no      0     no\n181      no     no      1     no\n182      no     no      0     no\n183      no     no      0     no\n184      no     no      0     no\n185      no     no      0     no\n186     yes     no      1     no\n187      no     no      0     no\n188      no     no      1     no\n189      no     no      0     no\n190      no    yes      0     no\n191      no     no      2     no\n192      no    yes      0     no\n193      no     no      1     no\n194      no    yes      1     no\n195      no     no      0     no\n196      no     no      0     no\n197      no     no      0     no\n198     yes     no      1     no\n199      no     no      0     no\n200      no     no      0     no\n201      no     no      1     no\n202      no    yes      1     no\n203      no    yes      0     no\n204      no     no      0     no\n205     yes     no      1     no\n206      no     no      0     no\n207      no     no      0     no\n208      no     no      0     no\n209      no     no      0     no\n210      no     no      2     no\n211      no     no      1     no\n212      no     no      0     no\n213      no     no      0     no\n214      no     no      0     no\n215      no     no      2     no\n216      no     no      0     no\n217     yes     no      2     no\n218      no     no      0     no\n219      no     no      0     no\n220      no     no      0     no\n221      no     no      0     no\n222      no    yes      2     no\n223      no     no      1     no\n224      no     no      1     no\n225      no     no      1     no\n226      no    yes      1     no\n227      no    yes      2     no\n228      no     no      2     no\n229      no    yes      1     no\n230      no     no      2     no\n231      no    yes      1     no\n232     yes     no      1     no\n233      no     no      0     no\n234      no     no      0     no\n235      no     no      0     no\n236      no     no      1     no\n237      no     no      3     no\n238      no     no      1     no\n239      no     no      2     no\n240      no     no      0     no\n241      no     no      0     no\n242      no    yes      0     no\n243      no     no      0     no\n244      no     no      0     no\n245      no     no      0     no\n246      no     no      0     no\n247      no     no      1     no\n248      no     no      0     no\n249      no     no      0     no\n250      no     no      0     no\n251      no     no      2     no\n252      no     no      0     no\n253      no     no      1     no\n254      no    yes      1     no\n255      no     no      0     no\n256      no     no      1     no\n257      no     no      2     no\n258      no    yes      2     no\n259      no     no      0     no\n260      no     no      0     no\n261      no     no      0     no\n262      no     no      0     no\n263      no     no      0     no\n264      no     no      0     no\n265      no     no      1     no\n266      no     no      0     no\n267      no     no      0     no\n268      no     no      0     no\n269      no     no      0     no\n270      no    yes      0     no\n271      no     no      0     no\n272      no     no      0     no\n273      no    yes      2     no\n274      no     no      0     no\n275      no    yes      0     no\n276      no    yes      1     no\n277      no    yes      2     no\n278      no     no      1     no\n279      no     no      0     no\n280      no     no      0     no\n281      no     no      2     no\n282      no    yes      2     no\n283      no    yes      2     no\n284      no     no      0     no\n285      no     no      2     no\n286      no     no      0     no\n287      no    yes      0     no\n288      no     no      0     no\n289      no     no      1     no\n290      no     no      0     no\n291      no     no      0     no\n292      no     no      1     no\n293      no     no      1     no\n294      no     no      0     no\n295      no     no      1     no\n296      no     no      2     no\n297      no     no      1     no\n298      no     no      1     no\n299      no     no      0     no\n300      no     no      0     no\n301      no     no      0     no\n302      no    yes      2     no\n303      no     no      1     no\n304      no     no      2     no\n305     yes     no      2     no\n306      no    yes      1     no\n307      no     no      1     no\n308      no     no      0     no\n309      no    yes      0     no\n310      no    yes      2     no\n311      no     no      3     no\n312      no     no      0     no\n313      no    yes      0     no\n314      no     no      0     no\n315     yes     no      0     no\n316      no    yes      0     no\n317      no     no      0     no\n318      no    yes      0     no\n319      no     no      0     no\n320      no    yes      0     no\n321      no    yes      1     no\n322      no    yes      0     no\n323      no    yes      0     no\n324      no    yes      1     no\n325      no     no      2     no\n326      no    yes      1     no\n327      no    yes      1     no\n328      no    yes      2     no\n329      no    yes      2     no\n330      no     no      1     no\n331      no    yes      2     no\n332      no    yes      3     no\n333      no     no      1     no\n334      no     no      0     no\n335      no     no      3     no\n336      no     no      1     no\n337      no    yes      0    yes\n338      no    yes      2    yes\n339      no    yes      2    yes\n340      no     no      0     no\n341      no     no      0     no\n342      no     no      0     no\n343      no     no      1     no\n344      no     no      1     no\n345      no    yes      0     no\n346      no     no      0     no\n347      no     no      2     no\n348      no     no      1     no\n349      no     no      0     no\n350      no     no      2     no\n351      no     no      0     no\n352      no     no      0     no\n353      no     no      2     no\n354      no     no      2     no\n355      no     no      0     no\n356      no     no      1    yes\n357      no    yes      0    yes\n358      no    yes      0    yes\n359      no     no      2    yes\n360      no    yes      3    yes\n361      no    yes      1    yes\n362      no    yes      2    yes\n363      no     no      2    yes\n364      no     no      0     no\n365      no    yes      2     no\n366     yes     no      1     no\n367      no    yes      2     no\n368     yes     no      2     no\n369      no     no      0     no\n370      no     no      2    yes\n371      no    yes      2    yes\n372      no    yes      0    yes\n373      no    yes      2    yes\n374      no    yes      2    yes\n375      no    yes      1    yes\n376      no    yes      1    yes\n377      no    yes      1    yes\n378      no    yes      2    yes\n379      no     no      2    yes\n380      no    yes      0    yes\n381      no    yes      1    yes\n382      no    yes      0    yes\n383      no    yes      2    yes\n384      no     no      2    yes\n385      no     no      0    yes\n386      no     no      0    yes\n387      no     no      2    yes\n388      no    yes      2    yes\n389      no     no      2    yes\n390      no    yes      2    yes\n391      no     no      2    yes\n392      no    yes      1    yes\n393      no    yes      0    yes\n394      no     no      1    yes\n395      no     no      0    yes\n396      no     no      1    yes\n397      no     no      1    yes\n398      no     no      1    yes\n399      no     no      2    yes\n400      no    yes      0    yes\n401      no    yes      2    yes\n402      no    yes      2    yes\n403      no    yes      0    yes\n404      no     no      0    yes\n405      no     no      0    yes\n406      no     no      0    yes\n407      no     no      2    yes\n408      no     no      0    yes\n409      no    yes      0    yes\n410      no    yes      0    yes\n411      no     no      1    yes\n412      no    yes      0    yes\n413      no    yes      0    yes\n414      no    yes      0    yes\n415      no     no      0    yes\n416      no    yes      1    yes\n417      no    yes      1    yes\n418      no     no      2    yes\n419      no    yes      3    yes\n420     yes     no      1    yes\n421      no    yes      2    yes\n422      no    yes      0    yes\n423      no     no      2    yes\n424      no     no      0    yes\n425      no     no      1    yes\n426      no     no      0    yes\n427      no     no      1    yes\n428      no     no      1    yes\n429      no     no      0    yes\n430      no    yes      0    yes\n431      no     no      0    yes\n432      no     no      0    yes\n433      no     no      2    yes\n434      no     no      0    yes\n435      no    yes      2    yes\n436      no    yes      0    yes\n437      no     no      0    yes\n438      no     no      0    yes\n439      no     no      2    yes\n440      no    yes      2    yes\n441      no     no      2    yes\n442      no     no      0    yes\n443      no     no      0    yes\n444      no    yes      2    yes\n445      no    yes      0    yes\n446      no     no      1    yes\n447     yes     no      1    yes\n448      no    yes      1    yes\n449      no     no      2    yes\n450      no     no      0    yes\n451      no     no      0    yes\n452      no    yes      0    yes\n453      no    yes      0    yes\n454      no     no      1    yes\n455      no     no      0    yes\n456      no     no      1    yes\n457      no    yes      0    yes\n458      no    yes      0    yes\n459      no     no      0    yes\n460      no     no      0    yes\n461      no     no      0    yes\n462      no     no      0    yes\n463      no     no      0    yes\n464      no     no      0    yes\n465      no     no      0    yes\n466     yes    yes      0    yes\n467      no     no      0    yes\n468      no     no      0    yes\n469      no     no      0    yes\n470      no     no      0    yes\n471      no     no      1    yes\n472      no     no      0    yes\n473      no     no      3    yes\n474      no     no      0    yes\n475      no     no      0    yes\n476      no     no      1    yes\n477      no     no      1    yes\n478      no     no      2    yes\n479      no    yes      0    yes\n480      no     no      1    yes\n481      no     no      0    yes\n482      no    yes      2    yes\n483      no     no      0    yes\n484      no     no      0    yes\n485      no     no      2    yes\n486      no    yes      1    yes\n487      no     no      0     no\n488      no     no      1     no\n489      no     no      1     no\n490      no     no      0     no\n491      no     no      0     no\n492      no     no      0     no\n493      no     no      0     no\n494      no     no      1     no\n495      no    yes      0     no\n496      no     no      0     no\n497      no     no      0     no\n498      no     no      1     no\n499      no     no      0     no\n500      no     no      3     no\n501      no    yes      3     no\n502      no    yes      2     no\n503      no     no      0     no\n504      no    yes      0     no\n505      no     no      0     no\n506      no     no      0     no\n507      no     no      2     no\n508      no    yes      2     no\n509      no    yes      2     no\n510      no     no      1     no\n511      no     no      2     no\n512      no     no      0     no\n513      no    yes      0     no\n514      no     no      0     no\n515      no     no      1     no\n516     yes     no      0     no\n517      no    yes      0     no\n518      no    yes      0     no\n519      no    yes      1     no\n520      no     no      1     no\n521      no    yes      1     no\n522      no    yes      1     no\n523      no    yes      1     no\n524      no     no      2     no\n525      no    yes      1     no\n526      no    yes      2     no\n527      no    yes      2     no\n528      no    yes      1     no\n529      no    yes      1     no\n530      no    yes      0     no\n531      no    yes      2     no\n532      no    yes      2     no\n533      no     no      2     no\n534     yes     no      0     no\n535      no    yes      0     no\n536      no    yes      0     no\n537      no    yes      0     no\n538      no    yes      0     no\n539      no    yes      0     no\n540      no     no      0     no\n541      no     no      1     no\n542      no    yes      0     no\n543      no    yes      0     no\n544      no    yes      1     no\n545      no    yes      1     no\n546      no    yes      1     no\n\n\n\ntibble\n\nHousePrices_tbl\n\n# A tibble: 546 × 12\n   price lotsize bedrooms bathrooms stories driveway recreation fullbase gasheat\n   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt; &lt;fct&gt;    &lt;fct&gt;      &lt;fct&gt;    &lt;fct&gt;  \n 1 42000    5850        3         1       2 yes      no         yes      no     \n 2 38500    4000        2         1       1 yes      no         no       no     \n 3 49500    3060        3         1       1 yes      no         no       no     \n 4 60500    6650        3         1       2 yes      yes        no       no     \n 5 61000    6360        2         1       1 yes      no         no       no     \n 6 66000    4160        3         1       1 yes      yes        yes      no     \n 7 66000    3880        3         2       2 yes      no         yes      no     \n 8 69000    4160        3         1       3 yes      no         no       no     \n 9 83800    4800        3         1       1 yes      yes        yes      no     \n10 88500    5500        3         2       4 yes      yes        no       no     \n# ℹ 536 more rows\n# ℹ 3 more variables: aircon &lt;fct&gt;, garage &lt;dbl&gt;, prefer &lt;fct&gt;"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#accessing-parts-of-the-data",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#accessing-parts-of-the-data",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "Accessing parts of the data",
    "text": "Accessing parts of the data\n\nNumerical indexVariable namesUsing $\n\n\nSubsetting a data.frame works in a very similar manner as a matrix:\n\nmatrix[rows of interest, columns of interest]\n\nExample:\n2nd to 8th rows, the 3rd and 5th columns\n\n\ndata.frame\n\nHousePrices[2:8, c(3,5)]\n\n  bedrooms stories\n2        2       1\n3        3       1\n4        3       2\n5        2       1\n6        3       1\n7        3       2\n8        3       3\n\n\n\ntibble\n\nHousePrices_tbl[2:8, c(3,5)]\n\n# A tibble: 7 × 2\n  bedrooms stories\n     &lt;dbl&gt;   &lt;dbl&gt;\n1        2       1\n2        3       1\n3        3       2\n4        2       1\n5        3       1\n6        3       2\n7        3       3\n\n\n\n\n\n\n\nBut, subsetting a data.frame using numerical indexes are not recommended because it is not immediately clear to you (or your collaborators who might look at the code) what you intended to do with the code.\nInstead, the following is better:\n\ndata[, c(\"variable 1\", \"variable 2\", ...)]\n\nExamples:\n\n\ndata.frame\n\nhead(HousePrices[, \"price\"])\n\n[1] 42000 38500 49500 60500 61000 66000\n\n\n\ntibble\n\nhead(HousePrices_tbl[, \"price\"])\n\n# A tibble: 6 × 1\n  price\n  &lt;dbl&gt;\n1 42000\n2 38500\n3 49500\n4 60500\n5 61000\n6 66000\n\n\n\n\n\n\n\nAlternatively, to access a column (variable) from a dataset, you can use $ like below (remember? A data.frame is a special kind of list).\nExamples:\n\n\ndata.frame\n\nhead(HousePrices$price)\n\n[1] 42000 38500 49500 60500 61000 66000\n\n\n\ntibble\n\nhead(HousePrices_tbl$price)\n\n[1] 42000 38500 49500 60500 61000 66000"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#importing-and-exporting-datasets-1",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#importing-and-exporting-datasets-1",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "Importing and Exporting Datasets",
    "text": "Importing and Exporting Datasets\n\nObjectives and DirectionsHow\n\n\nObjectives\n\nread datasets in various formats (csv, xlsx, dta, and rds) containing corn yields in Nebraska counties for the year of 2008.\nwrite R objects as files in various formats\n\nDirections\n\nGo here and download all the files\nPlace all the data files in the same folder (any folder)\n\n\n\nCheck the format in which the dataset is stored by looking at the extension of the file (what comes after the file name and a dot) * corn.csv: a file format Microsof Excel supports. * corn.xlsx: another format supported by Microsof Excel, which may have more than one tabs of data sheets. * corn.dta: a format that STATA support (software that is immensely popular for economists). * corn.rds: a format that R supports.\nWhen you import a dataset, you need to use a particular function that is appropriate for the particular type of format the dataset is in."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#read-a-csv-file",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#read-a-csv-file",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "Read a CSV file",
    "text": "Read a CSV file\n\nread.csv()read_csv()Compare\n\n\nYou can use read.csv() from the base package.\nSyntax\n\n#--- NOT RUN ---#  \ndata = read.csv(path to the file to import)\n\nExamples\n\ncorn_yields_df &lt;- read.csv(\"~/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Lectures/Chapter-3-DataWrangling/corn_yields.csv\")\n\n\n\nYou can use read_csv() from the readr package.\nSyntax\n\n#--- NOT RUN ---#  \ndata = readr::read_csv(path to the file to import)\n\nExamples\n\ncorn_yields_tbl &lt;- readr::read_csv(\"~/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Lectures/Chapter-3-DataWrangling/corn_yields.csv\")\n\n\n\n Direction: evaluate corn_yields_df and corn_yields_tbl to see the differences.\n\nData read using read.csv():\n\nclass(corn_yields_df)\n\n[1] \"data.frame\"\n\n\n\nData read using read_csv():\n\nclass(corn_yields_tbl) \n\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\""
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#setting-the-working-directory",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#setting-the-working-directory",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "Setting the working directory",
    "text": "Setting the working directory\n\nWhat and whyhownavigationRStudio project\n\n\n\nIn the previous slide, we provided a full path to the csv file to read onto R.\nIf you expect to import and/or export (save) datasets and R objects often in that particular directory, it would be nice to tell R to look for files in the directory by default.\n\nSo, a code like this works:\n\ncorn_yield &lt;- read.csv(\"corn_yields.csv\")\n\n\nThis will save us from writing out the full path every time we either import or export datasets.\nYou can do so by designate the directory as the working directory.\nOnce the working directory is set, R looks for files in that directory unless told otherwise.\nIt is not just when importing datasets. When you export an R object as a file, R will create a file in the working directory by default.\n\n\n\nYou can use setwd() to designate a directory as the working directory:\n\n#--- Setting a directory (path) in your computer---#\nsetwd(\"/Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Lectures/Chapter-3-DataWrangling\")\n\n\nYou can check the current working directory using the getwd() function:\n\n#--- find the current working directory ---#\ngetwd()\n\n[1] \"/Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Lectures/Chapter-3-DataWrangling\"\n\n\n\n\nSuppose it is convenient for you to set the working directory somewhere else than the folder where all the datasets are residing.\n\nsetwd(\"~/Dropbox/TeachingUNL/DataScience\")\n\n\nYou can then provide the path to the file relative to the working directory like this:\n\ndata &lt;- read_csv(\"Datasets/Chapter_3_data_wrangling/corn_yields.csv\")\n\n\nYou can use .. to move up a folder. For example, if you want to import corn_yields.csv stored in “~/Dropbox/TeachingUNL”, then the following works:\n\ndata &lt;- read_csv(\"../corn_yields.csv\")\n\n\n\nYou can create an R Project using RStudio:\n\nclick on a blue transparent box with a plus sign at the upper left corner of RStudio\nclick on “new directory” (to initiate a new folder) or “existing directory” (to designate an existing folder)\n\n( Direction:  demonstrate on RStduio)\nWhen you open an R Project folder, then the working directory is set at the project folder. Confirm this:\n\ngetwd()"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#read-a-sheet-from-an-xlsx-file",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#read-a-sheet-from-an-xlsx-file",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "Read a sheet from an xls(x) file",
    "text": "Read a sheet from an xls(x) file\n\nInstructionSyntax and ExamplesNote\n\n\n\nYou can use read_excel() from the readxl package to read data sheets from an xls(x) file, which is part of the tidyverse package.\nThe readxl package is installed when you install the tidyverse pacakge.\nHowever, it is not loaded automatically when you load the tidyverse package.\nSo, you need to library the package even if you have loaded the tidyverse package.\n\n\nlibrary(readxl)\n\n\n\nSyntax\n\nread_excel(path to the file, sheet = x)\n\n\nx: sheet number\n\nExamples\nImport a sheet of an xls(x) file using read_excel():\n\ncorn_08 &lt;- read_excel(\"corn_yields.xls\", sheet = 1) # 1st sheet \ncorn_09 &lt;- read_excel(\"corn_yields.xls\", sheet = 2) # 2nd sheet\n\n\n\n\n#--- check the class ---#\nclass(corn_08) \n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\nNotice that the data is converted into a tibble (because the readxl package is part of the tidyverse package.)."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#read-a-stata-data-file-.dta",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#read-a-stata-data-file-.dta",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "Read a STATA data file (.dta)",
    "text": "Read a STATA data file (.dta)\n\nInstructionSyntax and ExamplesNote\n\n\nUse the read.dta13() function from the readstata13 package.\n\n#--- install the package ---#\ninstall.packages(haven)\n\n#--- load the package ---#\nlibrary(haven) \n\n\n\nSyntax\n\n#--- Syntax (NOT RUN) ---#\nhaven::read_dta(file path)\n\nExamples\n\n#--- import the data ---#\ncorn_yields &lt;- haven::read_dta(\"corn_yields.dta\")\n\n\n\n\n#--- check the class ---#\nclass(corn_yields) \n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\nNotice that the data is converted into a data.frame object, not a tibble."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#read-an-rds-file",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#read-an-rds-file",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "Read an rds file",
    "text": "Read an rds file\n\nInstructionSyntax and ExamplesNote\n\n\n\nAn rds ( r data set) file is a file type that is supported by R.\nYou can use the readRDS() function to read an rds file.\nNo special packages are necessary.\n\n\n\nSyntax\n\nreadRDS(\"path to the file\") \n\nExamples\n\ncorn_yields &lt;- readRDS(\"corn_yields.rds\") \n\n\n\n\nclass(corn_yields)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n\nNotice that the imported dataset is already a tibble object. This is because the R object exported as corn_yields.rds was tibble."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#export-an-r-object",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#export-an-r-object",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "Export an R object",
    "text": "Export an R object\n\nInstructionSyntax and ExamplesNotes on RDS\n\n\n\nExporting datasets work much the same way as importing them.\nHere is the list of functions that let you export a data.frame or (tibble) in different formats:\n\ncsv: write_csv()\ndta: save.dta13()\nrds: saveRDS()\n\n\n\n\nSyntax\n\nexport_function(obeject name, file name)\n\nExamples\n\n#--- export as csv ---#\nwrite_csv(corn_yields, \"corn_yields_exp_rownames.csv\")\n\n#--- export as dta ---#\nsave.dta13(corn_yields, \"corn_yields_exp.dta\")\n\n#--- export as rds ---#\nsaveRDS(corn_yields, \"corn_yields_exp.rds\")\n\n#--- export as xls file ---#\n# just don't do it\n\n\n\ntype preservatin\nYou can export any kind of R objects as an rds file.\n\na_list &lt;- list(a = c(\"R\", \"rocks\"), b = corn_yields)   \n\nsaveRDS(a_list, \"a_list.rds\")\n\nreadRDS(\"a_list.rds\")\n\n$a\n[1] \"R\"     \"rocks\"\n\n$b\n# A tibble: 161 × 9\n    Year State  FIPS County_name State_name Commodity `Data item`      Irrigated\n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;       &lt;chr&gt;      &lt;chr&gt;     &lt;chr&gt;                &lt;int&gt;\n 1  2008    31 31019 BUFFALO     NEBRASKA   CORN      CORN, GRAIN - Y…         0\n 2  2008    31 31019 BUFFALO     NEBRASKA   CORN      CORN, GRAIN, IR…         1\n 3  2008    31 31041 CUSTER      NEBRASKA   CORN      CORN, GRAIN - Y…         0\n 4  2008    31 31041 CUSTER      NEBRASKA   CORN      CORN, GRAIN, IR…         1\n 5  2008    31 31047 DAWSON      NEBRASKA   CORN      CORN, GRAIN - Y…         0\n 6  2008    31 31047 DAWSON      NEBRASKA   CORN      CORN, GRAIN, IR…         1\n 7  2008    31 31077 GREELEY     NEBRASKA   CORN      CORN, GRAIN - Y…         0\n 8  2008    31 31077 GREELEY     NEBRASKA   CORN      CORN, GRAIN, IR…         1\n 9  2008    31 31079 HALL        NEBRASKA   CORN      CORN, GRAIN - Y…         0\n10  2008    31 31079 HALL        NEBRASKA   CORN      CORN, GRAIN, IR…         1\n# ℹ 151 more rows\n# ℹ 1 more variable: Yield &lt;int&gt;\n\n\nAs you can see a list is saved as an rds file, and when imported, it is still a list.\nfile size Check the size of the corn data files in different formats.\nWhich one is the smallest?"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#essential-verbs",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#essential-verbs",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "Essential verbs",
    "text": "Essential verbs\n\nfilter()\nmutate()\nselect()\nrename()\narrange()\nrelocate()"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#before-we-start",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#before-we-start",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "Before we start",
    "text": "Before we start\nFor illustrations, we will use flights_mini that we create below:\n\nlibrary(nycflights13)\n\n(\nflights_mini &lt;- distinct(flights,month,day,.keep_all=TRUE) %&gt;% \n  filter(day %in% c(1,2)) %&gt;% \n  arrange(month)\n)\n\n# A tibble: 24 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     2       42           2359        43      518            442\n 3  2013     2     1      456            500        -4      652            648\n 4  2013     2     2        3           2359         4      513            444\n 5  2013     3     1        4           2159       125      318             56\n 6  2013     3     2       43           2355        48      605            440\n 7  2013     4     1      454            500        -6      636            640\n 8  2013     4     2        9           2355        14      346            345\n 9  2013     5     1        9           1655       434      308           2020\n10  2013     5     2        3           1905       298      241           2224\n# ℹ 14 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#filter-row-wise-subset",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#filter-row-wise-subset",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "filter(): row-wise subset",
    "text": "filter(): row-wise subset\n\nInstructionSingle conditionfilter(): multiple conditionsImportantExercises\n\n\n\nfilter(): subset data row-wise using logical conditions based on variables\n\n#--- syntax ---# \nfilter(dataset, condition 1, ..., condition K)\n\n\n\n\nequal tonot equal toinequality\n\n\nObservations where month is 4:\n\nfilter(flights_mini, month == 4) \n\n# A tibble: 2 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     4     1      454            500        -6      636            640\n2  2013     4     2        9           2355        14      346            345\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nObservations where month is NOT 4:\n\nfilter(flights_mini, month != 4) \n\n# A tibble: 22 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     2       42           2359        43      518            442\n 3  2013     2     1      456            500        -4      652            648\n 4  2013     2     2        3           2359         4      513            444\n 5  2013     3     1        4           2159       125      318             56\n 6  2013     3     2       43           2355        48      605            440\n 7  2013     5     1        9           1655       434      308           2020\n 8  2013     5     2        3           1905       298      241           2224\n 9  2013     6     1        2           2359         3      341            350\n10  2013     6     2       14           2359        15      339            341\n# ℹ 12 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nObservations where month is less than 4:\n\nfilter(flights_mini, month &lt; 4) \n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     1     1      517            515         2      830            819\n2  2013     1     2       42           2359        43      518            442\n3  2013     2     1      456            500        -4      652            648\n4  2013     2     2        3           2359         4      513            444\n5  2013     3     1        4           2159       125      318             56\n6  2013     3     2       43           2355        48      605            440\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\n\n\n\n\nand (&)or (|)in any of (%in%)\n\n\n\nfilter(flights_mini, month &gt;= 9 & month &lt;= 11) \n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     9     1        9           2359        10      343            340\n2  2013     9     2        8           2255        73      126             19\n3  2013    10     1      447            500       -13      614            648\n4  2013    10     2      449            500       -11      620            648\n5  2013    11     1        5           2359         6      352            345\n6  2013    11     2      453            500        -7      644            651\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n#--- alternatively ---#\n# filter(flights_mini, month &gt;= 9, month &lt;= 11)\n\n\n\n\nfilter(flights_mini, month &gt;= 11 | month &lt;= 1) \n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     1     1      517            515         2      830            819\n2  2013     1     2       42           2359        43      518            442\n3  2013    11     1        5           2359         6      352            345\n4  2013    11     2      453            500        -7      644            651\n5  2013    12     1       13           2359        14      446            445\n6  2013    12     2       12           2250        82      103           2356\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\nfilter(flights_mini, month %in% c(1, 2, 3)) \n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     1     1      517            515         2      830            819\n2  2013     1     2       42           2359        43      518            442\n3  2013     2     1      456            500        -4      652            648\n4  2013     2     2        3           2359         4      513            444\n5  2013     3     1        4           2159       125      318             56\n6  2013     3     2       43           2355        48      605            440\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n#--- equivalently ---#\n# filter(flights_mini, month == 1 | month == 2 | month == 2) \n\nThis is very useful when you have many values to check.\n\n\n\n\n\nNotice that the original data flights_mini was not affected by the filter() operations in the previous slides.\nThis is consistent across all the verbs in dplyr. Whatever actions you take, the original data is unaltered.\n–\nTo use the transformed data for later use, you need to assign it to a new object (or overwrite if that is okay):\n\nflights_mini_filtered &lt;- filter(flights_mini, month == 4) \n\nflights_mini_filtered\n\n# A tibble: 2 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     4     1      454            500        -6      636            640\n2  2013     4     2        9           2355        14      346            345\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\nExercise 1Exercise 2Exercise 3\n\n\n\nFind the observations in June and July\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere is the output you should get:\n\n\n# A tibble: 4 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     6     1        2           2359         3      341            350\n2  2013     6     2       14           2359        15      339            341\n3  2013     7     1        1           2029       212      236           2359\n4  2013     7     2       12           2245        87      117              4\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\nFind the observations in January, April, July, September, and December\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere is the output you should get:\n\n\n# A tibble: 10 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     2       42           2359        43      518            442\n 3  2013     4     1      454            500        -6      636            640\n 4  2013     4     2        9           2355        14      346            345\n 5  2013     6     1        2           2359         3      341            350\n 6  2013     6     2       14           2359        15      339            341\n 7  2013     9     1        9           2359        10      343            340\n 8  2013     9     2        8           2255        73      126             19\n 9  2013    12     1       13           2359        14      446            445\n10  2013    12     2       12           2250        82      103           2356\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\nFind the observations by carrier “US”\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere is the output you should get:\n\n\n# A tibble: 5 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     2     1      456            500        -4      652            648\n2  2013     4     1      454            500        -6      636            640\n3  2013    10     1      447            500       -13      614            648\n4  2013    10     2      449            500       -11      620            648\n5  2013    11     2      453            500        -7      644            651\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#select-column-wise-subset",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#select-column-wise-subset",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "select(): column-wise subset",
    "text": "select(): column-wise subset\n\nInstructionExamplesExercises\n\n\nYou can select a subset of variables using select().\n\nselect(dataset, variable 1, variable 2, ...)\n\nIf you would like to drop some variables, but want to keep all the other variables, you can take advantage of − operator:\n\nselect(dataset, - variable 1, - variable 2, ...)\n\n\n\n\nExample 1Example 2Example 3\n\n\n\nselect(flights_mini, arr_delay)\n\n# A tibble: 24 × 1\n   arr_delay\n       &lt;dbl&gt;\n 1        11\n 2        36\n 3         4\n 4        29\n 5       142\n 6        85\n 7        -4\n 8         1\n 9       408\n10       257\n# ℹ 14 more rows\n\n\n\n\n\nselect(flights_mini, month, arr_delay, dep_delay)\n\n# A tibble: 24 × 3\n   month arr_delay dep_delay\n   &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1     1        11         2\n 2     1        36        43\n 3     2         4        -4\n 4     2        29         4\n 5     3       142       125\n 6     3        85        48\n 7     4        -4        -6\n 8     4         1        14\n 9     5       408       434\n10     5       257       298\n# ℹ 14 more rows\n\n\n\n\n\nselect(flights_mini, - year, - month)  \n\n# A tibble: 24 × 17\n     day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay\n   &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1     1      517            515         2      830            819        11\n 2     2       42           2359        43      518            442        36\n 3     1      456            500        -4      652            648         4\n 4     2        3           2359         4      513            444        29\n 5     1        4           2159       125      318             56       142\n 6     2       43           2355        48      605            440        85\n 7     1      454            500        -6      636            640        -4\n 8     2        9           2355        14      346            345         1\n 9     1        9           1655       434      308           2020       408\n10     2        3           1905       298      241           2224       257\n# ℹ 14 more rows\n# ℹ 10 more variables: carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;,\n#   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\n\n\n\nExercise 1Exercise 2\n\n\nSelect all the columns except arr_delay.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere is the output you should get:\n\n\n# A tibble: 24 × 18\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     2       42           2359        43      518            442\n 3  2013     2     1      456            500        -4      652            648\n 4  2013     2     2        3           2359         4      513            444\n 5  2013     3     1        4           2159       125      318             56\n 6  2013     3     2       43           2355        48      605            440\n 7  2013     4     1      454            500        -6      636            640\n 8  2013     4     2        9           2355        14      346            345\n 9  2013     5     1        9           1655       434      308           2020\n10  2013     5     2        3           1905       298      241           2224\n# ℹ 14 more rows\n# ℹ 10 more variables: carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;,\n#   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nSelect arr_delay and month.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere is the output you should get:\n\n\n# A tibble: 24 × 2\n   month arr_delay\n   &lt;int&gt;     &lt;dbl&gt;\n 1     1        11\n 2     1        36\n 3     2         4\n 4     2        29\n 5     3       142\n 6     3        85\n 7     4        -4\n 8     4         1\n 9     5       408\n10     5       257\n# ℹ 14 more rows"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#relocate-change-the-column-order",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#relocate-change-the-column-order",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "relocate(): change the column order",
    "text": "relocate(): change the column order\nYou can use relocate() to change the column order.\n\nrelocate(flights_mini, dep_time, dep_delay)\n\n# A tibble: 24 × 19\n   dep_time dep_delay  year month   day sched_dep_time arr_time sched_arr_time\n      &lt;int&gt;     &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;          &lt;int&gt;    &lt;int&gt;          &lt;int&gt;\n 1      517         2  2013     1     1            515      830            819\n 2       42        43  2013     1     2           2359      518            442\n 3      456        -4  2013     2     1            500      652            648\n 4        3         4  2013     2     2           2359      513            444\n 5        4       125  2013     3     1           2159      318             56\n 6       43        48  2013     3     2           2355      605            440\n 7      454        -6  2013     4     1            500      636            640\n 8        9        14  2013     4     2           2355      346            345\n 9        9       434  2013     5     1           1655      308           2020\n10        3       298  2013     5     2           1905      241           2224\n# ℹ 14 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nChosen variables come front with the order of the rest of the variable unchanged."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#piping-with-1",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#piping-with-1",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "Piping with %>%",
    "text": "Piping with %&gt;%\n\nThe BasicMore generally.ChainingWhy piping with %&gt;%\n\n\nLet f() be a function and x is an R object that f() accepts. Then,\nx %&gt;% f() is the same as f(x)\nExample\nTry the following codes and confirm they return the same results:\n\n#--- not piped ---#\nmean(seq(1, 99, by = 2))  \n\n#--- piped ---#\nseq(1, 99, by = 2) %&gt;% mean()   \n\n\n\nSuppose you have more than one arguments to the function like this:\n\nf(x1, x2, option 1, option 2)\n\nThen,\n\nz %&gt;% f(x2, option 1, option 2) \n\nis equivalent to\n\nf(z, x2, option 1, option 2) \n\nThat is, in general, an R object that precedes the piping operator (%&gt;%) becomes the  first  argument of the function that comes after the piping operator.\n\n\nWhat if the object before the piping operator is not the first argument of the subsequent function?\n\na_string &lt;- \"I do not like space\"\n\ngsub(\" \", \"\", a_string)\n\n[1] \"Idonotlikespace\"\n\n\nThis does not work:\n\na_string %&gt;%  gsub(\" \", \"\") \n\nbecause the above is equivalent to\n\na_string &lt;- gsub(a_string, \" \", \"\") \n\nYou can refer to the preceding object by . like this:\n\na_string %&gt;% gsub(\" \", \"\", .)  \n\n[1] \"Idonotlikespace\"\n\n\n\n\nYou can keep piping like this:\n\nflights_mini %&gt;% \n  select(year, month, dep_time) %&gt;% \n  relocate(dep_time) %&gt;% \n  filter(month &lt;= 3)\n\n Important:  The object created by all the codes preceding the piping operator is passed down to the function after the piping operator.\nFor example, relocate(dep_time) receives as its first argument the outcome of the evaluation of the highlighted parts of the code below.\n\n\n\nProblemAlternative 1Alternative 2 (with piping)\n\n\n\nConsider the following sequence of actions:\n\na1 &lt;- filter(flights_mini, month &lt;= 3)\n\na2 &lt;- select(a1, year, month, dep_time)\n\na3 &lt;- relocate(a2, dep_time)\n\n\n\nNotice that you generated two intermediate datasets (a1 and a2) to obtain the dataset you wanted (a3).\nThese intermediate objects are generated only for the purpose of generating the final dataset.\nIt is easy to imagine that you will soon have lots of unnecessary intermediate objects on R.\n\n\n\n\nAlternatively, you can do the following:\n\na3 &lt;- relocate(\n  select(\n    filter(flights_mini, month &lt;= 3)\n    , year, month, dep_time\n  ), \n  dep_time\n)\n\n\n\nThis does not create any intermediate objects unlike the first example.\nHowever, it is hard to understand the code partly because the order of actions is the reverse of the order of the corresponding functions you see as you read the code from left to right.\n\n\n\n\nTaking advantage of the piping operator,\n\na3 &lt;- flights_mini %&gt;% \n  filter(month &lt;= 3) %&gt;% \n  select(year, month, dep_time) %&gt;% \n  relocate(dep_time)"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#mutate-define-new-or-update-variables",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#mutate-define-new-or-update-variables",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "mutate(): define new (or update) variables",
    "text": "mutate(): define new (or update) variables\n\nWhatmultiple variablesfunctionMore on mutate()Exercises\n\n\nYou can use mutate() to create a new variable (or overwrite the existing one) in the dataset:\nSynatax\n\nmutate(data, new variable name = expression)\n\nExample\n\nmutate(flights_mini, gain = arr_delay - dep_delay) %&gt;% \n  filter(month &lt;= 2) %&gt;% \n  relocate(gain)\n\n# A tibble: 4 × 20\n   gain  year month   day dep_time sched_dep_time dep_delay arr_time\n  &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n1     9  2013     1     1      517            515         2      830\n2    -7  2013     1     2       42           2359        43      518\n3     8  2013     2     1      456            500        -4      652\n4    25  2013     2     2        3           2359         4      513\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nYou can define multiple variables within a single mutate() function.\nYou can create a new variable based on the variables that have been just created within the same mutate() function.\nExamples\n\n\n# A tibble: 4 × 21\n   gain gain_per_hour  year month   day dep_time sched_dep_time dep_delay\n  &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n1     9          2.38  2013     1     1      517            515         2\n2    -7         -2.22  2013     1     2       42           2359        43\n3     8          4.90  2013     2     1      456            500        -4\n4    25          7.28  2013     2     2        3           2359         4\n# ℹ 13 more variables: arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;,\n#   carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nYou can apply functions to variables when creating new variables:\nExample\n\n\n# A tibble: 2 × 20\n  avg_arr_delay  year month   day dep_time sched_dep_time dep_delay arr_time\n          &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n1          61.1  2013     1     1      517            515         2      830\n2          61.1  2013     1     2       42           2359        43      518\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nNote: the function you apply has to accept a vector (a variable column).\n\n\n\nselective mutationdichotomousMore than two cases\n\n\nSometimes, you want to to alter the values of a variable for specific rows that satisfy certain conditions.\nExample: Suppose you found out that dep_time for all the flights from JFK was misreported so that dep_time is 10 minutes earlier than the true departure times.\nSo, we would like to add 10 minutes to all the flights by JFK.\nYou can use ifelse() like this:\n\nflights_mini %&gt;% \n  mutate(\n    dep_time_correct = ifelse(origin == \"JFK\", dep_time + 10, dep_time) #&lt;&lt;\n  ) %&gt;% \n  relocate(origin, dep_time, dep_time_correct) %&gt;% arrange(origin) \n\n# A tibble: 24 × 20\n   origin dep_time dep_time_correct  year month   day sched_dep_time dep_delay\n   &lt;chr&gt;     &lt;int&gt;            &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1 EWR         517              517  2013     1     1            515         2\n 2 EWR         456              456  2013     2     1            500        -4\n 3 EWR         454              454  2013     4     1            500        -6\n 4 EWR         447              447  2013    10     1            500       -13\n 5 EWR         449              449  2013    10     2            500       -11\n 6 EWR         453              453  2013    11     2            500        -7\n 7 JFK          42               52  2013     1     2           2359        43\n 8 JFK           3               13  2013     2     2           2359         4\n 9 JFK           4               14  2013     3     1           2159       125\n10 JFK          43               53  2013     3     2           2355        48\n# ℹ 14 more rows\n# ℹ 12 more variables: arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;,\n#   carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nSuppose you want to label flights with arr_delay &gt; 0 to be time-loss and time-gain otherwise:\nYou can use ifelse() for defining a dichotomous variable like this:\n\nflights_mini %&gt;% \n  mutate(\n    loss_or_gain = ifelse(arr_delay &gt; 0, \"time-loss\", \"time-gain\") #&lt;&lt;\n  ) %&gt;% \n  relocate(arr_delay, loss_or_gain)\n\n# A tibble: 24 × 20\n   arr_delay loss_or_gain  year month   day dep_time sched_dep_time dep_delay\n       &lt;dbl&gt; &lt;chr&gt;        &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1        11 time-loss     2013     1     1      517            515         2\n 2        36 time-loss     2013     1     2       42           2359        43\n 3         4 time-loss     2013     2     1      456            500        -4\n 4        29 time-loss     2013     2     2        3           2359         4\n 5       142 time-loss     2013     3     1        4           2159       125\n 6        85 time-loss     2013     3     2       43           2355        48\n 7        -4 time-gain     2013     4     1      454            500        -6\n 8         1 time-loss     2013     4     2        9           2355        14\n 9       408 time-loss     2013     5     1        9           1655       434\n10       257 time-loss     2013     5     2        3           1905       298\n# ℹ 14 more rows\n# ℹ 12 more variables: arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nThe case_when() function is useful if you have more than two cases.\nSyntax:\n\ncase_when(\n  condition 1 ~ value to assign,\n  condition 2 ~ value to assign,\n  condition 3 ~ value to assign,\n  ...\n)  \n\nExample:\n\nflights_mini %&gt;% \n  mutate(origin = case_when(\n    origin == \"JFK\" ~ \"John F. Kennedy\",\n    origin == \"EWR\" ~ \"Newark Liberty International\", \n    origin == \"LGA\" ~ \"LaGuardia\" \n    )\n  ) %&gt;% relocate(origin)\n\n# A tibble: 24 × 19\n   origin            year month   day dep_time sched_dep_time dep_delay arr_time\n   &lt;chr&gt;            &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n 1 Newark Liberty …  2013     1     1      517            515         2      830\n 2 John F. Kennedy   2013     1     2       42           2359        43      518\n 3 Newark Liberty …  2013     2     1      456            500        -4      652\n 4 John F. Kennedy   2013     2     2        3           2359         4      513\n 5 John F. Kennedy   2013     3     1        4           2159       125      318\n 6 John F. Kennedy   2013     3     2       43           2355        48      605\n 7 Newark Liberty …  2013     4     1      454            500        -6      636\n 8 John F. Kennedy   2013     4     2        9           2355        14      346\n 9 John F. Kennedy   2013     5     1        9           1655       434      308\n10 John F. Kennedy   2013     5     2        3           1905       298      241\n# ℹ 14 more rows\n# ℹ 11 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\n\n\n\n\nExercise 1Exercise 2\n\n\nFind the mean value of arr_delay in April and May (combined) and define it as a new variable named avg_arr_delay\n\n\nFind the sum of dep_delay in January, February, and December (combined) and define it as a new variable named sum_arr_delay, and then move the variable to the first column of the dataset."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#sec-group-operation",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#sec-group-operation",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "Grouped Operations",
    "text": "Grouped Operations\n\nMotivationHowOther summarizing functionsNew variableExercises\n\n\nGroup-wise operations, such as the mean of arrival delay by carrier are very useful to gain an insight into differences across groups.\nThe group_by() function in conjunction with summarize() function does exactly that.\n\nSyntax\n\n#--- group by variables ---#\ngroup_by(dataset, variable to group by, variable to group by, ...)  \n\n#--- summarize ---#\nsummarize(grouped dataset, expression)  \n\n\n\n\nStep 1: groupingStep 2: summarizingPiped\n\n\nYou first use group_by() to set the group for a dataset:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThere are no apparent differences in flights_carrier from flights_slim. The only thing you did by group_by() was to tell R that whatever we will do to the new dataset is going to be done by group, which is reflected in “Groups” of the printed data.\n\n\nOnce the group is set, we are ready to do some group-wise (by carrier) operations. Let’s now find the means of arr_delay by carrier so we know which carriers perform better than others. We can do so using summarize().\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nUsing the piping operator,\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nYou can apply any functions that work on a vector (a variable)\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nYou can assign the results of the grouped operations to new variables using mutate()\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nExercise 1InstructionExercise 2Exercise 3\n\n\nFind the carrier that had the longest average departure delay (dep_delay) during May through August. Below is the output you will see if you get it right.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nFor the rest of the exercises, we are going to use the weather data for the three airports in NY. First load the weather data and get familiar with the data set.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nFind the daily mean temperature (temp), humidity (humid), wind speed (wind_speed), and precipitation (precip) by the origin of departure. Do not forget to name each daily weather variable. Below is the output you will see if you get it right.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nAnswer\n\n\nCode\ndaily_weather &lt;- \n  weather %&gt;%\n  dplyr::group_by(origin, month, day) %&gt;%\n  dplyr::summarize(\n    temp = mean(temp),\n    humid = mean(humid),\n    wind_speed = mean(wind_speed),\n    precip = mean(precip)\n  )\n\n\n\n\nSubset the daily weather data you obtained in exercise 2 so that it contains weather information only in Nov, Dec, Jan, and Feb for flights that depart from “EWR”. Below is the output you will see if you get it right.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nAnswer\n\n\nCode\n(\ndaily_weather %&gt;%\n  dplyr::filter(month %in% c(11, 12, 1, 2)) %&gt;%\n  dplyr::filter(origin == \"EWR\")\n)"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#across",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#across",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "across()",
    "text": "across()\n\nWhatSyntax and ExampleCompare\n\n\n\nacross() lets you apply the same operation (function) to multiple columns at the same time.\nIt is used with summarize() and mutate()\nIt is useful when you want to apply the same function to many variables.\n\n\n\nSyntax\n\nacross(which variables to apply the function, function, options to the function)\n\nExamples\n\n\n# A tibble: 6 × 5\n  carrier arr_delay dep_delay air_time time_hour          \n  &lt;chr&gt;       &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;dttm&gt;             \n1 9E          7.38      16.7      86.8 2013-07-03 17:06:54\n2 AA          0.364      8.59    189.  2013-07-01 03:46:41\n3 AS         -9.93       5.80    326.  2013-06-29 05:05:27\n4 B6          9.46      13.0     151.  2013-07-02 13:05:56\n5 DL          1.64       9.26    174.  2013-07-04 01:49:32\n6 EV         15.8       20.0      90.1 2013-07-04 04:33:39\n\n\nNote: na.rm = TRUE is an option for the mean() function.\n\n\nWithout across()\n\nflights %&gt;% \n  group_by(carrier) %&gt;% \n  summarize(\n    mean_arr_delay = mean(arr_delay, na.rm = TRUE),\n    mean_dep_delay = mean(dep_delay, na.rm = TRUE),\n    mean_air_time = mean(air_time, na.rm = TRUE),\n    mean_time_hour = mean(time_hour, na.rm = TRUE)\n  ) \n\n\nWith across()\n\nflights %&gt;% \n  group_by(carrier) %&gt;% \n  summarize(\n    across(c(arr_delay, dep_delay, air_time, time_hour),\n    mean,\n    na.rm = TRUE\n    )\n  )"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#select-and-relocate",
    "href": "lectures/Chapter-3-DataWrangling/data_wrangling_basics.html#select-and-relocate",
    "title": "Data wrangling with tidyverse: The Basics",
    "section": "select() and relocate()",
    "text": "select() and relocate()\nThe approaches to refer to the variables that fit with a specified pattern can be applied to other dplyr operations as well:\nTry:\n\nflights %&gt;% \n  select(c(origin, where(is.numeric)))  \n\n\nflights %&gt;% \n  select(ends_with(\"delay\"))  \n\n\nflights %&gt;% \n  relocate(where(is.character))"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto.html",
    "href": "lectures/Chapter-2-Quarto/02-Quarto.html",
    "title": "02-Using Quarto to Create Documents",
    "section": "",
    "text": "What is and why Quarto?\n\n\n\nIt allows you to effortlessly generate documents that can print both R codes and their outcomes (this lecture note is indeed written using Quarto) in a single document.\nIt is useful when you report the analysis you conducted and its source R codes to your advisor or anyone you report to (as long as that person understands R).\nThe power of Quarto goes well beyond just creating a simple html document. The full power of Quarto is on display here.\n\n\n\n\n\n\n\nQuarto Installation\n\n\n\nVisit here.\n\n\n\n\n\n\n\n\nIt would be a real pain to do so because you need to copy and paste all the R codes you run and the results onto WORD manually.\nOften times, copied R codes and results are very much likely to be badly formatted when pasting them\nQuarto obviates the need of repeating copying and pasting when you would like to communicate what you did (R codes) and what you found (results) without worrying too much about formatting.\n\n\n\n\nGenerating a report using Quarto is a two-step process:\n\nCreate an Quarto file (file with .qmd as an extension) with regular texts and R codes mixed inside it.\n\nYou use a special syntax to let the computer know which parts of the file are simple texts and which parts are R codes.\n\nTell the computer to process the qmd file (a click of a button on RStudio, or use the render() function)\n\nThe computer runs the R codes and get their outcomes\nCombine the text parts, R codes, and their results to produce a document\n\n\n:::"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto.html#quarto-introduction-1",
    "href": "lectures/Chapter-2-Quarto/02-Quarto.html#quarto-introduction-1",
    "title": "02-Using Quarto to Create Documents",
    "section": "Quarto: Introduction",
    "text": "Quarto: Introduction\n\nWhat is and why Quarto?\n\n\n\nIt allows you to effortlessly generate documents that can print both R codes and their outcomes (this lecture note is indeed written using Quarto) in a single document.\nIt is useful when you report the analysis you conducted and its source R codes to your advisor or anyone you report to (as long as that person understands R).\nThe power of Quarto goes well beyond just creating a simple html document. The full power of Quarto is on display here.\n\n\n\n\n\nQuarto Installation\n\n\nVisit here.\n\n\n\n\n\n\n\nUsing WORD?\n\nIt would be a real pain to do so because you need to copy and paste all the R codes you run and the results onto WORD manually.\nOften times, copied R codes and results are very much likely to be badly formatted when pasting them\nQuarto obviates the need of repeating copying and pasting when you would like to communicate what you did (R codes) and what you found (results) without worrying too much about formatting.\n\nMake a report with Quarto\nGenerating a report using Quarto is a two-step process:\n\nCreate an Quarto file (file with .qmd as an extension) with regular texts and R codes mixed inside it.\n\nYou use a special syntax to let the computer know which parts of the file are simple texts and which parts are R codes.\n\nTell the computer to process the qmd file (a click of a button on RStudio, or use the render() function)\n\nThe computer runs the R codes and get their outcomes\nCombine the text parts, R codes, and their results to produce a document\n\n\n:::"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto.html#quarto-the-basics-1",
    "href": "lectures/Chapter-2-Quarto/02-Quarto.html#quarto-the-basics-1",
    "title": "02-Using Quarto to Create Documents",
    "section": "Quarto: the Basics",
    "text": "Quarto: the Basics\n\nR code chunksLet’s knitqmd v.s. outputInline codeMarkdown basicsCaveat\n\n\nA qmd file would consist of two types of inputs:\n\nR code chunks\nRegular texts\n\n\n\n\n\nSpecial Syntax\n\n\nWe can indicate R codes chunks by placing R codes inside a special syntax.\n```{r}\ncodes\n```\n\n\n\n\n\n\n\n\nDirection\n\n\nTake a look at sample_qmd.qmd, which can be downloaded from here.\n\nR codes summary(cars) and plot(pressure) are enclosed individually by the special syntax\nSo, in this qmd file, R knows that it should treat them as R codes, but not regular texts.\nOn the other hand, any texts that are not enclosed by the special syntax would be recognized as regular text.\n\n\n\n\n\n\n\nThe process of compiling an qmd file to produce a document is called knitting.\n\nThe easiest way to knit is to hit the Knit button located at the top of the code pane (upper left pane by default)\nAlternatively, you can use the render() function to knit like below:\n\n\nrender(\"sample_qmd.qmd\")\n\n\n\nInspect the qmd file and its output document:\n\n\nqmd side\n\nlines 1-10: a YAML header where you control the aesthetics of the output document (more on this later)\nline 16: texts not enclosed by the special syntax\nlines 18-21: summary(cars) is an R code, which is enclosed by the special syntax\n\n\nhtml side\n\nlines 1-10: nothing\nline 16: printed as regular texts\nlines 18-21: the R code and its results printed\n\n\n\n\n\n\nYou can refer to an R object previously defined in line and display its content in line:\n\n\n\n\nDirection\n\n\nSee lines 41-51 of the qmd file\n\n\n\n\n\n\n\nheader\nmake a list\nfont\ncode highlighting\ninline math\nmath\nweb link\ncitation\n\n\n\n\n\nDirection\n\n\nCompare the chapter called “Markdown basics” of the qmd file and its corresponding output in the knitted html file\n\n\n\n\n\n\n\nWhen you knit an qmd file and create a report, R creates an R session/environment that is completely  independent  of whatever R sessions or environments you may have on your RStudio.\nThis means that when you knit an qmd file, you cannot refer to R objects you have defined on your current R session."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto.html#chunk-options-1",
    "href": "lectures/Chapter-2-Quarto/02-Quarto.html#chunk-options-1",
    "title": "02-Using Quarto to Create Documents",
    "section": "Chunk options",
    "text": "Chunk options\n\nWhat?Example: echoHowVarious optionsSpecify chunk options globally\n\n\nChunk options are special codes inside R code chunks to control how the code chunks operate.\nHere are some example options:\n\necho\neval\nmessage\nwarning\noutput\ninclude\ncache\nfig.cap, fig-height, etc\n\nSee all the options here.\n\n\n\nInspect the qmd file and its output document and observe that\n\nFrom the R code chunk with summary(cars), the code itself and its outcome are presented in the output\nFrom the R code chunk with plot(pressure), only its outcome is presented in the output\n\nThis is because of the chunk option echo: false in the second R code chunk\n\n\n\nTo set a chunk option, use the following syntax:\n```{r}\n#| option-name: choice\n\nR codes come here\n```\n\nExample\n```{r}\n#| echo: false\n\nR codes come here\n```\n\n\n\n\n\nImportant\n\n\nNo space between the initiation of an R code chunk and chunk option. For example, the echo chunk option is going to be ignored below:\n```{r}\n\n#| echo: false\n\nR codes come here\n```\n\n\n\n\n\n\n\necho and evalmessage and warningoutputincludefigure-related\n\n\n\n\necho ( true  or false): specify whether the R codes appear in the output document or not\neval ( true  or false): specify whether the R codes are evaluated or not\n\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 75-103) and its output document to see their effects.\n\n\n\n\n\n\n\n\nmessage (true or  false ): specify weather messages associated with R codes evaluation appear in the output document or not\nwarning (true or  false ): specify weather warnings associated with R codes evaluation appear in the output document or not\n\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 107-131) and its output document\n\n\n\n\n\n\n\noutput ( true , false, asis)\n\ntrue: pint all the results including warnings and messages\nfalse: hides all the results including warnings and messages\nasis: the outputs of the R codes are printed as-is without any suitable formatting\n\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 135-149) and its output document\n\n\n\n\n\n\n\ninclude: false is equivalent to having eval: true, echo: false, and results: false\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 153-166) and its output document\n\n\n\n\n\n\n\nChunk option for figure\n\nfig.align: ‘default’, ‘center’, ‘left’, ‘right’\nfig.width: in inches\nfig.height: in inches\nfig.cap: figure caption\n\n\n\n\n\n\nDirection\n\n\nPlay with these options. See here for more chunk options.\n\n\n\n\n\n\n\n\n\n\n\nWhat and why?HowNote\n\n\nSometimes, it is useful to set chunk options that apply globally (for the entire documents).\nFor example,\n\nYou are writing a term paper and the instructor may want to see only results, but not R codes.\nYou do not want any of the R codes to appear on the output document, but echo: true is the default.\nIt is a waste of time to type echo: false for all the R code chunks\n\n\n\nYou can set chunk options globally in the YAML header with the execute option like below:\n---\ntitle: \"Reporting using Quarto\"\nauthor: \"Taro Mieno\"\nformat:\n  html:\n    toc: true\n    toc-depth: 2\n    number-sections: true\n    number-depth: 2\nexecute:\n  echo: false\n---\n\n\n\n\nDirection\n\n\n\nInsert the following in the YAML header of sample_qmd.qmd file so that it looks like above\n\nexecute:\n  echo: false\n\nKnit the qmd file again and then compare lines 35-39 of the qmd file and its corresponding output.\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nLocal option always overrides the global option."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto.html#caching-1",
    "href": "lectures/Chapter-2-Quarto/02-Quarto.html#caching-1",
    "title": "02-Using Quarto to Create Documents",
    "section": "Caching",
    "text": "Caching\n\nWhat?Let’s tryChanges in codesChanges in contentsdependson\n\n\n\nIn the course of creating a document using Rmarkdown, You are going to hit the “Knit” button numerous times when you are writing a report to check whether the final output looks fine.\nEvery time you knit, all the R code chunks are evaluated, which is inefficient because R has evaluated those R code chunks before.\nSo, if we can somehow store the results of R code chunks (caching), and then let R call up the saved results instead of re-evaluating the codes all over again, we can save lots of time.\nThe benefit of doing so is greater when the processing time of the codes is longer. Caching can be done by adding cache==TRUE as a chunk option.\nBy adding the option, once an R chunk is processed, its results are saved and can be reused again by R later when you compile the document again.\n\n\n\n\n\n\n\nDirection\n\n\n\nChange eval: false to eval: true in the cache_1 chunk\nKnit and confirm that sample_qmd_cache and sample_qmd_files folders are created\nKnit again and observe that the knitting process is much faster now\n\n\n\n\n\n\n\nWhen any part of the R codes within a cached R code chunk is changed, R is smart enough to recognize the change and evaluate the R code chunk again without using the cached results for the chunk.\n\n\n\n\nDirection\n\n\nChange y = 1 + x + v to y = 1 + 2 * x +v in the cache_1 chunk and knit\n\n\n\n\n\n\n\nSometimes, your R codes within an cached R code chunk have not changed, but the content of a dataset used in the R code chunk may have changed.\nIn such a case, R is unable to recognize the change in the  content  of the dataset.\n\n\n\n\n\n\nDirection\n\n\n\nChange eval: false to eval: true in the cache_2 chunk and knit\nChange y = 1 + 2 * x + v back to y = 1 + x +v and knit (notice that the printed number from cache_2 did not change)\n\n\n\n\n\n\n\n\nTo R, everything in the cache_2 chunk looks the same as they only look at the code texts, but not the contents of R objects.\nTherefore, R would call up the saved results instead of rerunning the R codes, which is not what you want.\nYou can use the dependson option to make R recognize any changes in cached R objects\n\n\n\n\n\nDirection\n\n\nAdd dependson: cache_1 to the cache_2 chunk as an option and knit again."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto.html#yaml-1",
    "href": "lectures/Chapter-2-Quarto/02-Quarto.html#yaml-1",
    "title": "02-Using Quarto to Create Documents",
    "section": "YAML",
    "text": "YAML\nWhat?\nAt the very beginning of an rqd file, you have a YAML header, where you specify how the resulting documents look like.\n\n\n\n\nDirection\n\n\n\nTry other themes and highlight methods found here\nVisit here for the other options."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto.html#directory-1",
    "href": "lectures/Chapter-2-Quarto/02-Quarto.html#directory-1",
    "title": "02-Using Quarto to Create Documents",
    "section": "Directory",
    "text": "Directory\n\nReading FilesWhat to do?\n\n\nSuppose you are interested in reading a dataset file like this:\n\nread.csv(\"corn_price.csv\")\n\n\n\n\n\nImportant\n\n\nBy default, R looks for corn_price.csv in the same folder in which the qmd file is located.\n\n\n\n\n\nIn my case, the sample_qmd.qmd is located in  /Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Chapter-2-Quarto .\nThis means that RStudio tries to find  /Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Chapter-2-Quarto/corn_price.csv.\nIf the file is not in the directory, RStudio won’t be able to find the file to import and returns an error. Clearly, all the subsequent actions dependent on the dataset will not run.\n\n\n\nTo avoid errors in reading files, there are three options:\n\nOption 1 (recommended for a beginner)\nPut all the datasets you intend to use in the same directory in which your qmd file is located.\n\nOption 2\nIf the file is not in the directory, supply the full path to the file like this\n\nread.csv(\"~/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Chapter-2-Quarto/corn_price.csv\")\n\n\nOption 3\nTell R to look for a specific directory for datasets by setting a working directory using opts_knit$set(root.dir = directory) at the beginning by adding the code like below in your qmd file after the YAML header:\n```{r}\nknir::opts_knit$set(root.dir = \"~/Dropbox/TeachingUNL/Data-Science-with-R/Chapter-2-Quarto\")\n```"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto.html#output-types-1",
    "href": "lectures/Chapter-2-Quarto/02-Quarto.html#output-types-1",
    "title": "02-Using Quarto to Create Documents",
    "section": "Output types",
    "text": "Output types\n\nVarious formatsHowNote\n\n\nYou can knit an qmd file to various formats using various engines (visit here to see all the document types).\n\n\n\n\nImportant\n\n\n\nIn this course, we only use the html option. Submit your assignment in html.\nhtml is void of the concept of page. Consequently, you do not have to worry about how you should organize texts, tables, and figures within a page (fixed amount of space).\n\n\n\n\n\n\nStep 1\nTo write to an output type you want, first add an appropriate options under the format option to the YAML header like below.\ntitle: \"Reporting using Quarto\"\nauthor: \"Taro Mieno\"\nformat:\n  html:\n    toc: true\n    toc-depth: 2\n    number-sections: true\n    number-depth: 2\n  docx: default \n  typst:  \n    papersize: a5\n    margin:\n      x: 1cm\n      y: 1cm\n    columns: 2\nHere,\n\nWORD (with word option) is generated with the default options.\nPDF (with typst option) is generated with the options specified below typst:.\n\n\n\n\n\nDirection\n\n\nAdd the docx option and typst options in the YAML above to your qmd file.\n\n\n\n\n\nStep 2\nYou should see a downward triangle right to the “Render” button. Pick one format to knit to a document of the format.\n\n\nYAML and chunk options available are different based on the output format and engine. Visit here to see the options specific to particular formats."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto.html#resources",
    "href": "lectures/Chapter-2-Quarto/02-Quarto.html#resources",
    "title": "02-Using Quarto to Create Documents",
    "section": "Resources",
    "text": "Resources\nThe best resource to learn Quarto is its official website:\n\nGeneral and specific (to document type) syntax\nYAML options specific to document type"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html",
    "title": "01-Introduction to R",
    "section": "",
    "text": "become familiar with programming\nbecome capable of using R software to conduct research independently\n\nmanipulate data\nvisualize data\nreport results\nspatial data management"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#learning-objectives",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#learning-objectives",
    "title": "01: Introduction to R",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nbecome familiar with programming\nbecome capable of using R software to conduct research independently\n\nmanipulate data\nvisualize data\nreport results\nspatial data management"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#table-of-contents",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#table-of-contents",
    "title": "01: Introduction to R",
    "section": "Table of contents",
    "text": "Table of contents\n\nIntroduction to R and RStudio\nVarious object types\nFunctions and packages\nSome fundamentals on vector, matrix, list, and data.frame"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#r",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#r",
    "title": "01: Introduction to R",
    "section": "R",
    "text": "R\n\na very popular statistical programming language used in academia and industry\n\nstarted out as software to do statistics, designed by a number of statisticians\nis open-source and free\nhas been and is evolving rapidly by the contributions of its users\nstate-of-the-art statistical methods (e.g., machine learning algorithms) written by the developers of the methods\ngeographic information system (GIS)\nbig data handling and analysis"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#rstudio",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#rstudio",
    "title": "01: Introduction to R",
    "section": "RStudio",
    "text": "RStudio\n\nR has a terrible graphic user interface\nRStudio is by far the most popular graphic user interface of R\n\n\nR User Interface"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#install-r-and-rstudio",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#install-r-and-rstudio",
    "title": "01: Introduction to R",
    "section": "Install R and RStudio",
    "text": "Install R and RStudio\n\nInstall R\nInstall RStudio"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#introduction-to-rstudio",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#introduction-to-rstudio",
    "title": "01: Introduction to R",
    "section": "Introduction to RStudio",
    "text": "Introduction to RStudio\nFour panes\n\nR script (upper left)\nConsole (lower left)\nEnvironment (upper right)\nFiles, plots, packages, and help (lower right)\n\nSmall tips\n\nAppearance\nPane Layout"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#objectives",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#objectives",
    "title": "01: Introduction to R",
    "section": "Objectives",
    "text": "Objectives\nLearn how to\n\ndo basic mathematical operations\ndefine objects in R\nlearn different object types\nuse RStudio at the same time"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#basic-element-types-atomic-mode",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#basic-element-types-atomic-mode",
    "title": "01: Introduction to R",
    "section": "Basic element types (atomic mode)",
    "text": "Basic element types (atomic mode)\n\ninteger: e.g., 1, 3,\n\nnumeric (double): e.g., 1, 1.3\ncomplex:\nlogical (boolean): true or false\ncharacter: combination of letters (numerical operations not allowed)"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#basic-arithmetic-r-as-a-calculator",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#basic-arithmetic-r-as-a-calculator",
    "title": "01: Introduction to R",
    "section": "Basic arithmetic: R as a calculator",
    "text": "Basic arithmetic: R as a calculator\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\nRStudio Tip\n\n\nYou can run the selected codes by hitting\n\nMac: command + enter\nWindows: Control + enter"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#logical-values-and-operators",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#logical-values-and-operators",
    "title": "01: Introduction to R",
    "section": "logical values and operators",
    "text": "logical values and operators\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#character",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#character",
    "title": "01: Introduction to R",
    "section": "Character",
    "text": "Character\nContents enclosed by double (or single) quotation marks will be recognized as characters.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nYou cannot do addition using characters\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nWe will learn string manipulations later using the stringr package."
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#assigning-contents-to-an-object",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#assigning-contents-to-an-object",
    "title": "01: Introduction to R",
    "section": "Assigning contents to an object",
    "text": "Assigning contents to an object\n\nHowExampleObject evaluationMore examplesNotes\n\n\n\nYou can assign contents (numeric numbers, character, boolean, etc) to an object on R and reuse it later using either &lt;- or =.\n\n\nobject_name &lt;- contents\nobject_name = contents\n\n\n\nIt does not really matter which of &lt;- or = to use. You should pick whichever makes sense for you (though it is often recommended to use &lt;-). But, it is a good idea to be consistent.\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nNotice that these objects are now in the list of objects on the environment tab of RStudio.\n\n\n\nNote\n\n\nYou can insert the assignment operator (&lt;-) by hitting\n\nMac: Option + -\nWindows Alt + -\n\n\n\n\n\n\nOnce objects are created, you can evaluate them on the console to see what is inside:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\nNote\n\n\nI often ask you to evaluate an R object. That just means looking inside the R object to see what is inside.\n\n\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nSeveral things to remember about assignment:\n\nIf you assign contents to an object of the same name, the object that had the same name will be overwritten\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nObject names cannot start with a numeric number. Try the following:\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nYou cannot use a reserved word as the name of an object (complete list found here)\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#objects",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#objects",
    "title": "01: Introduction to R",
    "section": "Objects",
    "text": "Objects\n\nBasicsVectorListMatrixdata.frameRecognizing the class\n\n\n\nR is an object-oriented programming (OOP), which basically means:\n\n“Everything is an object and everything has a name.”\n\nR has many different object types (classes)\n\nvector\nmatrix\ndata.frame\nlist\nfunction\n\n\n\n\n\n\n\n\nDefinition\n\n\nA vectors is a class of object that consists of elements of the same kind (it can have only one type of elements). You use c() to create a vector.\n\n\n\n\nExample\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nDifferent modes?\nWhat if we mix elements of different mode\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nAll the numeric values are converted to characters.\n\n\n\n\n\n\nDefinition\n\n\nA list is a class of object that consists of elements of mixed types.\n\n\n\n\nExample\n\nA list is very flexible. It can hold basically any type of R objects as its elements.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nWe will see more complex examples later.\n\n\n\n\n\n\n\nDefinition\n\n\nA matrix is a class of object that consists of elements of the same kind (it can have only one element) stored in a two-dimensional array.\n\n\n\n\nExamples\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\ndata.frame is like a matrix (or a list of columns)\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nThere are different kinds of objects that are like “data.frame”\n\ntibble\ndata.table\n\nWe will talk about some of them later.\n\n\n\nWhy?HowVisual inspection\n\n\nIt is critical to recognize the class of the objects:\n\nthe same function does different things depending on the class of the object to which the function is applied\n\nsome functions work on some object classes, but not on others\n\nMany of the errors you will encounter while working on R has something to do with applying functions that are not applicable to the objects you are working on!\n\n\nUse class, typeof, and str commands to know more about what kind of objects you are dealing with:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nYou could also use View() function for visual inspection:\n\nView(yield_data)"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#function",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#function",
    "title": "01: Introduction to R",
    "section": "Function",
    "text": "Function\n\nWhat is a function?Why functions?Some other useful functionsExercises\n\n\nA function takes R objects (vector, data.frame, etc), processes them, and returns R objects\n\nExample:\nmin() takes a vector of values as an argument and returns the minimum of all the values in the vector\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nFunctions (both base and user-written) are what makes R compelling to use as major statistical and programming software!\nIndeed, this course is pretty much all about learning useful functions that make your life easier\nWe will learn lots of functions that are made available through user-written packages\n\n\n\n\ncreate a sequence of values\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nrepeat values\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nsum values\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nfind the length of an vector\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\ngenerate a vector (call it \\(x\\)) that starts from 1 and increase by 2 until 99\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\ncalculate the sample mean of \\(x\\)\n\n\\(\\frac{1}{n}\\sum_{i=1}^n x_i\\)\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\ncalculate the sample variance of \\(x\\)\n\n\\(\\frac{1}{n}\\sum_{i=1}^n (x_i-\\bar{x})^2\\), where \\(\\bar{x}\\) is the sample mean\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#package",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#package",
    "title": "01: Introduction to R",
    "section": "Package",
    "text": "Package\n\nWhat are packages?How to use them?\n\n\nA drawer in your work space (R environment) that has specialized tools (functions) to complete tasks.\n\nExample packages:\n\ndplyr (data wrangling)\ndata.table (data wrangling)\nggplot2 (data visualization)\nsf (spatial vector data handling)\nraster (spatial raster data handling)\nstars (spatiotemporal data handling)\n\n\n\n\nBefore you use tools (functions) in the drawer (package), you need to buy (install) it first. You can install a package using the following syntax:\n\n\ninstall.packages(\"package name\")\n\n\n\nFor example,\n\n\ninstall.packages(ggplot2)\n\n\n\nYou need to bring the drawer (package) to your working space (R environment) by using the library() function:\n\n\nlibrary(ggplot2)\n\n\n\nNow, you can start using specialized tools (functions) in the drawer (package)!!"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#working-with-r-or-any-computer-programs",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#working-with-r-or-any-computer-programs",
    "title": "01: Introduction to R",
    "section": "Working with R (or any computer programs)",
    "text": "Working with R (or any computer programs)\n\nYou are the architect who has the blueprint of the final product, but does not have an ability to build specific pieces by yourself\nYou work with one worker (R) who can build specific pieces perfectly without any error  if given right tools and instructions \nThis worker is weird. If you do not give right tools or your instruction is wrong, he/she will speak up and tell you there has been an error. He/she will not try to figure out how things could have been done differently by himself/herself.\nYour job is to provide the right tools and instructions to the worker (R), and correct your instructions when you found out you made a mistake (debugging)"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#vector-1",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#vector-1",
    "title": "01: Introduction to R",
    "section": "Vector",
    "text": "Vector\n\nPrepArithmetic operationsAccess elements\n\n\nLet’s define two vectors to work with\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\nNote\n\n\nVector arithmetic operations happen element by element!\n\n\n\n\n\n\n\nTo access element(s) of a vector, you use [] like below:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nYou can access multiple elements of a vector\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#matrix-1",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#matrix-1",
    "title": "01: Introduction to R",
    "section": "Matrix",
    "text": "Matrix\n\nPrepArithmetic operationsOther operationsAccess elements\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nTo access element(s) of a matrix, you use [] just like we did for a vector. But, now you have two arguments inside [].\n\nmatrix[indices for rows, indices for columns]  \n\n\nExamples\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#list-1",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#list-1",
    "title": "01: Introduction to R",
    "section": "List",
    "text": "List\n\nAccess elements using [[]]Access elements using $\n\n\nTo access element(s) of a matrix, you can use either [[]] operator for accessing a single element and use [] for multiple elements.\nExample: single element\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nExample: multiple elements\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nYou can also use $ operator to access a single element of a list as long as the element has a name.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#data.frame-1",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#data.frame-1",
    "title": "01: Introduction to R",
    "section": "data.frame",
    "text": "data.frame\n\nBasicsAccess parts of a data.frame\n\n\ndata.frame (and its relatives)\n\nis the most common object type we use.\nis a special kind of list of vectors that are of the same length that makes a matrix-like structure\nshares properties of both the matrix and the list\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nAccessing parts of a data.frame works like accessing elements of a matrix or list.\n\nExamples\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n We will spend lots of time on how to do data wrangling on data.frames using the tidyverse package!"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#examples",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#examples",
    "title": "01: Introduction to R",
    "section": "Examples",
    "text": "Examples\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n We will spend lots of time on how to do data wrangling on data.frames using the tidyverse package!"
  },
  {
    "objectID": "lectures/Chapter-1-Introduction/01-Introduction.html#next-class-quarto",
    "href": "lectures/Chapter-1-Introduction/01-Introduction.html#next-class-quarto",
    "title": "01: Introduction to R",
    "section": "Next class: Quarto",
    "text": "Next class: Quarto"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "",
    "text": "Importing and exporting data\ndata.frame and tibble\nData manipulation with dplyr: the Basics\nGrouped operations\nExtensions"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#data.frame-and-tibble-1",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#data.frame-and-tibble-1",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "data.frame and tibble",
    "text": "data.frame and tibble\n\nWhat are they?ObjectivesPreparation 1Preparation 2\n\n\ndata.frame\nThe traditional (most common) class of two-dimensional data (rows and columns) supported by R.\n\ntibble\nA relatively newer class of two-dimensional data that brings minor enhancements over data.frame.\ntibble is defined by the tibble package, which is part of the tidyverse package.\n\n\n\nLearn basic operations on data.frame and tibble\nHighlight some differences between the two (They are almost interchangeable, and you do no need to pay much attention to which class of data you are dealing with)\n\n\n\nWe use HousePrices dataset from the AER package.\n\n#--- load the AER package ---#\nlibrary(AER)\n\nWarning: package 'AER' was built under R version 4.2.3\n\n\nLoading required package: car\n\n\nLoading required package: carData\n\n\n\nAttaching package: 'car'\n\n\nThe following object is masked from 'package:purrr':\n\n    some\n\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\n\nLoading required package: lmtest\n\n\nLoading required package: zoo\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nLoading required package: sandwich\n\n\nWarning: package 'sandwich' was built under R version 4.2.3\n\n\nLoading required package: survival\n\n\nWarning: package 'survival' was built under R version 4.2.3\n\n#--- load the HousePrices data ---#\ndata(HousePrices)\n\n\nHousePrices is a data.frame.\n\nclass(HousePrices)\n\n[1] \"data.frame\"\n\n\n\n\nYou can convert a data.frame into a tibble using as_tibble():\n\nHousePrices_tbl &lt;- as_tibble(HousePrices)\n\nHousePrices is a tibble (and also a data.frame).\n\nclass(HousePrices_tbl)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\""
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#display-method",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#display-method",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "display method",
    "text": "display method\n\n\ndata.frame\n\nHousePrices\n\n     price lotsize bedrooms bathrooms stories driveway recreation fullbase\n1    42000    5850        3         1       2      yes         no      yes\n2    38500    4000        2         1       1      yes         no       no\n3    49500    3060        3         1       1      yes         no       no\n4    60500    6650        3         1       2      yes        yes       no\n5    61000    6360        2         1       1      yes         no       no\n6    66000    4160        3         1       1      yes        yes      yes\n7    66000    3880        3         2       2      yes         no      yes\n8    69000    4160        3         1       3      yes         no       no\n9    83800    4800        3         1       1      yes        yes      yes\n10   88500    5500        3         2       4      yes        yes       no\n11   90000    7200        3         2       1      yes         no      yes\n12   30500    3000        2         1       1       no         no       no\n13   27000    1700        3         1       2      yes         no       no\n14   36000    2880        3         1       1       no         no       no\n15   37000    3600        2         1       1      yes         no       no\n16   37900    3185        2         1       1      yes         no       no\n17   40500    3300        3         1       2       no         no       no\n18   40750    5200        4         1       3      yes         no       no\n19   45000    3450        1         1       1      yes         no       no\n20   45000    3986        2         2       1       no        yes      yes\n21   48500    4785        3         1       2      yes        yes      yes\n22   65900    4510        4         2       2      yes         no      yes\n23   37900    4000        3         1       2      yes         no       no\n24   38000    3934        2         1       1      yes         no       no\n25   42000    4960        2         1       1      yes         no       no\n26   42300    3000        2         1       2      yes         no       no\n27   43500    3800        2         1       1      yes         no       no\n28   44000    4960        2         1       1      yes         no      yes\n29   44500    3000        3         1       1       no         no       no\n30   44900    4500        3         1       2      yes         no       no\n31   45000    3500        2         1       1       no         no      yes\n32   48000    3500        4         1       2      yes         no       no\n33   49000    4000        2         1       1      yes         no       no\n34   51500    4500        2         1       1      yes         no       no\n35   61000    6360        2         1       2      yes         no       no\n36   61000    4500        2         1       1      yes         no       no\n37   61700    4032        2         1       1      yes         no      yes\n38   67000    5170        3         1       4      yes         no       no\n39   82000    5400        4         2       2      yes         no       no\n40   54500    3150        2         2       1       no         no      yes\n41   66500    3745        3         1       2      yes         no      yes\n42   70000    4520        3         1       2      yes         no      yes\n43   82000    4640        4         1       2      yes         no       no\n44   92000    8580        5         3       2      yes         no       no\n45   38000    2000        2         1       2      yes         no       no\n46   44000    2160        3         1       2       no         no      yes\n47   41000    3040        2         1       1       no         no       no\n48   43000    3090        3         1       2       no         no       no\n49   48000    4960        4         1       3       no         no       no\n50   54800    3350        3         1       2      yes         no       no\n51   55000    5300        5         2       2      yes         no       no\n52   57000    4100        4         1       1       no         no      yes\n53   68000    9166        2         1       1      yes         no      yes\n54   95000    4040        3         1       2      yes         no      yes\n55   38000    3630        3         3       2       no        yes       no\n56   25000    3620        2         1       1      yes         no       no\n57   25245    2400        3         1       1       no         no       no\n58   56000    7260        3         2       1      yes        yes      yes\n59   35500    4400        3         1       2      yes         no       no\n60   30000    2400        3         1       2      yes         no       no\n61   48000    4120        2         1       2      yes         no       no\n62   48000    4750        2         1       1      yes         no       no\n63   52000    4280        2         1       1      yes         no       no\n64   54000    4820        3         1       2      yes         no       no\n65   56000    5500        4         1       2      yes        yes      yes\n66   60000    5500        3         1       2      yes         no       no\n67   60000    5040        3         1       2      yes         no      yes\n68   67000    6000        2         1       1      yes         no      yes\n69   47000    2500        2         1       1       no         no       no\n70   70000    4095        3         1       2       no        yes      yes\n71   45000    4095        2         1       1      yes         no       no\n72   51000    3150        3         1       2      yes         no      yes\n73   32500    1836        2         1       1       no         no      yes\n74   34000    2475        3         1       2      yes         no       no\n75   35000    3210        3         1       2      yes         no      yes\n76   36000    3180        3         1       1       no         no       no\n77   45000    1650        3         1       2       no         no      yes\n78   47000    3180        4         1       2      yes         no      yes\n79   55000    3180        2         2       1      yes         no      yes\n80   63900    6360        2         1       1      yes         no      yes\n81   50000    4240        3         1       2      yes         no       no\n82   35000    3240        2         1       1       no        yes       no\n83   50000    3650        3         1       2      yes         no       no\n84   43000    3240        3         1       2      yes         no       no\n85   55500    3780        2         1       2      yes        yes      yes\n86   57000    6480        3         1       2       no         no       no\n87   60000    5850        2         1       1      yes        yes      yes\n88   78000    3150        3         2       1      yes        yes      yes\n89   35000    3000        2         1       1      yes         no       no\n90   44000    3090        2         1       1      yes        yes      yes\n91   47000    6060        3         1       1      yes        yes      yes\n92   58000    5900        4         2       2       no         no      yes\n93  163000    7420        4         1       2      yes        yes      yes\n94  128000    8500        3         2       4      yes         no       no\n95  123500    8050        3         1       1      yes        yes      yes\n96   39000    6800        2         1       1      yes         no       no\n97   53900    8250        3         1       1      yes         no       no\n98   59900    8250        3         1       1      yes         no      yes\n99   35000    3500        2         1       1      yes        yes       no\n100  43000    2835        2         1       1      yes         no       no\n101  57000    4500        3         2       2       no         no      yes\n102  79000    3300        3         3       2      yes         no      yes\n103 125000    4320        3         1       2      yes         no      yes\n104 132000    3500        4         2       2      yes         no       no\n105  58000    4992        3         2       2      yes         no       no\n106  43000    4600        2         1       1      yes         no       no\n107  48000    3720        2         1       1       no         no       no\n108  58500    3680        3         2       2      yes         no       no\n109  73000    3000        3         2       2      yes        yes      yes\n110  63500    3750        2         1       1      yes        yes      yes\n111  43000    5076        3         1       1       no         no       no\n112  46500    4500        2         1       1       no         no       no\n113  92000    5000        3         1       2      yes         no       no\n114  75000    4260        4         1       2      yes         no      yes\n115  75000    6540        4         2       2       no         no       no\n116  85000    3700        4         1       2      yes        yes       no\n117  93000    3760        3         1       2      yes         no       no\n118  94500    4000        3         2       2      yes         no      yes\n119 106500    4300        3         2       2      yes         no      yes\n120 116000    6840        5         1       2      yes        yes      yes\n121  61500    4400        2         1       1      yes         no       no\n122  80000   10500        4         2       2      yes         no       no\n123  37000    4400        2         1       1      yes         no       no\n124  59500    4840        3         1       2      yes         no       no\n125  70000    4120        2         1       1      yes         no      yes\n126  95000    4260        4         2       2      yes         no       no\n127 117000    5960        3         3       2      yes        yes      yes\n128 122500    8800        3         2       2      yes         no       no\n129 123500    4560        3         2       2      yes        yes      yes\n130 127000    4600        3         2       2      yes        yes       no\n131  35000    4840        2         1       2      yes         no       no\n132  44500    3850        3         1       2      yes         no       no\n133  49900    4900        3         1       2       no         no       no\n134  50500    3850        3         1       1      yes         no       no\n135  65000    3760        3         1       1      yes         no       no\n136  90000    6000        4         2       4      yes         no       no\n137  46000    4370        3         1       2      yes         no       no\n138  35000    7700        2         1       1      yes         no       no\n139  26500    2990        2         1       1       no         no       no\n140  43000    3750        3         1       2      yes         no       no\n141  56000    3000        3         1       2      yes         no       no\n142  40000    2650        3         1       2      yes         no      yes\n143  51000    4500        4         2       2      yes         no      yes\n144  51000    4500        2         1       1       no         no       no\n145  57250    4500        3         1       2       no         no      yes\n146  44000    4500        2         1       2      yes         no       no\n147  61000    2175        3         1       2       no        yes      yes\n148  62000    4500        3         2       3      yes         no       no\n149  80000    4800        5         2       3       no         no      yes\n150  50000    4600        4         1       2      yes         no       no\n151  59900    3450        3         1       2      yes         no       no\n152  35500    3000        3         1       2       no         no       no\n153  37000    3600        2         2       2      yes         no      yes\n154  42000    3600        3         1       2       no         no       no\n155  48000    3750        3         1       1      yes         no       no\n156  60000    2610        4         3       2       no         no       no\n157  60000    2953        3         1       2      yes         no      yes\n158  60000    2747        4         2       2       no         no       no\n159  62000    1905        5         1       2       no         no      yes\n160  63000    3968        3         1       2       no         no       no\n161  63900    3162        3         1       2      yes         no       no\n162 130000    6000        4         1       2      yes         no      yes\n163  25000    2910        3         1       1       no         no       no\n164  50000    2135        3         2       2       no         no       no\n165  52900    3120        3         1       2       no         no      yes\n166  62000    4075        3         1       1      yes        yes      yes\n167  73500    3410        3         1       2       no         no       no\n168  38000    2800        3         1       1      yes         no       no\n169  46000    2684        2         1       1      yes         no       no\n170  48000    3100        3         1       2       no         no      yes\n171  52500    3630        2         1       1      yes         no      yes\n172  32000    1950        3         1       1       no         no       no\n173  38000    2430        3         1       1       no         no       no\n174  46000    4320        3         1       1       no         no       no\n175  50000    3036        3         1       2      yes         no      yes\n176  57500    3630        3         2       2      yes         no       no\n177  70000    5400        4         1       2      yes         no       no\n178  69900    3420        4         2       2      yes         no      yes\n179  74500    3180        3         2       2      yes         no       no\n180  42000    3660        4         1       2       no         no       no\n181  60000    4410        2         1       1       no         no       no\n182  50000    3990        3         1       2      yes         no       no\n183  58000    4340        3         1       1      yes         no       no\n184  63900    3510        3         1       2      yes         no       no\n185  28000    3420        5         1       2       no         no       no\n186  54000    3420        2         1       2      yes         no       no\n187  44700    5495        3         1       1      yes         no      yes\n188  47000    3480        4         1       2       no         no       no\n189  50000    7424        3         1       1       no         no       no\n190  57250    3460        4         1       2      yes         no       no\n191  67000    3630        3         1       2      yes         no       no\n192  52500    3630        2         1       1      yes         no       no\n193  42000    3480        3         1       2       no         no       no\n194  57500    3460        3         2       1      yes         no      yes\n195  33000    3180        2         1       1      yes         no       no\n196  34400    3635        2         1       1       no         no       no\n197  40000    3960        3         1       1      yes         no       no\n198  40500    4350        3         1       2       no         no       no\n199  46500    3930        2         1       1       no         no       no\n200  52000    3570        3         1       2      yes         no      yes\n201  53000    3600        3         1       1      yes         no       no\n202  53900    2520        5         2       1       no         no      yes\n203  50000    3480        3         1       1       no         no       no\n204  55500    3180        4         2       2      yes         no       no\n205  56000    3290        2         1       1      yes         no       no\n206  60000    4000        4         2       2       no         no       no\n207  60000    2325        3         1       2       no         no       no\n208  69500    4350        2         1       1      yes         no      yes\n209  72000    3540        2         1       1       no        yes      yes\n210  92500    3960        3         1       1      yes         no      yes\n211  40500    2640        2         1       1       no         no       no\n212  42000    2700        2         1       1       no         no       no\n213  47900    2700        3         1       1       no         no       no\n214  52000    3180        3         1       2       no         no      yes\n215  62000    3500        4         1       2      yes         no       no\n216  41000    3630        2         1       1      yes         no       no\n217 138300    6000        4         3       2      yes        yes      yes\n218  42000    3150        3         1       2       no         no       no\n219  47000    3792        4         1       2      yes         no       no\n220  64500    3510        3         1       3      yes         no       no\n221  46000    3120        3         1       2       no         no       no\n222  58000    3000        4         1       3      yes         no      yes\n223  70100    4200        3         1       2      yes         no       no\n224  78500    2817        4         2       2       no        yes      yes\n225  87250    3240        4         1       3      yes         no       no\n226  70800    2800        3         2       2       no         no      yes\n227  56000    3816        2         1       1      yes         no      yes\n228  48000    3185        2         1       1      yes         no      yes\n229  68000    6321        3         1       2      yes         no      yes\n230  79000    3650        3         2       2      yes         no       no\n231  80000    4700        4         1       2      yes        yes      yes\n232  87000    6615        4         2       2      yes        yes       no\n233  25000    3850        3         1       2      yes         no       no\n234  32500    3970        1         1       1       no         no       no\n235  36000    3000        2         1       2      yes         no       no\n236  42500    4352        4         1       2       no         no       no\n237  43000    3630        4         1       2      yes         no       no\n238  50000    3600        6         1       2      yes         no       no\n239  26000    3000        2         1       1      yes         no      yes\n240  30000    3000        4         1       2      yes         no       no\n241  34000    2787        4         2       2      yes         no       no\n242  52000    3000        2         1       2      yes         no       no\n243  70000    4770        3         1       1      yes        yes      yes\n244  27000    3649        2         1       1      yes         no       no\n245  32500    3970        3         1       2      yes         no      yes\n246  37200    2910        2         1       1       no         no       no\n247  38000    3480        2         1       1      yes         no       no\n248  42000    6615        3         1       2      yes         no       no\n249  44500    3500        2         1       1      yes         no       no\n250  45000    3450        3         1       2      yes         no      yes\n251  48500    3450        3         1       1      yes         no      yes\n252  52000    3520        2         2       1      yes         no      yes\n253  53900    6930        4         1       2       no         no       no\n254  60000    4600        3         2       2      yes         no       no\n255  61000    4360        4         1       2      yes         no       no\n256  64500    3450        3         1       2      yes         no      yes\n257  71000    4410        4         3       2      yes         no      yes\n258  75500    4600        2         2       1      yes         no       no\n259  33500    3640        2         1       1      yes         no       no\n260  41000    6000        2         1       1      yes         no       no\n261  41000    5400        4         1       2      yes         no       no\n262  46200    3640        4         1       2      yes         no      yes\n263  48500    3640        2         1       1      yes         no       no\n264  48900    4040        2         1       1      yes         no       no\n265  50000    3640        2         1       1      yes         no       no\n266  51000    3640        2         1       1      yes         no       no\n267  52500    5640        2         1       1       no         no       no\n268  52500    3600        2         1       1      yes         no       no\n269  54000    3600        2         1       1      yes         no       no\n270  59000    4632        4         1       2      yes         no       no\n271  60000    3640        3         2       2      yes         no      yes\n272  63000    4900        2         1       2      yes         no      yes\n273  64000    4510        4         1       2      yes         no       no\n274  64900    4100        2         2       1      yes        yes      yes\n275  65000    3640        3         1       2      yes         no       no\n276  66000    5680        3         1       2      yes        yes       no\n277  70000    6300        3         1       1      yes         no       no\n278  65500    4000        3         1       2      yes         no       no\n279  57000    3960        3         1       2      yes         no       no\n280  52000    5960        3         1       2      yes        yes      yes\n281  54000    5830        2         1       1      yes         no       no\n282  74500    4500        4         2       1       no         no      yes\n283  90000    4100        3         2       3      yes         no       no\n284  45000    6750        2         1       1      yes         no       no\n285  45000    9000        3         1       2      yes         no       no\n286  65000    2550        3         1       2      yes         no      yes\n287  55000    7152        3         1       2      yes         no       no\n288  62000    6450        4         1       2      yes         no       no\n289  30000    3360        2         1       1      yes         no       no\n290  34000    3264        2         1       1      yes         no       no\n291  38000    4000        3         1       1      yes         no       no\n292  39000    4000        3         1       2      yes         no       no\n293  45000    3069        2         1       1      yes         no       no\n294  47000    4040        2         1       1      yes         no       no\n295  47500    4040        2         1       1      yes         no       no\n296  49000    3185        2         1       1      yes         no       no\n297  50000    5900        2         1       1      yes         no       no\n298  50000    3120        3         1       2      yes         no       no\n299  52900    5450        2         1       1      yes         no       no\n300  53000    4040        2         1       1      yes         no       no\n301  55000    4080        2         1       1      yes         no       no\n302  56000    8080        3         1       1      yes         no       no\n303  58500    4040        2         1       2      yes         no       no\n304  59500    4080        3         1       2      yes         no       no\n305  60000    5800        3         1       1      yes         no       no\n306  64000    5885        2         1       1      yes         no       no\n307  67000    9667        4         2       2      yes        yes      yes\n308  68100    3420        4         2       2      yes         no       no\n309  70000    5800        2         1       1      yes        yes      yes\n310  72000    7600        4         1       2      yes         no       no\n311  57500    5400        3         1       1      yes         no       no\n312  69900    4995        4         2       1      yes         no      yes\n313  70000    3000        3         1       2      yes         no      yes\n314  75000    5500        3         2       1      yes         no      yes\n315  76900    6450        3         2       1      yes        yes      yes\n316  78000    6210        4         1       4      yes        yes       no\n317  80000    5000        3         1       4      yes         no       no\n318  82000    5000        3         1       3      yes         no       no\n319  83000    5828        4         1       4      yes        yes       no\n320  83000    5200        3         1       3      yes         no       no\n321  83900    5500        3         1       3      yes        yes       no\n322  88500    6350        3         2       3      yes        yes       no\n323  93000    8250        3         2       3      yes         no       no\n324  98000    6000        3         1       1      yes         no       no\n325  98500    7700        3         2       1      yes         no       no\n326  99000    8880        3         2       2      yes         no      yes\n327 101000    8880        2         1       1      yes         no       no\n328 110000    6480        3         2       4      yes         no       no\n329 115442    7000        3         2       4      yes         no       no\n330 120000    8875        3         1       1      yes         no       no\n331 124000    7155        3         2       1      yes        yes      yes\n332 175000    8960        4         4       4      yes         no       no\n333  50000    7350        2         1       1      yes         no       no\n334  55000    3850        2         1       1      yes         no       no\n335  60000    7000        3         1       1      yes         no       no\n336  61000    7770        2         1       1      yes         no       no\n337 106000    7440        3         2       1      yes        yes      yes\n338 155000    7500        3         3       1      yes         no      yes\n339 141000    8100        4         1       2      yes        yes      yes\n340  62500    3900        3         1       2      yes         no       no\n341  70000    2970        3         1       3      yes         no       no\n342  73000    3000        3         1       2      yes         no      yes\n343  80000   10500        2         1       1      yes         no       no\n344  80000    5500        3         2       2      yes         no       no\n345  88000    4500        3         1       4      yes         no       no\n346  49000    3850        3         1       1      yes         no       no\n347  52000    4130        3         2       2      yes         no       no\n348  59500    4046        3         1       2      yes         no      yes\n349  60000    4079        3         1       3      yes         no       no\n350  64000    4000        3         1       2      yes         no       no\n351  64500    9860        3         1       1      yes         no       no\n352  68500    7000        3         1       2      yes         no      yes\n353  78500    7980        3         1       1      yes         no       no\n354  86000    6800        2         1       1      yes        yes      yes\n355  86900    4300        6         2       2      yes         no       no\n356  75000   10269        3         1       1      yes         no       no\n357  78000    6100        3         1       3      yes        yes       no\n358  95000    6420        3         2       3      yes         no       no\n359  97000   12090        4         2       2      yes         no       no\n360 107000    6600        3         1       4      yes         no       no\n361 130000    6600        4         2       2      yes        yes      yes\n362 145000    8580        4         3       4      yes         no       no\n363 175000    9960        3         2       2      yes         no      yes\n364  72000   10700        3         1       2      yes        yes      yes\n365  84900   15600        3         1       1      yes         no       no\n366  99000   13200        2         1       1      yes         no      yes\n367 114000    9000        4         2       4      yes         no       no\n368 120000    7950        5         2       2      yes         no      yes\n369 145000   16200        5         3       2      yes         no       no\n370  79000    6100        3         2       1      yes         no      yes\n371  82000    6360        3         1       1      yes        yes      yes\n372  85000    6420        3         1       1      yes         no      yes\n373 100500    6360        4         2       3      yes         no       no\n374 122000    6540        4         2       2      yes        yes      yes\n375 126500    6420        3         2       2      yes         no       no\n376 133000    6550        4         2       2      yes         no       no\n377 140000    5750        3         2       4      yes        yes       no\n378 190000    7420        4         2       3      yes         no       no\n379  84000    7160        3         1       1      yes         no      yes\n380  97000    4000        3         2       2      yes         no      yes\n381 103500    9000        4         2       4      yes        yes       no\n382 112500    6550        3         1       2      yes         no      yes\n383 140000   13200        3         1       2      yes         no      yes\n384  74700    7085        3         1       1      yes        yes      yes\n385  78000    6600        4         2       2      yes        yes      yes\n386  78900    6900        3         1       1      yes        yes      yes\n387  83900   11460        3         1       3      yes         no       no\n388  85000    7020        3         1       1      yes         no      yes\n389  85000    6540        3         1       1      yes        yes      yes\n390  86000    8000        3         1       1      yes        yes      yes\n391  86900    9620        3         1       1      yes         no      yes\n392  94500   10500        3         2       1      yes         no      yes\n393  96000    5020        3         1       4      yes         no       no\n394 106000    7440        3         2       4      yes         no       no\n395  72000    6600        3         1       1      yes        yes      yes\n396  74500    7200        3         1       2      yes        yes      yes\n397  77000    6710        3         2       2      yes        yes      yes\n398  80750    6660        4         2       2      yes        yes      yes\n399  82900    7000        3         1       1      yes         no      yes\n400  85000    7231        3         1       2      yes        yes      yes\n401  92500    7410        3         1       1      yes        yes      yes\n402  76000    7800        3         1       1      yes         no      yes\n403  77500    6825        3         1       1      yes        yes      yes\n404  80000    6360        3         1       3      yes         no       no\n405  80000    6600        4         2       1      yes         no      yes\n406  86000    6900        3         2       1      yes        yes      yes\n407  87000    6600        3         1       1      yes        yes      yes\n408  87500    6420        3         1       3      yes         no      yes\n409  89000    6600        3         2       1      yes         no      yes\n410  89900    6600        3         2       3      yes         no       no\n411  90000    9000        3         1       1      yes         no      yes\n412  95000    6500        3         2       3      yes         no       no\n413 112000    6360        3         2       4      yes         no       no\n414  31900    5300        3         1       1       no         no       no\n415  52000    2850        3         2       2       no         no      yes\n416  90000    6400        3         1       1      yes        yes      yes\n417 100000   11175        3         1       1      yes         no      yes\n418  91700    6750        2         1       1      yes        yes      yes\n419 174500    7500        4         2       2      yes         no      yes\n420  94700    6000        3         1       2      yes         no       no\n421  68000   10240        2         1       1      yes         no       no\n422  80000    5136        3         1       2      yes        yes      yes\n423  61100    3400        3         1       2      yes         no      yes\n424  62900    2880        3         1       2      yes         no       no\n425  65500    3840        3         1       2      yes         no       no\n426  66000    2870        2         1       2      yes        yes      yes\n427  49500    5320        2         1       1      yes         no       no\n428  50000    3512        2         1       1      yes         no       no\n429  53500    3480        2         1       1      yes         no       no\n430  58550    3600        3         1       1      yes         no      yes\n431  64500    3520        2         1       2      yes         no       no\n432  65000    5320        3         1       2      yes        yes      yes\n433  69000    6040        3         1       1      yes         no       no\n434  73000   11410        2         1       2      yes         no       no\n435  75000    8400        3         1       2      yes        yes      yes\n436  75000    5300        4         2       1      yes         no       no\n437 132000    7800        3         2       2      yes         no       no\n438  60000    3520        3         1       2      yes         no       no\n439  65000    5360        3         1       2      yes         no       no\n440  69000    6862        3         1       2      yes         no       no\n441  51900    3520        3         1       1      yes         no       no\n442  57000    4050        2         1       2      yes        yes      yes\n443  65000    3520        3         1       1      yes         no       no\n444  79500    4400        4         1       2      yes         no       no\n445  72500    5720        2         1       2      yes         no       no\n446 104900   11440        4         1       2      yes         no      yes\n447 114900    7482        3         2       3      yes         no       no\n448 120000    5500        4         2       2      yes         no      yes\n449  58000    4320        3         1       2      yes         no       no\n450  67000    5400        2         1       2      yes         no       no\n451  67000    4320        3         1       1      yes         no       no\n452  69000    4815        2         1       1      yes         no       no\n453  73000    6100        3         1       1      yes         no      yes\n454  73500    7980        3         1       1      yes         no       no\n455  74900    6050        3         1       1      yes         no      yes\n456  75000    3800        3         1       2      yes        yes      yes\n457  79500    5400        5         1       2      yes        yes      yes\n458 120900    6000        3         2       4      yes        yes      yes\n459  44555    2398        3         1       1      yes         no       no\n460  47000    2145        3         1       2      yes         no      yes\n461  47600    2145        3         1       2      yes         no      yes\n462  49000    2145        3         1       3      yes         no       no\n463  49000    2610        3         1       2      yes         no      yes\n464  49000    1950        3         2       2      yes         no      yes\n465  49500    2145        3         1       3      yes         no       no\n466  52000    2275        3         1       3      yes         no       no\n467  54000    2856        3         1       3      yes         no       no\n468  55000    2015        3         1       2      yes         no      yes\n469  55000    2176        2         1       2      yes        yes       no\n470  56000    2145        4         2       1      yes         no      yes\n471  60000    2145        3         1       3      yes         no       no\n472  60500    2787        3         1       1      yes         no      yes\n473  50000    9500        3         1       2      yes         no       no\n474  64900    4990        4         2       2      yes        yes      yes\n475  93000    6670        3         1       3      yes         no      yes\n476  85000    6254        4         2       1      yes         no      yes\n477  61500   10360        2         1       1      yes         no       no\n478  88500    5500        3         2       1      yes        yes      yes\n479  88000    5450        4         2       1      yes         no      yes\n480  89000    5500        3         1       3      yes         no       no\n481  89500    6000        4         1       3      yes        yes      yes\n482  95000    5700        3         1       1      yes        yes      yes\n483  95500    6600        2         2       4      yes         no      yes\n484  51500    4000        2         1       1      yes         no       no\n485  62900    4880        3         1       1      yes         no       no\n486 118500    4880        4         2       2      yes         no       no\n487  42900    8050        2         1       1      yes         no       no\n488  44100    8100        2         1       1      yes         no       no\n489  47000    5880        3         1       1      yes         no       no\n490  50000    5880        2         1       1      yes         no       no\n491  50000   12944        3         1       1      yes         no       no\n492  53000    6020        3         1       1      yes         no       no\n493  53000    4050        2         1       1      yes         no       no\n494  54000    8400        2         1       1      yes         no       no\n495  58500    5600        2         1       1      yes         no       no\n496  59000    5985        3         1       1      yes         no      yes\n497  60000    4500        3         1       1      yes         no      yes\n498  62900    4920        3         1       2      yes         no       no\n499  64000    8250        3         1       1      yes         no       no\n500  65000    8400        4         1       4      yes         no       no\n501  67900    6440        2         1       1      yes         no       no\n502  68500    8100        4         1       4      yes         no      yes\n503  70000    6720        3         1       1      yes         no       no\n504  70500    5948        3         1       2      yes         no       no\n505  71500    8150        3         2       1      yes        yes      yes\n506  71900    4800        2         1       1      yes        yes      yes\n507  75000    9800        4         2       2      yes        yes       no\n508  75000    8520        3         1       1      yes         no       no\n509  87000    8372        3         1       3      yes         no       no\n510  64000    4040        3         1       2      yes         no       no\n511  70000    4646        3         1       2      yes        yes      yes\n512  47500    4775        4         1       2      yes         no       no\n513  62600    4950        4         1       2      yes         no       no\n514  66000    5010        3         1       2      yes         no      yes\n515  58900    6060        2         1       1      yes         no      yes\n516  53000    3584        2         1       1      yes         no       no\n517  95000    6000        3         2       3      yes        yes       no\n518  96500    6000        4         2       4      yes         no       no\n519 101000    6240        4         2       2      yes         no       no\n520 102000    6000        3         2       2      yes        yes       no\n521 103000    7680        4         2       4      yes        yes       no\n522 105000    6000        4         2       4      yes        yes       no\n523 108000    6000        4         2       4      yes         no       no\n524 110000    6000        4         2       4      yes         no       no\n525 113000    6000        4         2       4      yes         no       no\n526 120000    7475        3         2       4      yes         no       no\n527 105000    5150        3         2       4      yes         no       no\n528 106000    6325        3         1       4      yes         no       no\n529 107500    6000        3         2       4      yes         no       no\n530 108000    6000        3         2       3      yes         no       no\n531 113750    6000        3         1       4      yes        yes       no\n532 120000    7000        3         1       4      yes         no       no\n533  70000   12900        3         1       1      yes         no       no\n534  71000    7686        3         1       1      yes        yes      yes\n535  82000    5000        3         1       3      yes         no       no\n536  82000    5800        3         2       4      yes         no       no\n537  82500    6000        3         2       4      yes         no       no\n538  83000    4800        3         1       3      yes         no       no\n539  84000    6500        3         2       3      yes         no       no\n540  85000    7320        4         2       2      yes         no       no\n541  85000    6525        3         2       4      yes         no       no\n542  91500    4800        3         2       4      yes        yes       no\n543  94000    6000        3         2       4      yes         no       no\n544 103000    6000        3         2       4      yes        yes       no\n545 105000    6000        3         2       2      yes        yes       no\n546 105000    6000        3         1       2      yes         no       no\n    gasheat aircon garage prefer\n1        no     no      1     no\n2        no     no      0     no\n3        no     no      0     no\n4        no     no      0     no\n5        no     no      0     no\n6        no    yes      0     no\n7        no     no      2     no\n8        no     no      0     no\n9        no     no      0     no\n10       no    yes      1     no\n11       no    yes      3     no\n12       no     no      0     no\n13       no     no      0     no\n14       no     no      0     no\n15       no     no      0     no\n16       no    yes      0     no\n17       no     no      1     no\n18       no     no      0     no\n19       no     no      0     no\n20       no     no      1     no\n21       no    yes      1     no\n22       no     no      0     no\n23       no    yes      0     no\n24       no     no      0     no\n25       no     no      0     no\n26       no     no      0     no\n27       no     no      0     no\n28       no    yes      0     no\n29       no    yes      0     no\n30       no    yes      0     no\n31       no     no      0     no\n32       no    yes      2     no\n33       no     no      0     no\n34       no     no      0     no\n35       no     no      0     no\n36       no    yes      2     no\n37       no     no      0     no\n38       no    yes      0     no\n39       no    yes      2     no\n40       no     no      0     no\n41       no     no      0     no\n42       no    yes      0     no\n43       no     no      1     no\n44       no     no      2     no\n45       no     no      0     no\n46       no     no      0     no\n47       no     no      0     no\n48       no     no      0     no\n49       no     no      0     no\n50       no     no      0     no\n51       no     no      0     no\n52       no     no      0     no\n53       no    yes      2     no\n54      yes     no      1     no\n55       no     no      0     no\n56       no     no      0     no\n57       no     no      0     no\n58       no     no      3     no\n59       no     no      0     no\n60       no     no      0     no\n61       no     no      0     no\n62       no     no      0     no\n63       no    yes      2     no\n64       no     no      0     no\n65       no     no      0     no\n66       no    yes      0     no\n67       no    yes      0     no\n68       no    yes      1     no\n69       no    yes      0     no\n70       no    yes      0     no\n71       no     no      2     no\n72       no     no      0     no\n73       no     no      0     no\n74       no     no      0     no\n75       no     no      0     no\n76       no     no      0     no\n77       no     no      0     no\n78       no    yes      0     no\n79       no     no      2     no\n80       no    yes      1     no\n81       no    yes      0     no\n82       no     no      1     no\n83       no     no      0     no\n84       no     no      2     no\n85       no     no      0     no\n86       no    yes      1     no\n87       no     no      2     no\n88       no    yes      0     no\n89       no     no      1     no\n90       no     no      0     no\n91       no     no      0     no\n92       no     no      1     no\n93       no    yes      2     no\n94       no    yes      2     no\n95       no    yes      1     no\n96       no     no      0     no\n97       no     no      2     no\n98       no     no      3     no\n99       no     no      0     no\n100      no     no      0     no\n101      no    yes      0     no\n102      no     no      0     no\n103     yes     no      2     no\n104     yes     no      2     no\n105      no     no      2     no\n106      no     no      0     no\n107      no    yes      0     no\n108      no     no      0     no\n109      no     no      0     no\n110      no     no      0     no\n111      no     no      0     no\n112      no     no      0     no\n113      no    yes      0     no\n114      no    yes      0     no\n115      no    yes      0     no\n116      no    yes      0     no\n117     yes     no      2     no\n118      no    yes      1     no\n119      no     no      1     no\n120      no    yes      1     no\n121      no     no      1     no\n122      no     no      1     no\n123      no     no      0     no\n124      no     no      1     no\n125      no     no      1     no\n126     yes     no      0     no\n127      no     no      1     no\n128      no    yes      2     no\n129      no    yes      1     no\n130      no    yes      2     no\n131      no     no      0     no\n132      no     no      0     no\n133      no     no      0     no\n134      no     no      2     no\n135      no     no      2     no\n136      no     no      1     no\n137      no     no      0     no\n138      no     no      0     no\n139      no     no      1     no\n140      no     no      0     no\n141      no     no      0     no\n142      no     no      1     no\n143      no     no      2     no\n144      no     no      0     no\n145      no    yes      0     no\n146     yes     no      1     no\n147      no    yes      0     no\n148     yes     no      1     no\n149     yes     no      0     no\n150      no     no      0     no\n151      no     no      1     no\n152      no     no      0     no\n153      no     no      1     no\n154      no     no      1     no\n155      no     no      0     no\n156      no     no      0     no\n157      no    yes      0     no\n158      no     no      0     no\n159      no     no      0     no\n160      no     no      0     no\n161      no    yes      1     no\n162      no     no      2     no\n163      no     no      0     no\n164      no     no      0     no\n165     yes     no      0     no\n166      no     no      2     no\n167      no    yes      0     no\n168      no     no      0     no\n169      no    yes      1     no\n170      no     no      0     no\n171      no     no      0     no\n172     yes     no      0     no\n173      no     no      0     no\n174      no     no      1     no\n175      no     no      0     no\n176     yes     no      2     no\n177      no     no      0     no\n178      no    yes      2     no\n179      no     no      2     no\n180      no     no      0     no\n181      no     no      1     no\n182      no     no      0     no\n183      no     no      0     no\n184      no     no      0     no\n185      no     no      0     no\n186     yes     no      1     no\n187      no     no      0     no\n188      no     no      1     no\n189      no     no      0     no\n190      no    yes      0     no\n191      no     no      2     no\n192      no    yes      0     no\n193      no     no      1     no\n194      no    yes      1     no\n195      no     no      0     no\n196      no     no      0     no\n197      no     no      0     no\n198     yes     no      1     no\n199      no     no      0     no\n200      no     no      0     no\n201      no     no      1     no\n202      no    yes      1     no\n203      no    yes      0     no\n204      no     no      0     no\n205     yes     no      1     no\n206      no     no      0     no\n207      no     no      0     no\n208      no     no      0     no\n209      no     no      0     no\n210      no     no      2     no\n211      no     no      1     no\n212      no     no      0     no\n213      no     no      0     no\n214      no     no      0     no\n215      no     no      2     no\n216      no     no      0     no\n217     yes     no      2     no\n218      no     no      0     no\n219      no     no      0     no\n220      no     no      0     no\n221      no     no      0     no\n222      no    yes      2     no\n223      no     no      1     no\n224      no     no      1     no\n225      no     no      1     no\n226      no    yes      1     no\n227      no    yes      2     no\n228      no     no      2     no\n229      no    yes      1     no\n230      no     no      2     no\n231      no    yes      1     no\n232     yes     no      1     no\n233      no     no      0     no\n234      no     no      0     no\n235      no     no      0     no\n236      no     no      1     no\n237      no     no      3     no\n238      no     no      1     no\n239      no     no      2     no\n240      no     no      0     no\n241      no     no      0     no\n242      no    yes      0     no\n243      no     no      0     no\n244      no     no      0     no\n245      no     no      0     no\n246      no     no      0     no\n247      no     no      1     no\n248      no     no      0     no\n249      no     no      0     no\n250      no     no      0     no\n251      no     no      2     no\n252      no     no      0     no\n253      no     no      1     no\n254      no    yes      1     no\n255      no     no      0     no\n256      no     no      1     no\n257      no     no      2     no\n258      no    yes      2     no\n259      no     no      0     no\n260      no     no      0     no\n261      no     no      0     no\n262      no     no      0     no\n263      no     no      0     no\n264      no     no      0     no\n265      no     no      1     no\n266      no     no      0     no\n267      no     no      0     no\n268      no     no      0     no\n269      no     no      0     no\n270      no    yes      0     no\n271      no     no      0     no\n272      no     no      0     no\n273      no    yes      2     no\n274      no     no      0     no\n275      no    yes      0     no\n276      no    yes      1     no\n277      no    yes      2     no\n278      no     no      1     no\n279      no     no      0     no\n280      no     no      0     no\n281      no     no      2     no\n282      no    yes      2     no\n283      no    yes      2     no\n284      no     no      0     no\n285      no     no      2     no\n286      no     no      0     no\n287      no    yes      0     no\n288      no     no      0     no\n289      no     no      1     no\n290      no     no      0     no\n291      no     no      0     no\n292      no     no      1     no\n293      no     no      1     no\n294      no     no      0     no\n295      no     no      1     no\n296      no     no      2     no\n297      no     no      1     no\n298      no     no      1     no\n299      no     no      0     no\n300      no     no      0     no\n301      no     no      0     no\n302      no    yes      2     no\n303      no     no      1     no\n304      no     no      2     no\n305     yes     no      2     no\n306      no    yes      1     no\n307      no     no      1     no\n308      no     no      0     no\n309      no    yes      0     no\n310      no    yes      2     no\n311      no     no      3     no\n312      no     no      0     no\n313      no    yes      0     no\n314      no     no      0     no\n315     yes     no      0     no\n316      no    yes      0     no\n317      no     no      0     no\n318      no    yes      0     no\n319      no     no      0     no\n320      no    yes      0     no\n321      no    yes      1     no\n322      no    yes      0     no\n323      no    yes      0     no\n324      no    yes      1     no\n325      no     no      2     no\n326      no    yes      1     no\n327      no    yes      1     no\n328      no    yes      2     no\n329      no    yes      2     no\n330      no     no      1     no\n331      no    yes      2     no\n332      no    yes      3     no\n333      no     no      1     no\n334      no     no      0     no\n335      no     no      3     no\n336      no     no      1     no\n337      no    yes      0    yes\n338      no    yes      2    yes\n339      no    yes      2    yes\n340      no     no      0     no\n341      no     no      0     no\n342      no     no      0     no\n343      no     no      1     no\n344      no     no      1     no\n345      no    yes      0     no\n346      no     no      0     no\n347      no     no      2     no\n348      no     no      1     no\n349      no     no      0     no\n350      no     no      2     no\n351      no     no      0     no\n352      no     no      0     no\n353      no     no      2     no\n354      no     no      2     no\n355      no     no      0     no\n356      no     no      1    yes\n357      no    yes      0    yes\n358      no    yes      0    yes\n359      no     no      2    yes\n360      no    yes      3    yes\n361      no    yes      1    yes\n362      no    yes      2    yes\n363      no     no      2    yes\n364      no     no      0     no\n365      no    yes      2     no\n366     yes     no      1     no\n367      no    yes      2     no\n368     yes     no      2     no\n369      no     no      0     no\n370      no     no      2    yes\n371      no    yes      2    yes\n372      no    yes      0    yes\n373      no    yes      2    yes\n374      no    yes      2    yes\n375      no    yes      1    yes\n376      no    yes      1    yes\n377      no    yes      1    yes\n378      no    yes      2    yes\n379      no     no      2    yes\n380      no    yes      0    yes\n381      no    yes      1    yes\n382      no    yes      0    yes\n383      no    yes      2    yes\n384      no     no      2    yes\n385      no     no      0    yes\n386      no     no      0    yes\n387      no     no      2    yes\n388      no    yes      2    yes\n389      no     no      2    yes\n390      no    yes      2    yes\n391      no     no      2    yes\n392      no    yes      1    yes\n393      no    yes      0    yes\n394      no     no      1    yes\n395      no     no      0    yes\n396      no     no      1    yes\n397      no     no      1    yes\n398      no     no      1    yes\n399      no     no      2    yes\n400      no    yes      0    yes\n401      no    yes      2    yes\n402      no    yes      2    yes\n403      no    yes      0    yes\n404      no     no      0    yes\n405      no     no      0    yes\n406      no     no      0    yes\n407      no     no      2    yes\n408      no     no      0    yes\n409      no    yes      0    yes\n410      no    yes      0    yes\n411      no     no      1    yes\n412      no    yes      0    yes\n413      no    yes      0    yes\n414      no    yes      0    yes\n415      no     no      0    yes\n416      no    yes      1    yes\n417      no    yes      1    yes\n418      no     no      2    yes\n419      no    yes      3    yes\n420     yes     no      1    yes\n421      no    yes      2    yes\n422      no    yes      0    yes\n423      no     no      2    yes\n424      no     no      0    yes\n425      no     no      1    yes\n426      no     no      0    yes\n427      no     no      1    yes\n428      no     no      1    yes\n429      no     no      0    yes\n430      no    yes      0    yes\n431      no     no      0    yes\n432      no     no      0    yes\n433      no     no      2    yes\n434      no     no      0    yes\n435      no    yes      2    yes\n436      no    yes      0    yes\n437      no     no      0    yes\n438      no     no      0    yes\n439      no     no      2    yes\n440      no    yes      2    yes\n441      no     no      2    yes\n442      no     no      0    yes\n443      no     no      0    yes\n444      no    yes      2    yes\n445      no    yes      0    yes\n446      no     no      1    yes\n447     yes     no      1    yes\n448      no    yes      1    yes\n449      no     no      2    yes\n450      no     no      0    yes\n451      no     no      0    yes\n452      no    yes      0    yes\n453      no    yes      0    yes\n454      no     no      1    yes\n455      no     no      0    yes\n456      no     no      1    yes\n457      no    yes      0    yes\n458      no    yes      0    yes\n459      no     no      0    yes\n460      no     no      0    yes\n461      no     no      0    yes\n462      no     no      0    yes\n463      no     no      0    yes\n464      no     no      0    yes\n465      no     no      0    yes\n466     yes    yes      0    yes\n467      no     no      0    yes\n468      no     no      0    yes\n469      no     no      0    yes\n470      no     no      0    yes\n471      no     no      1    yes\n472      no     no      0    yes\n473      no     no      3    yes\n474      no     no      0    yes\n475      no     no      0    yes\n476      no     no      1    yes\n477      no     no      1    yes\n478      no     no      2    yes\n479      no    yes      0    yes\n480      no     no      1    yes\n481      no     no      0    yes\n482      no    yes      2    yes\n483      no     no      0    yes\n484      no     no      0    yes\n485      no     no      2    yes\n486      no    yes      1    yes\n487      no     no      0     no\n488      no     no      1     no\n489      no     no      1     no\n490      no     no      0     no\n491      no     no      0     no\n492      no     no      0     no\n493      no     no      0     no\n494      no     no      1     no\n495      no    yes      0     no\n496      no     no      0     no\n497      no     no      0     no\n498      no     no      1     no\n499      no     no      0     no\n500      no     no      3     no\n501      no    yes      3     no\n502      no    yes      2     no\n503      no     no      0     no\n504      no    yes      0     no\n505      no     no      0     no\n506      no     no      0     no\n507      no     no      2     no\n508      no    yes      2     no\n509      no    yes      2     no\n510      no     no      1     no\n511      no     no      2     no\n512      no     no      0     no\n513      no    yes      0     no\n514      no     no      0     no\n515      no     no      1     no\n516     yes     no      0     no\n517      no    yes      0     no\n518      no    yes      0     no\n519      no    yes      1     no\n520      no     no      1     no\n521      no    yes      1     no\n522      no    yes      1     no\n523      no    yes      1     no\n524      no     no      2     no\n525      no    yes      1     no\n526      no    yes      2     no\n527      no    yes      2     no\n528      no    yes      1     no\n529      no    yes      1     no\n530      no    yes      0     no\n531      no    yes      2     no\n532      no    yes      2     no\n533      no     no      2     no\n534     yes     no      0     no\n535      no    yes      0     no\n536      no    yes      0     no\n537      no    yes      0     no\n538      no    yes      0     no\n539      no    yes      0     no\n540      no     no      0     no\n541      no     no      1     no\n542      no    yes      0     no\n543      no    yes      0     no\n544      no    yes      1     no\n545      no    yes      1     no\n546      no    yes      1     no\n\n\n\ntibble\n\nHousePrices_tbl\n\n# A tibble: 546 × 12\n   price lotsize bedrooms bathrooms stories driveway recreation fullbase gasheat\n   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt; &lt;fct&gt;    &lt;fct&gt;      &lt;fct&gt;    &lt;fct&gt;  \n 1 42000    5850        3         1       2 yes      no         yes      no     \n 2 38500    4000        2         1       1 yes      no         no       no     \n 3 49500    3060        3         1       1 yes      no         no       no     \n 4 60500    6650        3         1       2 yes      yes        no       no     \n 5 61000    6360        2         1       1 yes      no         no       no     \n 6 66000    4160        3         1       1 yes      yes        yes      no     \n 7 66000    3880        3         2       2 yes      no         yes      no     \n 8 69000    4160        3         1       3 yes      no         no       no     \n 9 83800    4800        3         1       1 yes      yes        yes      no     \n10 88500    5500        3         2       4 yes      yes        no       no     \n# ℹ 536 more rows\n# ℹ 3 more variables: aircon &lt;fct&gt;, garage &lt;dbl&gt;, prefer &lt;fct&gt;"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#accessing-parts-of-the-data",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#accessing-parts-of-the-data",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Accessing parts of the data",
    "text": "Accessing parts of the data\n\nNumerical indexVariable namesUsing $\n\n\nSubsetting a data.frame works in a very similar manner as a matrix:\n\nmatrix[rows of interest, columns of interest]\n\nExample:\n2nd to 8th rows, the 3rd and 5th columns\n\n\ndata.frame\n\nHousePrices[2:8, c(3,5)]\n\n  bedrooms stories\n2        2       1\n3        3       1\n4        3       2\n5        2       1\n6        3       1\n7        3       2\n8        3       3\n\n\n\ntibble\n\nHousePrices_tbl[2:8, c(3,5)]\n\n# A tibble: 7 × 2\n  bedrooms stories\n     &lt;dbl&gt;   &lt;dbl&gt;\n1        2       1\n2        3       1\n3        3       2\n4        2       1\n5        3       1\n6        3       2\n7        3       3\n\n\n\n\n\n\n\nBut, subsetting a data.frame using numerical indexes are not recommended because it is not immediately clear to you (or your collaborators who might look at the code) what you intended to do with the code.\nInstead, the following is better:\n\ndata[, c(\"variable 1\", \"variable 2\", ...)]\n\nExamples:\n\n\ndata.frame\n\nhead(HousePrices[, \"price\"])\n\n[1] 42000 38500 49500 60500 61000 66000\n\n\n\ntibble\n\nhead(HousePrices_tbl[, \"price\"])\n\n# A tibble: 6 × 1\n  price\n  &lt;dbl&gt;\n1 42000\n2 38500\n3 49500\n4 60500\n5 61000\n6 66000\n\n\n\n\n\n\n\nAlternatively, to access a column (variable) from a dataset, you can use $ like below (remember? A data.frame is a special kind of list).\nExamples:\n\n\ndata.frame\n\nhead(HousePrices$price)\n\n[1] 42000 38500 49500 60500 61000 66000\n\n\n\ntibble\n\nhead(HousePrices_tbl$price)\n\n[1] 42000 38500 49500 60500 61000 66000"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#importing-and-exporting-datasets-1",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#importing-and-exporting-datasets-1",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Importing and Exporting Datasets",
    "text": "Importing and Exporting Datasets\n\nObjectives and DirectionsHow\n\n\nObjectives\n\nread datasets in various formats (csv, xlsx, dta, and rds) containing corn yields in Nebraska counties for the year of 2008.\nwrite R objects as files in various formats\n\nDirections\n\nGo here and download all the files\nPlace all the data files in the same folder (any folder)\n\n\n\nCheck the format in which the dataset is stored by looking at the extension of the file (what comes after the file name and a dot)\n\ncorn.csv: a file format Microsof Excel supports.\ncorn.xlsx: another format supported by Microsof Excel, which may have more than one tabs of data sheets.\ncorn.dta: a format that STATA support (software that is immensely popular for economists).\ncorn.rds: a format that R supports.\n\nWhen you import a dataset, you need to use a particular function that is appropriate for the particular type of format the dataset is in."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#read-a-csv-file",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#read-a-csv-file",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Read a CSV file",
    "text": "Read a CSV file\n\nread.csv()read_csv()Compare\n\n\nYou can use read.csv() from the base package.\nSyntax\n\n#--- NOT RUN ---#  \ndata = read.csv(path to the file to import)\n\n\nExamples\n\ncorn_yields_df &lt;- read.csv(\"~/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Lectures/Chapter-3-DataWrangling/corn_yields.csv\")\n\n\n\nYou can use read_csv() from the readr package.\nSyntax\n\n#--- NOT RUN ---#  \ndata = readr::read_csv(path to the file to import)\n\n\nExamples\n\ncorn_yields_tbl &lt;- readr::read_csv(\"~/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Lectures/Chapter-3-DataWrangling/corn_yields.csv\")\n\n\n\n Direction: evaluate corn_yields_df and corn_yields_tbl to see the differences.\n\nData read using read.csv():\n\nclass(corn_yields_df)\n\n[1] \"data.frame\"\n\n\n\nData read using read_csv():\n\nclass(corn_yields_tbl) \n\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\""
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#setting-the-working-directory",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#setting-the-working-directory",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Setting the working directory",
    "text": "Setting the working directory\n\nWhat and whyhownavigationRStudio project\n\n\n\nIn the previous slide, we provided a full path to the csv file to read onto R.\nIf you expect to import and/or export (save) datasets and R objects often in that particular directory, it would be nice to tell R to look for files in the directory by default.\n\nSo, a code like this works:\n\ncorn_yield &lt;- read.csv(\"corn_yields.csv\")\n\n\nThis will save us from writing out the full path every time we either import or export datasets.\nYou can do so by designate the directory as the working directory.\nOnce the working directory is set, R looks for files in that directory unless told otherwise.\nIt is not just when importing datasets. When you export an R object as a file, R will create a file in the working directory by default.\n\n\n\nYou can use setwd() to designate a directory as the working directory:\n\n#--- Setting a directory (path) in your computer---#\nsetwd(\"/Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Lectures/Chapter-3-DataWrangling\")\n\n\nYou can check the current working directory using the getwd() function:\n\n#--- find the current working directory ---#\ngetwd()\n\n[1] \"/Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/lectures/Chapter-3-DataWrangling\"\n\n\n\n\nSuppose it is convenient for you to set the working directory somewhere else than the folder where all the datasets are residing.\n\nsetwd(\"~/Dropbox/TeachingUNL/DataScience\")\n\n\nYou can then provide the path to the file relative to the working directory like this:\n\ndata &lt;- read_csv(\"Datasets/Chapter_3_data_wrangling/corn_yields.csv\")\n\n\nYou can use .. to move up a folder. For example, if you want to import corn_yields.csv stored in “~/Dropbox/TeachingUNL”, then the following works:\n\ndata &lt;- read_csv(\"../corn_yields.csv\")\n\n\n\nYou can create an R Project using RStudio:\n\nclick on a blue transparent box with a plus sign at the upper left corner of RStudio\nclick on “new directory” (to initiate a new folder) or “existing directory” (to designate an existing folder)\n\n( Direction:  demonstrate on RStduio)\nWhen you open an R Project folder, then the working directory is set at the project folder. Confirm this:\n\ngetwd()"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#read-a-sheet-from-an-xlsx-file",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#read-a-sheet-from-an-xlsx-file",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Read a sheet from an xls(x) file",
    "text": "Read a sheet from an xls(x) file\n\nInstructionSyntax and ExamplesNote\n\n\n\nYou can use read_excel() from the readxl package to read data sheets from an xls(x) file, which is part of the tidyverse package.\nThe readxl package is installed when you install the tidyverse pacakge.\nHowever, it is not loaded automatically when you load the tidyverse package.\nSo, you need to library the package even if you have loaded the tidyverse package.\n\n\nlibrary(readxl)\n\n\n\nSyntax\n\nread_excel(path to the file, sheet = x)\n\n\nx: sheet number\n\nExamples\nImport a sheet of an xls(x) file using read_excel():\n\ncorn_08 &lt;- read_excel(\"corn_yields.xls\", sheet = 1) # 1st sheet \ncorn_09 &lt;- read_excel(\"corn_yields.xls\", sheet = 2) # 2nd sheet\n\n\n\n\n#--- check the class ---#\nclass(corn_08) \n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\nNotice that the data is converted into a tibble (because the readxl package is part of the tidyverse package.)."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#read-a-stata-data-file-.dta",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#read-a-stata-data-file-.dta",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Read a STATA data file (.dta)",
    "text": "Read a STATA data file (.dta)\n\nInstructionSyntax and ExamplesNote\n\n\nUse the read.dta13() function from the readstata13 package.\n\n#--- install the package ---#\ninstall.packages(haven)\n\n#--- load the package ---#\nlibrary(haven) \n\n\n\nWarning: package 'haven' was built under R version 4.2.3\n\n\n\n\nSyntax\n\n#--- Syntax (NOT RUN) ---#\nhaven::read_dta(file path)\n\nExamples\n\n#--- import the data ---#\ncorn_yields &lt;- haven::read_dta(\"corn_yields.dta\")\n\n\n\n\n#--- check the class ---#\nclass(corn_yields) \n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\nNotice that the data is converted into a data.frame object, not a tibble."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#read-an-rds-file",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#read-an-rds-file",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Read an rds file",
    "text": "Read an rds file\n\nInstructionSyntax and ExamplesNote\n\n\n\nAn rds ( r data set) file is a file type that is supported by R.\nYou can use the readRDS() function to read an rds file.\nNo special packages are necessary.\n\n\n\nSyntax\n\nreadRDS(\"path to the file\") \n\nExamples\n\ncorn_yields &lt;- readRDS(\"corn_yields.rds\") \n\n\n\n\nclass(corn_yields)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n\nNotice that the imported dataset is already a tibble object. This is because the R object exported as corn_yields.rds was tibble."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#export-an-r-object",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#export-an-r-object",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Export an R object",
    "text": "Export an R object\n\nInstructionSyntax and ExamplesNotes on RDS\n\n\n\nExporting datasets work much the same way as importing them.\nHere is the list of functions that let you export a data.frame or (tibble) in different formats:\n\ncsv: write_csv()\ndta: save.dta13()\nrds: saveRDS()\n\n\n\n\nSyntax\n\nexport_function(obeject name, file name)\n\nExamples\n\n#--- export as csv ---#\nwrite_csv(corn_yields, \"corn_yields_exp_rownames.csv\")\n\n#--- export as dta ---#\nsave.dta13(corn_yields, \"corn_yields_exp.dta\")\n\n#--- export as rds ---#\nsaveRDS(corn_yields, \"corn_yields_exp.rds\")\n\n#--- export as xls file ---#\n# just don't do it\n\n\n\ntype preservatin\nYou can export any kind of R objects as an rds file.\n\na_list &lt;- list(a = c(\"R\", \"rocks\"), b = corn_yields)   \n\nsaveRDS(a_list, \"a_list.rds\")\n\nreadRDS(\"a_list.rds\")\n\n$a\n[1] \"R\"     \"rocks\"\n\n$b\n# A tibble: 161 × 9\n    Year State  FIPS County_name State_name Commodity `Data item`      Irrigated\n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;       &lt;chr&gt;      &lt;chr&gt;     &lt;chr&gt;                &lt;int&gt;\n 1  2008    31 31019 BUFFALO     NEBRASKA   CORN      CORN, GRAIN - Y…         0\n 2  2008    31 31019 BUFFALO     NEBRASKA   CORN      CORN, GRAIN, IR…         1\n 3  2008    31 31041 CUSTER      NEBRASKA   CORN      CORN, GRAIN - Y…         0\n 4  2008    31 31041 CUSTER      NEBRASKA   CORN      CORN, GRAIN, IR…         1\n 5  2008    31 31047 DAWSON      NEBRASKA   CORN      CORN, GRAIN - Y…         0\n 6  2008    31 31047 DAWSON      NEBRASKA   CORN      CORN, GRAIN, IR…         1\n 7  2008    31 31077 GREELEY     NEBRASKA   CORN      CORN, GRAIN - Y…         0\n 8  2008    31 31077 GREELEY     NEBRASKA   CORN      CORN, GRAIN, IR…         1\n 9  2008    31 31079 HALL        NEBRASKA   CORN      CORN, GRAIN - Y…         0\n10  2008    31 31079 HALL        NEBRASKA   CORN      CORN, GRAIN, IR…         1\n# ℹ 151 more rows\n# ℹ 1 more variable: Yield &lt;int&gt;\n\n\nAs you can see a list is saved as an rds file, and when imported, it is still a list.\nfile size Check the size of the corn data files in different formats.\nWhich one is the smallest?"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#essential-verbs",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#essential-verbs",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Essential verbs",
    "text": "Essential verbs\n\nfilter()\nmutate()\nselect()\nrename()\narrange()\nrelocate()"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#before-we-start",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#before-we-start",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Before we start",
    "text": "Before we start\nFor illustrations, we will use flights_mini that we create below:\n\nlibrary(nycflights13)\n\n(\nflights_mini &lt;- distinct(flights,month,day,.keep_all=TRUE) %&gt;% \n  filter(day %in% c(1,2)) %&gt;% \n  arrange(month)\n)\n\n# A tibble: 24 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     2       42           2359        43      518            442\n 3  2013     2     1      456            500        -4      652            648\n 4  2013     2     2        3           2359         4      513            444\n 5  2013     3     1        4           2159       125      318             56\n 6  2013     3     2       43           2355        48      605            440\n 7  2013     4     1      454            500        -6      636            640\n 8  2013     4     2        9           2355        14      346            345\n 9  2013     5     1        9           1655       434      308           2020\n10  2013     5     2        3           1905       298      241           2224\n# ℹ 14 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#filter-row-wise-subset",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#filter-row-wise-subset",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "filter(): row-wise subset",
    "text": "filter(): row-wise subset\n\nInstructionSingle conditionfilter(): multiple conditionsImportantExercises\n\n\n\nfilter(): subset data row-wise using logical conditions based on variables\n\n#--- syntax ---# \nfilter(dataset, condition 1, ..., condition K)\n\n\n\n\nequal tonot equal toinequality\n\n\nObservations where month is 4:\n\nfilter(flights_mini, month == 4) \n\n# A tibble: 2 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     4     1      454            500        -6      636            640\n2  2013     4     2        9           2355        14      346            345\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nObservations where month is NOT 4:\n\nfilter(flights_mini, month != 4) \n\n# A tibble: 22 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     2       42           2359        43      518            442\n 3  2013     2     1      456            500        -4      652            648\n 4  2013     2     2        3           2359         4      513            444\n 5  2013     3     1        4           2159       125      318             56\n 6  2013     3     2       43           2355        48      605            440\n 7  2013     5     1        9           1655       434      308           2020\n 8  2013     5     2        3           1905       298      241           2224\n 9  2013     6     1        2           2359         3      341            350\n10  2013     6     2       14           2359        15      339            341\n# ℹ 12 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nObservations where month is less than 4:\n\nfilter(flights_mini, month &lt; 4) \n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     1     1      517            515         2      830            819\n2  2013     1     2       42           2359        43      518            442\n3  2013     2     1      456            500        -4      652            648\n4  2013     2     2        3           2359         4      513            444\n5  2013     3     1        4           2159       125      318             56\n6  2013     3     2       43           2355        48      605            440\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\n\n\n\n\nand (&)or (|)in any of (%in%)\n\n\n\nfilter(flights_mini, month &gt;= 9 & month &lt;= 11) \n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     9     1        9           2359        10      343            340\n2  2013     9     2        8           2255        73      126             19\n3  2013    10     1      447            500       -13      614            648\n4  2013    10     2      449            500       -11      620            648\n5  2013    11     1        5           2359         6      352            345\n6  2013    11     2      453            500        -7      644            651\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n#--- alternatively ---#\n# filter(flights_mini, month &gt;= 9, month &lt;= 11)\n\n\n\n\nfilter(flights_mini, month &gt;= 11 | month &lt;= 1) \n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     1     1      517            515         2      830            819\n2  2013     1     2       42           2359        43      518            442\n3  2013    11     1        5           2359         6      352            345\n4  2013    11     2      453            500        -7      644            651\n5  2013    12     1       13           2359        14      446            445\n6  2013    12     2       12           2250        82      103           2356\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\nfilter(flights_mini, month %in% c(1, 2, 3)) \n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     1     1      517            515         2      830            819\n2  2013     1     2       42           2359        43      518            442\n3  2013     2     1      456            500        -4      652            648\n4  2013     2     2        3           2359         4      513            444\n5  2013     3     1        4           2159       125      318             56\n6  2013     3     2       43           2355        48      605            440\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n#--- equivalently ---#\n# filter(flights_mini, month == 1 | month == 2 | month == 2) \n\nThis is very useful when you have many values to check.\n\n\n\n\n\nNotice that the original data flights_mini was not affected by the filter() operations in the previous slides.\nThis is consistent across all the verbs in dplyr. Whatever actions you take, the original data is unaltered.\n–\nTo use the transformed data for later use, you need to assign it to a new object (or overwrite if that is okay):\n\nflights_mini_filtered &lt;- filter(flights_mini, month == 4) \n\nflights_mini_filtered\n\n# A tibble: 2 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     4     1      454            500        -6      636            640\n2  2013     4     2        9           2355        14      346            345\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\nExercise 1Exercise 2Exercise 3\n\n\n\nFind the observations in June and July\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere is the output you should get:\n\n\n# A tibble: 4 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     6     1        2           2359         3      341            350\n2  2013     6     2       14           2359        15      339            341\n3  2013     7     1        1           2029       212      236           2359\n4  2013     7     2       12           2245        87      117              4\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\nFind the observations in January, April, July, September, and December\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere is the output you should get:\n\n\n# A tibble: 10 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     2       42           2359        43      518            442\n 3  2013     4     1      454            500        -6      636            640\n 4  2013     4     2        9           2355        14      346            345\n 5  2013     6     1        2           2359         3      341            350\n 6  2013     6     2       14           2359        15      339            341\n 7  2013     9     1        9           2359        10      343            340\n 8  2013     9     2        8           2255        73      126             19\n 9  2013    12     1       13           2359        14      446            445\n10  2013    12     2       12           2250        82      103           2356\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\nFind the observations by carrier “US”\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere is the output you should get:\n\n\n# A tibble: 5 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     2     1      456            500        -4      652            648\n2  2013     4     1      454            500        -6      636            640\n3  2013    10     1      447            500       -13      614            648\n4  2013    10     2      449            500       -11      620            648\n5  2013    11     2      453            500        -7      644            651\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#select-column-wise-subset",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#select-column-wise-subset",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "select(): column-wise subset",
    "text": "select(): column-wise subset\n\nInstructionExamplesExercises\n\n\nYou can select a subset of variables using select().\n\nselect(dataset, variable 1, variable 2, ...)\n\nIf you would like to drop some variables, but want to keep all the other variables, you can take advantage of − operator:\n\nselect(dataset, - variable 1, - variable 2, ...)\n\n\n\n\nExample 1Example 2Example 3\n\n\n\nselect(flights_mini, arr_delay)\n\n# A tibble: 24 × 1\n   arr_delay\n       &lt;dbl&gt;\n 1        11\n 2        36\n 3         4\n 4        29\n 5       142\n 6        85\n 7        -4\n 8         1\n 9       408\n10       257\n# ℹ 14 more rows\n\n\n\n\n\nselect(flights_mini, month, arr_delay, dep_delay)\n\n# A tibble: 24 × 3\n   month arr_delay dep_delay\n   &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1     1        11         2\n 2     1        36        43\n 3     2         4        -4\n 4     2        29         4\n 5     3       142       125\n 6     3        85        48\n 7     4        -4        -6\n 8     4         1        14\n 9     5       408       434\n10     5       257       298\n# ℹ 14 more rows\n\n\n\n\n\nselect(flights_mini, - year, - month)  \n\n# A tibble: 24 × 17\n     day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay\n   &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1     1      517            515         2      830            819        11\n 2     2       42           2359        43      518            442        36\n 3     1      456            500        -4      652            648         4\n 4     2        3           2359         4      513            444        29\n 5     1        4           2159       125      318             56       142\n 6     2       43           2355        48      605            440        85\n 7     1      454            500        -6      636            640        -4\n 8     2        9           2355        14      346            345         1\n 9     1        9           1655       434      308           2020       408\n10     2        3           1905       298      241           2224       257\n# ℹ 14 more rows\n# ℹ 10 more variables: carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;,\n#   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\n\n\n\nExercise 1Exercise 2\n\n\nSelect all the columns except arr_delay.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere is the output you should get:\n\n\n# A tibble: 24 × 18\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     2       42           2359        43      518            442\n 3  2013     2     1      456            500        -4      652            648\n 4  2013     2     2        3           2359         4      513            444\n 5  2013     3     1        4           2159       125      318             56\n 6  2013     3     2       43           2355        48      605            440\n 7  2013     4     1      454            500        -6      636            640\n 8  2013     4     2        9           2355        14      346            345\n 9  2013     5     1        9           1655       434      308           2020\n10  2013     5     2        3           1905       298      241           2224\n# ℹ 14 more rows\n# ℹ 10 more variables: carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;,\n#   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nSelect arr_delay and month.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere is the output you should get:\n\n\n# A tibble: 24 × 2\n   month arr_delay\n   &lt;int&gt;     &lt;dbl&gt;\n 1     1        11\n 2     1        36\n 3     2         4\n 4     2        29\n 5     3       142\n 6     3        85\n 7     4        -4\n 8     4         1\n 9     5       408\n10     5       257\n# ℹ 14 more rows"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#relocate-change-the-column-order",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#relocate-change-the-column-order",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "relocate(): change the column order",
    "text": "relocate(): change the column order\nYou can use relocate() to change the column order.\n\nrelocate(flights_mini, dep_time, dep_delay)\n\n# A tibble: 24 × 19\n   dep_time dep_delay  year month   day sched_dep_time arr_time sched_arr_time\n      &lt;int&gt;     &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;          &lt;int&gt;    &lt;int&gt;          &lt;int&gt;\n 1      517         2  2013     1     1            515      830            819\n 2       42        43  2013     1     2           2359      518            442\n 3      456        -4  2013     2     1            500      652            648\n 4        3         4  2013     2     2           2359      513            444\n 5        4       125  2013     3     1           2159      318             56\n 6       43        48  2013     3     2           2355      605            440\n 7      454        -6  2013     4     1            500      636            640\n 8        9        14  2013     4     2           2355      346            345\n 9        9       434  2013     5     1           1655      308           2020\n10        3       298  2013     5     2           1905      241           2224\n# ℹ 14 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nChosen variables come front with the order of the rest of the variable unchanged."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#piping-with-1",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#piping-with-1",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Piping with %>%",
    "text": "Piping with %&gt;%\n\nThe BasicMore generally.ChainingWhy piping with %&gt;%\n\n\nLet f() be a function and x is an R object that f() accepts. Then,\nx %&gt;% f() is the same as f(x)\nExample\nTry the following codes and confirm they return the same results:\n\n#--- not piped ---#\nmean(seq(1, 99, by = 2))  \n\n#--- piped ---#\nseq(1, 99, by = 2) %&gt;% mean()   \n\n\n\nSuppose you have more than one arguments to the function like this:\n\nf(x1, x2, option 1, option 2)\n\nThen,\n\nz %&gt;% f(x2, option 1, option 2) \n\nis equivalent to\n\nf(z, x2, option 1, option 2) \n\nThat is, in general, an R object that precedes the piping operator (%&gt;%) becomes the  first  argument of the function that comes after the piping operator.\n\n\nWhat if the object before the piping operator is not the first argument of the subsequent function?\n\na_string &lt;- \"I do not like space\"\n\ngsub(\" \", \"\", a_string)\n\n[1] \"Idonotlikespace\"\n\n\nThis does not work:\n\na_string %&gt;%  gsub(\" \", \"\") \n\nbecause the above is equivalent to\n\na_string &lt;- gsub(a_string, \" \", \"\") \n\nYou can refer to the preceding object by . like this:\n\na_string %&gt;% gsub(\" \", \"\", .)  \n\n[1] \"Idonotlikespace\"\n\n\n\n\nYou can keep piping like this:\n\nflights_mini %&gt;% \n  select(year, month, dep_time) %&gt;% \n  relocate(dep_time) %&gt;% \n  filter(month &lt;= 3)\n\n Important:  The object created by all the codes preceding the piping operator is passed down to the function after the piping operator.\nFor example, relocate(dep_time) receives as its first argument the outcome of the evaluation of the highlighted parts of the code below.\n\n\n\nProblemAlternative 1Alternative 2 (with piping)\n\n\n\nConsider the following sequence of actions:\n\na1 &lt;- filter(flights_mini, month &lt;= 3)\n\na2 &lt;- select(a1, year, month, dep_time)\n\na3 &lt;- relocate(a2, dep_time)\n\n\n\nNotice that you generated two intermediate datasets (a1 and a2) to obtain the dataset you wanted (a3).\nThese intermediate objects are generated only for the purpose of generating the final dataset.\nIt is easy to imagine that you will soon have lots of unnecessary intermediate objects on R.\n\n\n\n\nAlternatively, you can do the following:\n\na3 &lt;- relocate(\n  select(\n    filter(flights_mini, month &lt;= 3)\n    , year, month, dep_time\n  ), \n  dep_time\n)\n\n\n\nThis does not create any intermediate objects unlike the first example.\nHowever, it is hard to understand the code partly because the order of actions is the reverse of the order of the corresponding functions you see as you read the code from left to right.\n\n\n\n\nTaking advantage of the piping operator,\n\na3 &lt;- flights_mini %&gt;% \n  filter(month &lt;= 3) %&gt;% \n  select(year, month, dep_time) %&gt;% \n  relocate(dep_time)"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#mutate-define-new-or-update-variables",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#mutate-define-new-or-update-variables",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "mutate(): define new (or update) variables",
    "text": "mutate(): define new (or update) variables\n\nWhatmultiple variablesfunctionMore on mutate()Exercises\n\n\nYou can use mutate() to create a new variable (or overwrite the existing one) in the dataset:\nSynatax\n\nmutate(data, new variable name = expression)\n\nExample\n\nmutate(flights_mini, gain = arr_delay - dep_delay) %&gt;% \n  filter(month &lt;= 2) %&gt;% \n  relocate(gain)\n\n# A tibble: 4 × 20\n   gain  year month   day dep_time sched_dep_time dep_delay arr_time\n  &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n1     9  2013     1     1      517            515         2      830\n2    -7  2013     1     2       42           2359        43      518\n3     8  2013     2     1      456            500        -4      652\n4    25  2013     2     2        3           2359         4      513\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nYou can define multiple variables within a single mutate() function.\nYou can create a new variable based on the variables that have been just created within the same mutate() function.\nExamples\n\n\n# A tibble: 4 × 21\n   gain gain_per_hour  year month   day dep_time sched_dep_time dep_delay\n  &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n1     9          2.38  2013     1     1      517            515         2\n2    -7         -2.22  2013     1     2       42           2359        43\n3     8          4.90  2013     2     1      456            500        -4\n4    25          7.28  2013     2     2        3           2359         4\n# ℹ 13 more variables: arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;,\n#   carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nYou can apply functions to variables when creating new variables:\nExample\n\n\n# A tibble: 2 × 20\n  avg_arr_delay  year month   day dep_time sched_dep_time dep_delay arr_time\n          &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n1          61.1  2013     1     1      517            515         2      830\n2          61.1  2013     1     2       42           2359        43      518\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nNote: the function you apply has to accept a vector (a variable column).\n\n\n\nselective mutationdichotomousMore than two cases\n\n\nSometimes, you want to to alter the values of a variable for specific rows that satisfy certain conditions.\nExample: Suppose you found out that dep_time for all the flights from JFK was misreported so that dep_time is 10 minutes earlier than the true departure times.\nSo, we would like to add 10 minutes to all the flights by JFK.\nYou can use ifelse() like this:\n\nflights_mini %&gt;% \n  mutate(\n    dep_time_correct = ifelse(origin == \"JFK\", dep_time + 10, dep_time) #&lt;&lt;\n  ) %&gt;% \n  relocate(origin, dep_time, dep_time_correct) %&gt;% arrange(origin) \n\n# A tibble: 24 × 20\n   origin dep_time dep_time_correct  year month   day sched_dep_time dep_delay\n   &lt;chr&gt;     &lt;int&gt;            &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1 EWR         517              517  2013     1     1            515         2\n 2 EWR         456              456  2013     2     1            500        -4\n 3 EWR         454              454  2013     4     1            500        -6\n 4 EWR         447              447  2013    10     1            500       -13\n 5 EWR         449              449  2013    10     2            500       -11\n 6 EWR         453              453  2013    11     2            500        -7\n 7 JFK          42               52  2013     1     2           2359        43\n 8 JFK           3               13  2013     2     2           2359         4\n 9 JFK           4               14  2013     3     1           2159       125\n10 JFK          43               53  2013     3     2           2355        48\n# ℹ 14 more rows\n# ℹ 12 more variables: arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;,\n#   carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nSuppose you want to label flights with arr_delay &gt; 0 to be time-loss and time-gain otherwise:\nYou can use ifelse() for defining a dichotomous variable like this:\n\nflights_mini %&gt;% \n  mutate(\n    loss_or_gain = ifelse(arr_delay &gt; 0, \"time-loss\", \"time-gain\") #&lt;&lt;\n  ) %&gt;% \n  relocate(arr_delay, loss_or_gain)\n\n# A tibble: 24 × 20\n   arr_delay loss_or_gain  year month   day dep_time sched_dep_time dep_delay\n       &lt;dbl&gt; &lt;chr&gt;        &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1        11 time-loss     2013     1     1      517            515         2\n 2        36 time-loss     2013     1     2       42           2359        43\n 3         4 time-loss     2013     2     1      456            500        -4\n 4        29 time-loss     2013     2     2        3           2359         4\n 5       142 time-loss     2013     3     1        4           2159       125\n 6        85 time-loss     2013     3     2       43           2355        48\n 7        -4 time-gain     2013     4     1      454            500        -6\n 8         1 time-loss     2013     4     2        9           2355        14\n 9       408 time-loss     2013     5     1        9           1655       434\n10       257 time-loss     2013     5     2        3           1905       298\n# ℹ 14 more rows\n# ℹ 12 more variables: arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nThe case_when() function is useful if you have more than two cases.\nSyntax:\n\ncase_when(\n  condition 1 ~ value to assign,\n  condition 2 ~ value to assign,\n  condition 3 ~ value to assign,\n  ...\n)  \n\nExample:\n\nflights_mini %&gt;% \n  mutate(origin = case_when(\n    origin == \"JFK\" ~ \"John F. Kennedy\",\n    origin == \"EWR\" ~ \"Newark Liberty International\", \n    origin == \"LGA\" ~ \"LaGuardia\" \n    )\n  ) %&gt;% relocate(origin)\n\n# A tibble: 24 × 19\n   origin            year month   day dep_time sched_dep_time dep_delay arr_time\n   &lt;chr&gt;            &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n 1 Newark Liberty …  2013     1     1      517            515         2      830\n 2 John F. Kennedy   2013     1     2       42           2359        43      518\n 3 Newark Liberty …  2013     2     1      456            500        -4      652\n 4 John F. Kennedy   2013     2     2        3           2359         4      513\n 5 John F. Kennedy   2013     3     1        4           2159       125      318\n 6 John F. Kennedy   2013     3     2       43           2355        48      605\n 7 Newark Liberty …  2013     4     1      454            500        -6      636\n 8 John F. Kennedy   2013     4     2        9           2355        14      346\n 9 John F. Kennedy   2013     5     1        9           1655       434      308\n10 John F. Kennedy   2013     5     2        3           1905       298      241\n# ℹ 14 more rows\n# ℹ 11 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\n\n\n\n\nExercise 1Exercise 2\n\n\nFind the mean value of arr_delay in April and May (combined) and define it as a new variable named avg_arr_delay\n\n\nFind the sum of dep_delay in January, February, and December (combined) and define it as a new variable named sum_arr_delay, and then move the variable to the first column of the dataset."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#sec-group-operation",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#sec-group-operation",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Grouped Operations",
    "text": "Grouped Operations\n\nMotivationHowOther summarizing functionsNew variableExercises\n\n\nGroup-wise operations, such as the mean of arrival delay by carrier are very useful to gain an insight into differences across groups.\nThe group_by() function in conjunction with summarize() function does exactly that.\n\nSyntax\n\n#--- group by variables ---#\ngroup_by(dataset, variable to group by, variable to group by, ...)  \n\n#--- summarize ---#\nsummarize(grouped dataset, expression)  \n\n\n\n\nStep 1: groupingStep 2: summarizingPiped\n\n\nYou first use group_by() to set the group for a dataset:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThere are no apparent differences in flights_carrier from flights_slim. The only thing you did by group_by() was to tell R that whatever we will do to the new dataset is going to be done by group, which is reflected in “Groups” of the printed data.\n\n\nOnce the group is set, we are ready to do some group-wise (by carrier) operations. Let’s now find the means of arr_delay by carrier so we know which carriers perform better than others. We can do so using summarize().\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nUsing the piping operator,\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nYou can apply any functions that work on a vector (a variable)\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nYou can assign the results of the grouped operations to new variables using mutate()\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nExercise 1InstructionExercise 2Exercise 3\n\n\nFind the carrier that had the longest average departure delay (dep_delay) during May through August. Below is the output you will see if you get it right.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nFor the rest of the exercises, we are going to use the weather data for the three airports in NY. First load the weather data and get familiar with the data set.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nFind the daily mean temperature (temp), humidity (humid), wind speed (wind_speed), and precipitation (precip) by the origin of departure. Do not forget to name each daily weather variable. Below is the output you will see if you get it right.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nAnswer\n\n\nCode\ndaily_weather &lt;- \n  weather %&gt;%\n  dplyr::group_by(origin, month, day) %&gt;%\n  dplyr::summarize(\n    temp = mean(temp),\n    humid = mean(humid),\n    wind_speed = mean(wind_speed),\n    precip = mean(precip)\n  )\n\n\n\n\nSubset the daily weather data you obtained in exercise 2 so that it contains weather information only in Nov, Dec, Jan, and Feb for flights that depart from “EWR”. Below is the output you will see if you get it right.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nAnswer\n\n\nCode\n(\ndaily_weather %&gt;%\n  dplyr::filter(month %in% c(11, 12, 1, 2)) %&gt;%\n  dplyr::filter(origin == \"EWR\")\n)"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#across",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#across",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "across()",
    "text": "across()\n\nWhatSyntax and ExampleCompare\n\n\n\nacross() lets you apply the same operation (function) to multiple columns at the same time.\nIt is used with summarize() and mutate()\nIt is useful when you want to apply the same function to many variables.\n\n\n\nSyntax\n\nacross(which variables to apply the function, function, options to the function)\n\nExamples\n\n\nWarning: There was 1 warning in `summarize()`.\nℹ In argument: `across(c(arr_delay, dep_delay, air_time, time_hour), mean,\n  na.rm = TRUE)`.\nℹ In group 1: `carrier = \"9E\"`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n\n\n# A tibble: 6 × 5\n  carrier arr_delay dep_delay air_time time_hour          \n  &lt;chr&gt;       &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;dttm&gt;             \n1 9E          7.38      16.7      86.8 2013-07-03 17:06:54\n2 AA          0.364      8.59    189.  2013-07-01 03:46:41\n3 AS         -9.93       5.80    326.  2013-06-29 05:05:27\n4 B6          9.46      13.0     151.  2013-07-02 13:05:56\n5 DL          1.64       9.26    174.  2013-07-04 01:49:32\n6 EV         15.8       20.0      90.1 2013-07-04 04:33:39\n\n\nNote: na.rm = TRUE is an option for the mean() function.\n\n\nWithout across()\n\nflights %&gt;% \n  group_by(carrier) %&gt;% \n  summarize(\n    mean_arr_delay = mean(arr_delay, na.rm = TRUE),\n    mean_dep_delay = mean(dep_delay, na.rm = TRUE),\n    mean_air_time = mean(air_time, na.rm = TRUE),\n    mean_time_hour = mean(time_hour, na.rm = TRUE)\n  ) \n\n\nWith across()\n\nflights %&gt;% \n  group_by(carrier) %&gt;% \n  summarize(\n    across(c(arr_delay, dep_delay, air_time, time_hour),\n    mean,\n    na.rm = TRUE\n    )\n  )"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#select-and-relocate",
    "href": "lectures/Chapter-3-DataWrangling/03-1-data_wrangling_basics.html#select-and-relocate",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "select() and relocate()",
    "text": "select() and relocate()\nThe approaches to refer to the variables that fit with a specified pattern can be applied to other dplyr operations as well:\nTry:\n\nflights %&gt;% \n  select(c(origin, where(is.numeric)))  \n\n\nflights %&gt;% \n  select(ends_with(\"delay\"))  \n\n\nflights %&gt;% \n  relocate(where(is.character))"
  },
  {
    "objectID": "exercises/data_merging.html",
    "href": "exercises/data_merging.html",
    "title": "Merge Datasets",
    "section": "",
    "text": "library(dplyr)\nlibrary(ggplot2) # For some datasets"
  },
  {
    "objectID": "exercises/data_merging.html#exercise-1-joining-economics-data",
    "href": "exercises/data_merging.html#exercise-1-joining-economics-data",
    "title": "Merge Datasets",
    "section": "2.1 Exercise 1: Joining Economics Data",
    "text": "2.1 Exercise 1: Joining Economics Data\nDatasets: economics from the ggplot2 package and a fictitious dataset for financial events.\nTask: Merge the economics dataset with a fictitious dataset that provides a financial event for specific dates. Join these datasets using left_join based on date.\nLoad and Create Dataset:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAnswer Here\n\nAnswerSolution\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\neconomics_with_events &lt;- left_join(economics, financial_events, by = \"date\")"
  },
  {
    "objectID": "exercises/data_merging.html#exercise-2-joining-chick-weight-with-feed-type",
    "href": "exercises/data_merging.html#exercise-2-joining-chick-weight-with-feed-type",
    "title": "Merge Datasets",
    "section": "2.2 Exercise 2: Joining Chick Weight with Feed Type",
    "text": "2.2 Exercise 2: Joining Chick Weight with Feed Type\nDatasets: chickwts from the datasets package.\nTask: The chickwts dataset contains the weight of chicks alongside feed type. Create a fictitious dataset that provides pricing information for each feed type. Join these datasets based on the feed type.\nLoad Dataset:\n\ndata(chickwts)\n\n# Creating a fictitious dataset for feed pricing\nfeed_prices &lt;- tibble(\n  feed = unique(chickwts$feed),\n  price_per_kg = runif(length(unique(chickwts$feed)), 10, 50)\n)\n\nSolution:\n\nchicks_with_prices &lt;- left_join(chickwts, feed_prices, by = \"feed\")"
  },
  {
    "objectID": "exercises/data_merging.html#exercise-3-joining-plant-growth-data",
    "href": "exercises/data_merging.html#exercise-3-joining-plant-growth-data",
    "title": "Merge Datasets",
    "section": "2.3 Exercise 3: Joining Plant Growth Data",
    "text": "2.3 Exercise 3: Joining Plant Growth Data\nDatasets: PlantGrowth from the datasets package.\nTask: The PlantGrowth dataset provides information about the weight of plants under different treatment conditions. Create a fictitious dataset that assigns a scientific team responsible for each treatment type. Merge these datasets based on the group column.\nLoad Dataset:\n\ndata(PlantGrowth)\n\n# Creating a fictitious dataset for scientific teams\nteams &lt;- tibble(\n  group = unique(PlantGrowth$group),\n  team = c(\"Team Alpha\", \"Team Beta\", \"Team Gamma\")\n)\n\nSolution:\n\nplants_with_teams &lt;- left_join(PlantGrowth, teams, by = \"group\")"
  },
  {
    "objectID": "exercises/data_merging.html#exercise-1-joining-students-with-courses-by-studentid-and-semester",
    "href": "exercises/data_merging.html#exercise-1-joining-students-with-courses-by-studentid-and-semester",
    "title": "Merge Datasets",
    "section": "3.1 Exercise 1: Joining Students with Courses by StudentID and Semester",
    "text": "3.1 Exercise 1: Joining Students with Courses by StudentID and Semester\nDatasets: Two fictitious datasets: one containing student enrollment details and another containing their grades.\nTask: Join the enrollment dataset with the grades dataset using student_id and semester as the key variables.\nLoad Dataset:\n\nenrollment &lt;- tibble(\n  student_id = c(101, 102, 103, 101),\n  semester = c(\"Fall\", \"Fall\", \"Spring\", \"Spring\"),\n  course_code = c(\"ENG101\", \"MAT101\", \"SCI101\", \"ENG101\")\n)\n\ngrades &lt;- tibble(\n  student_id = c(101, 102, 103, 101),\n  semester = c(\"Fall\", \"Fall\", \"Spring\", \"Spring\"),\n  course_code = c(\"ENG101\", \"MAT101\", \"SCI101\", \"MAT101\"),\n  grade = c(\"A\", \"B+\", \"A-\", \"B\")\n)\n\nSolution:\n\nstudent_grades &lt;- left_join(enrollment, grades, by = c(\"student_id\", \"semester\", \"course_code\"))"
  },
  {
    "objectID": "exercises/data_merging.html#exercise-2-joining-employees-with-project-assignments-by-department-and-role",
    "href": "exercises/data_merging.html#exercise-2-joining-employees-with-project-assignments-by-department-and-role",
    "title": "Merge Datasets",
    "section": "3.2 Exercise 2: Joining Employees with Project Assignments by Department and Role",
    "text": "3.2 Exercise 2: Joining Employees with Project Assignments by Department and Role\nDatasets: Two fictitious datasets: one listing employee details and another detailing their project assignments.\nTask: Merge the employees dataset with the projects dataset using both department and role as the key variables.\nLoad Dataset:\n\nemployees &lt;- tibble(\n  emp_id = c(1, 2, 3, 4),\n  name = c(\"Alice\", \"Bob\", \"Charlie\", \"David\"),\n  department = c(\"IT\", \"HR\", \"IT\", \"Finance\"),\n  role = c(\"Developer\", \"Recruiter\", \"Manager\", \"Analyst\")\n)\n\nprojects &lt;- tibble(\n  project_id = c(\"P1\", \"P2\", \"P3\", \"P4\"),\n  department = c(\"IT\", \"HR\", \"IT\", \"Finance\"),\n  role = c(\"Developer\", \"Recruiter\", \"Manager\", \"Manager\"),\n  project_name = c(\"App Dev\", \"Hiring Campaign\", \"IT Strategy\", \"Budget Planning\")\n)\n\nSolution:\n\nemployee_projects &lt;- left_join(employees, projects, by = c(\"department\", \"role\"))"
  },
  {
    "objectID": "exercises/data_merging.html#exercise-3-joining-store-transactions-with-product-pricing-by-date-and-product-code",
    "href": "exercises/data_merging.html#exercise-3-joining-store-transactions-with-product-pricing-by-date-and-product-code",
    "title": "Merge Datasets",
    "section": "3.3 Exercise 3: Joining Store Transactions with Product Pricing by Date and Product Code",
    "text": "3.3 Exercise 3: Joining Store Transactions with Product Pricing by Date and Product Code\nDatasets: Two fictitious datasets: one containing transaction records and another with product pricing.\nTask: Join the transactions dataset with the pricing dataset using both transaction_date and product_code as the key variables.\nLoad Dataset:\n\ntransactions &lt;- tibble(\n  transaction_id = 1:4,\n  transaction_date = as.Date(c(\"2023-01-01\", \"2023-01-02\", \"2023-01-01\", \"2023-01-03\")),\n  product_code = c(\"X001\", \"X002\", \"X001\", \"X003\")\n)\n\npricing &lt;- tibble(\n  price_date = as.Date(c(\"2023-01-01\", \"2023-01-02\", \"2023-01-01\", \"2023-01-03\")),\n  product_code = c(\"X001\", \"X002\", \"X003\", \"X003\"),\n  price = c(100, 150, 90, 95)\n)\n\nSolution:\n\ntransaction_pricing &lt;- left_join(transactions, pricing, by = c(\"transaction_date\" = \"price_date\", \"product_code\"))\n\nThese exercises emphasize the use of left_join on multiple key variables and should offer comprehensive practice for students."
  },
  {
    "objectID": "exercises/index.html",
    "href": "exercises/index.html",
    "title": "Exercises",
    "section": "",
    "text": "Title\n\n\n\n\n\n\nMerge Datasets\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "exercises/data_merging.html#exercise-1",
    "href": "exercises/data_merging.html#exercise-1",
    "title": "Merge Datasets",
    "section": "2.1 Exercise 1",
    "text": "2.1 Exercise 1\nDatasets: economics from the ggplot2 package and a fictitious dataset for financial events.\nTask: Merge the economics dataset with a fictitious dataset that provides a financial event for specific dates. Join these datasets using left_join based on date.\nLoad and Create Dataset:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAnswer Here\n\nAnswer hereSolution\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\neconomics_with_events &lt;- left_join(economics, financial_events, by = \"date\")"
  },
  {
    "objectID": "exercises/data_merging.html#exercise-2",
    "href": "exercises/data_merging.html#exercise-2",
    "title": "Merge Datasets",
    "section": "2.2 Exercise 2",
    "text": "2.2 Exercise 2\nDatasets: chickwts from the datasets package.\nTask: The chickwts dataset contains the weight of chicks alongside feed type. Create a fictitious dataset that provides pricing information for each feed type. Join these datasets based on the feed type.\nLoad Dataset:\n\ndata(chickwts)\n\n# Creating a fictitious dataset for feed pricing\nfeed_prices &lt;- tibble(\n  feed = unique(chickwts$feed),\n  price_per_kg = runif(length(unique(chickwts$feed)), 10, 50)\n)\n\nSolution:\n\nchicks_with_prices &lt;- left_join(chickwts, feed_prices, by = \"feed\")"
  },
  {
    "objectID": "exercises/data_merging.html#exercise-3",
    "href": "exercises/data_merging.html#exercise-3",
    "title": "Merge Datasets",
    "section": "2.3 Exercise 3",
    "text": "2.3 Exercise 3\nDatasets: PlantGrowth from the datasets package.\nTask: The PlantGrowth dataset provides information about the weight of plants under different treatment conditions. Create a fictitious dataset that assigns a scientific team responsible for each treatment type. Merge these datasets based on the group column.\nLoad Dataset:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nAnswer hereSolution\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "exercises/data_merging.html#exercise-1-1",
    "href": "exercises/data_merging.html#exercise-1-1",
    "title": "Merge Datasets",
    "section": "3.1 Exercise 1",
    "text": "3.1 Exercise 1\nDatasets: Two fictitious datasets: one containing student enrollment details and another containing their grades.\nTask: Join the enrollment dataset with the grades dataset using student_id and semester as the key variables.\nLoad Dataset:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAnswer Here\n\nAnswer hereSolution\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "exercises/data_merging.html#exercise-2-1",
    "href": "exercises/data_merging.html#exercise-2-1",
    "title": "Merge Datasets",
    "section": "3.2 Exercise 2",
    "text": "3.2 Exercise 2\nDatasets: Two fictitious datasets: one listing employee details and another detailing their project assignments.\nTask: Merge the employees dataset with the projects dataset using both department and role as the key variables.\nLoad Dataset:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAnswer Here\n\nAnswer hereSolution\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "exercises/data_merging.html#exercise-3-1",
    "href": "exercises/data_merging.html#exercise-3-1",
    "title": "Merge Datasets",
    "section": "3.3 Exercise 3",
    "text": "3.3 Exercise 3\nDatasets: Two fictitious datasets: one containing transaction records and another with product pricing.\nTask: Join the transactions dataset with the pricing dataset using both transaction_date and product_code as the key variables.\nLoad Dataset:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAnswer Here\n\nAnswer hereSolution\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/sample_qmd.html",
    "href": "lectures/Chapter-2-Quarto/sample_qmd.html",
    "title": "Reporting using Quarto",
    "section": "",
    "text": "This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\nsummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\n\n\n\n\nYou can also embed plots, for example:\n\n\n\n\n\n\n\n\n\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot.\n\n\n\n\n\n\nA caption\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n\n\n\n\n\n\n\nset.seed(2334)\nyield &lt;- 200 * runif(100)\nmean_yield &lt;- mean(yield)\n\nThe average yield is 103.4483146."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/sample_qmd.html#r-markdown",
    "href": "lectures/Chapter-2-Quarto/sample_qmd.html#r-markdown",
    "title": "Reporting using Quarto",
    "section": "",
    "text": "This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\nsummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/sample_qmd.html#including-plots",
    "href": "lectures/Chapter-2-Quarto/sample_qmd.html#including-plots",
    "title": "Reporting using Quarto",
    "section": "",
    "text": "You can also embed plots, for example:\n\n\n\n\n\n\n\n\n\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/sample_qmd.html#including-a-table",
    "href": "lectures/Chapter-2-Quarto/sample_qmd.html#including-a-table",
    "title": "Reporting using Quarto",
    "section": "",
    "text": "A caption\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5.0\n3.6\n1.4\n0.2\nsetosa"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/sample_qmd.html#inline-r-code",
    "href": "lectures/Chapter-2-Quarto/sample_qmd.html#inline-r-code",
    "title": "Reporting using Quarto",
    "section": "",
    "text": "set.seed(2334)\nyield &lt;- 200 * runif(100)\nmean_yield &lt;- mean(yield)\n\nThe average yield is 103.4483146."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/sample_qmd.html#level-2-header",
    "href": "lectures/Chapter-2-Quarto/sample_qmd.html#level-2-header",
    "title": "Reporting using Quarto",
    "section": "level 2 header",
    "text": "level 2 header\n\nlevel 3 header\nSee the source rmd file:\n\nlist item 1\n\nanother list\n\nlist item 2\nlist item 3\nitalics\nbold\ncode (do not put r right after the first tick mark)\ninline math: I hate math. What does this \\(\\int_a^b f(x)dx\\) even mean?\nmath: \\[\\sum_{i=1}^n x_i/n\\]\nlink: Markdown basics\ncitationL: The best resource to learn how to use Rmarkdown is [@xie2018r]."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/sample_qmd.html#echo-and-eval",
    "href": "lectures/Chapter-2-Quarto/sample_qmd.html#echo-and-eval",
    "title": "Reporting using Quarto",
    "section": "echo and eval",
    "text": "echo and eval\nR code and results\n\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\n\nR code suppressed\n\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\n\nOnly R code (R code was not evaluated)\nBoth R codes and results not shown"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/sample_qmd.html#messages-and-warnings",
    "href": "lectures/Chapter-2-Quarto/sample_qmd.html#messages-and-warnings",
    "title": "Reporting using Quarto",
    "section": "messages and warnings",
    "text": "messages and warnings\n\nboth messages and warnings\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\nmessages suppressed\n\n\nboth messages and warnings suppressed"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/sample_qmd.html#results",
    "href": "lectures/Chapter-2-Quarto/sample_qmd.html#results",
    "title": "Reporting using Quarto",
    "section": "results",
    "text": "results\nNo results are shown.\nBut, this shows the above code was evaluated and object a was created.\n\n\n  [1] 0.442721578 0.274517669 0.832489557 0.496599494 0.222737525 0.713532158\n  [7] 0.087589334 0.561854588 0.840218469 0.712486817 0.276695837 0.342732609\n [13] 0.040782033 0.206631539 0.661236504 0.560264982 0.132385486 0.275213450\n [19] 0.315067072 0.423239615 0.488549697 0.523500251 0.144676441 0.402919444\n [25] 0.078005459 0.513939508 0.243389158 0.118420537 0.558043503 0.880511739\n [31] 0.010506572 0.339365883 0.018768277 0.210161775 0.924343563 0.901447605\n [37] 0.447185481 0.247151799 0.748219973 0.538129915 0.030727680 0.410451712\n [43] 0.356162286 0.169928680 0.176799986 0.490199240 0.889828242 0.802454498\n [49] 0.129069953 0.694477625 0.701561396 0.082388175 0.079017293 0.114650592\n [55] 0.778099407 0.038132727 0.487081168 0.278149180 0.025802752 0.249283593\n [61] 0.846890552 0.223062190 0.210762547 0.376761291 0.082064051 0.233958469\n [67] 0.342962488 0.730572376 0.894250010 0.988800461 0.497710637 0.946655608\n [73] 0.144414078 0.251685329 0.346703513 0.335317247 0.892013595 0.130301862\n [79] 0.081560876 0.045353443 0.344891126 0.410071261 0.621566948 0.818836779\n [85] 0.329713708 0.293244870 0.089540284 0.132215122 0.496356317 0.359872945\n [91] 0.571551344 0.304231321 0.803927564 0.839980256 0.665425682 0.002669636\n [97] 0.537816064 0.728669597 0.252346275 0.724311874"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/sample_qmd.html#include-false",
    "href": "lectures/Chapter-2-Quarto/sample_qmd.html#include-false",
    "title": "Reporting using Quarto",
    "section": "include = FALSE",
    "text": "include = FALSE\nNo results are shown.\nBut, this shows the above code was evaluated and object a was created.\n\n\n  [1] 0.6512069055 0.6651519733 0.6681661860 0.4336436889 0.4142855881\n  [6] 0.6184352725 0.4629165505 0.4269558790 0.8218558307 0.1010162444\n [11] 0.0123708961 0.0313172399 0.9946714859 0.2823574010 0.8826807365\n [16] 0.9619706806 0.6970768331 0.3793270397 0.4593482118 0.9015936744\n [21] 0.7884225431 0.8172776175 0.0025936761 0.0419812859 0.1375661893\n [26] 0.0807574349 0.0001389624 0.0964157293 0.1365731203 0.2667404707\n [31] 0.1942046226 0.7312312324 0.2722529070 0.9049718524 0.0646821384\n [36] 0.7556912473 0.9640818359 0.1830108573 0.4955519645 0.3714570620\n [41] 0.1313385291 0.4950157166 0.4644586414 0.4623787857 0.1028932761\n [46] 0.7315323201 0.9178925341 0.0023527150 0.2764258326 0.4405686152\n [51] 0.3944474871 0.9386764970 0.6078627864 0.7109344315 0.7814479736\n [56] 0.1052157704 0.0022772625 0.4846693375 0.0733176514 0.1580989382\n [61] 0.8278034444 0.1411051280 0.9072100250 0.0400990990 0.1020173531\n [66] 0.7970790255 0.0129714953 0.8611674064 0.9640595755 0.1485804692\n [71] 0.4508498593 0.0106433611 0.2158272723 0.0898387097 0.7344084904\n [76] 0.3068988514 0.9020985381 0.9966172257 0.2738207695 0.4925583762\n [81] 0.1939275623 0.0793949533 0.0870394167 0.1351574806 0.1819930521\n [86] 0.7270940391 0.2675342008 0.2667735845 0.2446220699 0.8374004695\n [91] 0.5338095035 0.6106576971 0.3987668650 0.3012215076 0.0457166785\n [96] 0.2340719013 0.1729808906 0.7637378986 0.3256172710 0.8985493686"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto.html#output-types",
    "href": "lectures/Chapter-2-Quarto/02-Quarto.html#output-types",
    "title": "02-Using Quarto to Create Documents",
    "section": "Output types",
    "text": "Output types\n\nVarious formatsHowNote\n\n\nYou can knit an qmd file to various formats using various engines (visit here to see all the document types).\n\n\n\n\nImportant\n\n\n\nIn this course, we only use the html option. Submit your assignment in html.\nhtml is void of the concept of page. Consequently, you do not have to worry about how you should organize texts, tables, and figures within a page (fixed amount of space).\n\n\n\n\n\n\nStep 1\nTo write to an output type you want, first add an appropriate options under the format option to the YAML header like below.\ntitle: \"Reporting using Quarto\"\nauthor: \"Taro Mieno\"\nformat:\n  html:\n    toc: true\n    toc-depth: 2\n    number-sections: true\n    number-depth: 2\n  docx: default \n  typst:  \n    papersize: a5\n    margin:\n      x: 1cm\n      y: 1cm\n    columns: 2\nHere,\n\nWORD (with word option) is generated with the default options.\nPDF (with typst option) is generated with the options specified below typst:.\n\n\n\n\n\nDirection\n\n\nAdd the docx option and typst options in the YAML above to your qmd file.\n\n\n\n\n\nStep 2\nYou should see a downward triangle right to the “Render” button. Pick one format to knit to a document of the format.\n\n\nYAML and chunk options available are different based on the output format and engine. Visit here to see the options specific to particular formats."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto.html#quarto-introduction",
    "href": "lectures/Chapter-2-Quarto/02-Quarto.html#quarto-introduction",
    "title": "02-Using Quarto to Create Documents",
    "section": "Quarto: Introduction",
    "text": "Quarto: Introduction\n\nWhat is and why Quarto?Using WORD?Make a report with Quarto\n\n\n\nIt allows you to effortlessly generate documents that can print both R codes and their outcomes (this lecture note is indeed written using Quarto) in a single document.\nIt is useful when you report the analysis you conducted and its source R codes to your advisor or anyone you report to (as long as that person understands R).\nThe power of Quarto goes well beyond just creating a simple html document. The full power of Quarto is on display here.\n\n\n\n\n\nQuarto Installation\n\n\nVisit here.\n\n\n\n\n\n\n\nIt would be a real pain to do so because you need to copy and paste all the R codes you run and the results onto WORD manually.\nOften times, copied R codes and results are very much likely to be badly formatted when pasting them\nQuarto obviates the need of repeating copying and pasting when you would like to communicate what you did (R codes) and what you found (results) without worrying too much about formatting.\n\n\n\nGenerating a report using Quarto is a two-step process:\n\nCreate an Quarto file (file with .qmd as an extension) with regular texts and R codes mixed inside it.\n\nYou use a special syntax to let the computer know which parts of the file are simple texts and which parts are R codes.\n\nTell the computer to process the qmd file (a click of a button on RStudio, or use the render() function)\n\nThe computer runs the R codes and get their outcomes\nCombine the text parts, R codes, and their results to produce a document"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto.html#quarto-the-basics",
    "href": "lectures/Chapter-2-Quarto/02-Quarto.html#quarto-the-basics",
    "title": "02-Using Quarto to Create Documents",
    "section": "Quarto: the Basics",
    "text": "Quarto: the Basics\n\nR code chunksLet’s knitqmd v.s. outputInline codeMarkdown basicsCaveat\n\n\nA qmd file would consist of two types of inputs:\n\nR code chunks\nRegular texts\n\n\n\n\n\nSpecial Syntax\n\n\nWe can indicate R codes chunks by placing R codes inside a special syntax.\n```{r}\ncodes\n```\n\n\n\n\n\n\n\n\nDirection\n\n\nTake a look at sample_qmd.qmd, which can be downloaded from here.\n\nR codes summary(cars) and plot(pressure) are enclosed individually by the special syntax\nSo, in this qmd file, R knows that it should treat them as R codes, but not regular texts.\nOn the other hand, any texts that are not enclosed by the special syntax would be recognized as regular text.\n\n\n\n\n\n\n\nThe process of compiling an qmd file to produce a document is called knitting.\n\nThe easiest way to knit is to hit the Knit button located at the top of the code pane (upper left pane by default)\nAlternatively, you can use the render() function to knit like below:\n\n\nrender(\"sample_qmd.qmd\")\n\n\n\nInspect the qmd file and its output document:\n\n\nqmd side\n\nlines 1-10: a YAML header where you control the aesthetics of the output document (more on this later)\nline 16: texts not enclosed by the special syntax\nlines 18-21: summary(cars) is an R code, which is enclosed by the special syntax\n\n\nhtml side\n\nlines 1-10: nothing\nline 16: printed as regular texts\nlines 18-21: the R code and its results printed\n\n\n\n\n\n\nYou can refer to an R object previously defined in line and display its content in line:\n\n\n\n\nDirection\n\n\nSee lines 41-51 of the qmd file\n\n\n\n\n\n\n\nheader\nmake a list\nfont\ncode highlighting\ninline math\nmath\nweb link\ncitation\n\n\n\n\n\nDirection\n\n\nCompare the chapter called “Markdown basics” of the qmd file and its corresponding output in the knitted html file\n\n\n\n\n\n\n\nWhen you knit an qmd file and create a report, R creates an R session/environment that is completely  independent  of whatever R sessions or environments you may have on your RStudio.\nThis means that when you knit an qmd file, you cannot refer to R objects you have defined on your current R session."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto.html#chunk-options",
    "href": "lectures/Chapter-2-Quarto/02-Quarto.html#chunk-options",
    "title": "02-Using Quarto to Create Documents",
    "section": "Chunk options",
    "text": "Chunk options\n\nWhat?Example: echoHowVarious optionsSpecify chunk options globally\n\n\nChunk options are special codes inside R code chunks to control how the code chunks operate.\nHere are some example options:\n\necho\neval\nmessage\nwarning\noutput\ninclude\ncache\nfig.cap, fig-height, etc\n\nSee all the options here.\n\n\n\nInspect the qmd file and its output document and observe that\n\nFrom the R code chunk with summary(cars), the code itself and its outcome are presented in the output\nFrom the R code chunk with plot(pressure), only its outcome is presented in the output\n\nThis is because of the chunk option echo: false in the second R code chunk\n\n\n\nTo set a chunk option, use the following syntax:\n```{r}\n#| option-name: choice\n\nR codes come here\n```\n\nExample\n```{r}\n#| echo: false\n\nR codes come here\n```\n\n\n\n\n\nImportant\n\n\nNo space between the initiation of an R code chunk and chunk option. For example, the echo chunk option is going to be ignored below:\n```{r}\n\n#| echo: false\n\nR codes come here\n```\n\n\n\n\n\n\n\necho and evalmessage and warningoutputincludefigure-related\n\n\n\n\necho ( true  or false): specify whether the R codes appear in the output document or not\neval ( true  or false): specify whether the R codes are evaluated or not\n\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 75-103) and its output document to see their effects.\n\n\n\n\n\n\n\n\nmessage (true or  false ): specify weather messages associated with R codes evaluation appear in the output document or not\nwarning (true or  false ): specify weather warnings associated with R codes evaluation appear in the output document or not\n\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 107-131) and its output document\n\n\n\n\n\n\n\noutput ( true , false, asis)\n\ntrue: pint all the results including warnings and messages\nfalse: hides all the results including warnings and messages\nasis: the outputs of the R codes are printed as-is without any suitable formatting\n\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 135-149) and its output document\n\n\n\n\n\n\n\ninclude: false is equivalent to having eval: true, echo: false, and results: false\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 153-166) and its output document\n\n\n\n\n\n\n\nChunk option for figure\n\nfig.align: ‘default’, ‘center’, ‘left’, ‘right’\nfig.width: in inches\nfig.height: in inches\nfig.cap: figure caption\n\n\n\n\n\n\nDirection\n\n\nPlay with these options. See here for more chunk options.\n\n\n\n\n\n\n\n\n\n\n\nWhat and why?HowNote\n\n\nSometimes, it is useful to set chunk options that apply globally (for the entire documents).\nFor example,\n\nYou are writing a term paper and the instructor may want to see only results, but not R codes.\nYou do not want any of the R codes to appear on the output document, but echo: true is the default.\nIt is a waste of time to type echo: false for all the R code chunks\n\n\n\nYou can set chunk options globally in the YAML header with the execute option like below:\n---\ntitle: \"Reporting using Quarto\"\nauthor: \"Taro Mieno\"\nformat:\n  html:\n    toc: true\n    toc-depth: 2\n    number-sections: true\n    number-depth: 2\nexecute:\n  echo: false\n---\n\n\n\n\nDirection\n\n\n\nInsert the following in the YAML header of sample_qmd.qmd file so that it looks like above\n\nexecute:\n  echo: false\n\nKnit the qmd file again and then compare lines 35-39 of the qmd file and its corresponding output.\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nLocal option always overrides the global option."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto.html#caching",
    "href": "lectures/Chapter-2-Quarto/02-Quarto.html#caching",
    "title": "02-Using Quarto to Create Documents",
    "section": "Caching",
    "text": "Caching\n\nWhat?Let’s tryChanges in codesChanges in contentsdependson\n\n\n\nIn the course of creating a document using Rmarkdown, You are going to hit the “Knit” button numerous times when you are writing a report to check whether the final output looks fine.\nEvery time you knit, all the R code chunks are evaluated, which is inefficient because R has evaluated those R code chunks before.\nSo, if we can somehow store the results of R code chunks (caching), and then let R call up the saved results instead of re-evaluating the codes all over again, we can save lots of time.\nThe benefit of doing so is greater when the processing time of the codes is longer. Caching can be done by adding cache==TRUE as a chunk option.\nBy adding the option, once an R chunk is processed, its results are saved and can be reused again by R later when you compile the document again.\n\n\n\n\n\n\n\nDirection\n\n\n\nChange eval: false to eval: true in the cache_1 chunk\nKnit and confirm that sample_qmd_cache and sample_qmd_files folders are created\nKnit again and observe that the knitting process is much faster now\n\n\n\n\n\n\n\nWhen any part of the R codes within a cached R code chunk is changed, R is smart enough to recognize the change and evaluate the R code chunk again without using the cached results for the chunk.\n\n\n\n\nDirection\n\n\nChange y = 1 + x + v to y = 1 + 2 * x +v in the cache_1 chunk and knit\n\n\n\n\n\n\n\nSometimes, your R codes within an cached R code chunk have not changed, but the content of a dataset used in the R code chunk may have changed.\nIn such a case, R is unable to recognize the change in the  content  of the dataset.\n\n\n\n\n\n\nDirection\n\n\n\nChange eval: false to eval: true in the cache_2 chunk and knit\nChange y = 1 + 2 * x + v back to y = 1 + x +v and knit (notice that the printed number from cache_2 did not change)\n\n\n\n\n\n\n\n\nTo R, everything in the cache_2 chunk looks the same as they only look at the code texts, but not the contents of R objects.\nTherefore, R would call up the saved results instead of rerunning the R codes, which is not what you want.\nYou can use the dependson option to make R recognize any changes in cached R objects\n\n\n\n\n\nDirection\n\n\nAdd dependson: cache_1 to the cache_2 chunk as an option and knit again."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto.html#directory",
    "href": "lectures/Chapter-2-Quarto/02-Quarto.html#directory",
    "title": "02-Using Quarto to Create Documents",
    "section": "Directory",
    "text": "Directory\n\nReading FilesWhat to do?\n\n\nSuppose you are interested in reading a dataset file like this:\n\nread.csv(\"corn_price.csv\")\n\n\n\n\n\nImportant\n\n\nBy default, R looks for corn_price.csv in the same folder in which the qmd file is located.\n\n\n\n\n\nIn my case, the sample_qmd.qmd is located in  /Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Chapter-2-Quarto .\nThis means that RStudio tries to find  /Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Chapter-2-Quarto/corn_price.csv.\nIf the file is not in the directory, RStudio won’t be able to find the file to import and returns an error. Clearly, all the subsequent actions dependent on the dataset will not run.\n\n\n\nTo avoid errors in reading files, there are three options:\n\nOption 1 (recommended for a beginner)\nPut all the datasets you intend to use in the same directory in which your qmd file is located.\n\nOption 2\nIf the file is not in the directory, supply the full path to the file like this\n\nread.csv(\"~/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Chapter-2-Quarto/corn_price.csv\")\n\n\nOption 3\nTell R to look for a specific directory for datasets by setting a working directory using opts_knit$set(root.dir = directory) at the beginning by adding the code like below in your qmd file after the YAML header:\n```{r}\nknir::opts_knit$set(root.dir = \"~/Dropbox/TeachingUNL/Data-Science-with-R/Chapter-2-Quarto\")\n```"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#basics",
    "href": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#basics",
    "title": "02-1 Using Quarto to Create Presentations",
    "section": "Basics",
    "text": "Basics\n\n34rete"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#frek",
    "href": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#frek",
    "title": "02-1 Using Quarto to Create Presentations",
    "section": "frek",
    "text": "frek"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#get-started",
    "href": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#get-started",
    "title": "02-1 Using Quarto to Create Presentations",
    "section": "Get Started",
    "text": "Get Started\n\nYAMLCreating a new slideInclude R codes and results\n\n\nThe first thing you need to do to create a presentation using Quarto via revealjs is to add appropriate format information in the YAML header of the qmd file like below:\n\n---\ntitle: \"02-1 Using Quarto to Create Presentations\"\nformat:\n  revealjs: \n    theme: [default, ../custom.scss]\n    fontsize: 1.6em\n    callout-icon: false\n    scrollable: true\n    echo: true\n    fig-dpi: 400\n---\n\n\n\n\nNote\n\n\n\nformat needs to be specified as revealjs\nYou can add revealjs-specific options below revealjs: (We will look at various options later).\n\n\n\n\n\n\nYou can start a new slide using either # or ##.\n\nUse # (level 1 header)\n# new section title\n\nBy default, this creates a new slide with new section title printed left-aligned at the middle of the slide.\n\nUse ## (level 2 header)\n## new slide title\n\nBy default, this creates a new slide with new slide title printed at the top left corner of the slide.\n\n\n\n\nDirection\n\n\nLook at the sample_qmd_revealjs.qmd\n\n\n\n\n\n\nWe have already learned how to do this. The way we include R codes are consistent across different output formats (including presentation with revealjs)!!\n```{r}\nR codes \n```\n\n\n\n\nRecommended global settings for research presentations\n\n\nPlace the options below in the YAML header, which hides all the codes, messages, and warnings that the audience does not have to see.\nexecute:\n  echo: false\n  message: false\n  warning: false"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto-introduction.html#quarto-introduction",
    "href": "lectures/Chapter-2-Quarto/02-Quarto-introduction.html#quarto-introduction",
    "title": "02-Using Quarto to Create Documents",
    "section": "Quarto: Introduction",
    "text": "Quarto: Introduction\n\nWhat is and why Quarto?Using WORD?Make a report with Quarto\n\n\n\nIt allows you to effortlessly generate documents that can print both R codes and their outcomes (this lecture note is indeed written using Quarto) in a single document.\nIt is useful when you report the analysis you conducted and its source R codes to your advisor or anyone you report to (as long as that person understands R).\nThe power of Quarto goes well beyond just creating a simple html document. The full power of Quarto is on display here.\n\n\n\n\n\nQuarto Installation\n\n\nVisit here.\n\n\n\n\n\n\n\nIt would be a real pain to do so because you need to copy and paste all the R codes you run and the results onto WORD manually.\nOften times, copied R codes and results are very much likely to be badly formatted when pasting them\nQuarto obviates the need of repeating copying and pasting when you would like to communicate what you did (R codes) and what you found (results) without worrying too much about formatting.\n\n\n\nGenerating a report using Quarto is a two-step process:\n\nCreate an Quarto file (file with .qmd as an extension) with regular texts and R codes mixed inside it.\n\nYou use a special syntax to let the computer know which parts of the file are simple texts and which parts are R codes.\n\nTell the computer to process the qmd file (a click of a button on RStudio, or use the render() function)\n\nThe computer runs the R codes and get their outcomes\nCombine the text parts, R codes, and their results to produce a document"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto-introduction.html#quarto-the-basics",
    "href": "lectures/Chapter-2-Quarto/02-Quarto-introduction.html#quarto-the-basics",
    "title": "02-Using Quarto to Create Documents",
    "section": "Quarto: the Basics",
    "text": "Quarto: the Basics\n\nR code chunksLet’s knitqmd v.s. outputInline codeMarkdown basicsCaveat\n\n\nA qmd file would consist of two types of inputs:\n\nR code chunks\nRegular texts\n\n\n\n\n\nSpecial Syntax\n\n\nWe can indicate R codes chunks by placing R codes inside a special syntax.\n```{r}\ncodes\n```\n\n\n\n\n\n\n\n\nDirection\n\n\nTake a look at sample_qmd.qmd, which can be downloaded from here.\n\nR codes summary(cars) and plot(pressure) are enclosed individually by the special syntax\nSo, in this qmd file, R knows that it should treat them as R codes, but not regular texts.\nOn the other hand, any texts that are not enclosed by the special syntax would be recognized as regular text.\n\n\n\n\n\n\n\nThe process of compiling an qmd file to produce a document is called knitting.\n\nThe easiest way to knit is to hit the Knit button located at the top of the code pane (upper left pane by default)\nAlternatively, you can use the render() function to knit like below:\n\n\nrender(\"sample_qmd.qmd\")\n\n\n\nInspect the qmd file and its output document:\n\n\nqmd side\n\nlines 1-10: a YAML header where you control the aesthetics of the output document (more on this later)\nline 16: texts not enclosed by the special syntax\nlines 18-21: summary(cars) is an R code, which is enclosed by the special syntax\n\n\nhtml side\n\nlines 1-10: nothing\nline 16: printed as regular texts\nlines 18-21: the R code and its results printed\n\n\n\n\n\n\nYou can refer to an R object previously defined in line and display its content in line:\n\n\n\n\nDirection\n\n\nSee lines 41-51 of the qmd file\n\n\n\n\n\n\n\nheader\nmake a list\nfont\ncode highlighting\ninline math\nmath\nweb link\ncitation\n\n\n\n\n\nDirection\n\n\nCompare the chapter called “Markdown basics” of the qmd file and its corresponding output in the knitted html file\n\n\n\n\n\n\n\nWhen you knit an qmd file and create a report, R creates an R session/environment that is completely  independent  of whatever R sessions or environments you may have on your RStudio.\nThis means that when you knit an qmd file, you cannot refer to R objects you have defined on your current R session."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto-introduction.html#chunk-options",
    "href": "lectures/Chapter-2-Quarto/02-Quarto-introduction.html#chunk-options",
    "title": "02-Using Quarto to Create Documents",
    "section": "Chunk options",
    "text": "Chunk options\n\nWhat?Example: echoHowVarious optionsSpecify chunk options globally\n\n\nChunk options are special codes inside R code chunks to control how the code chunks operate.\nHere are some example options:\n\necho\neval\nmessage\nwarning\noutput\ninclude\ncache\nfig.cap, fig-height, etc\n\nSee all the options here.\n\n\n\nInspect the qmd file and its output document and observe that\n\nFrom the R code chunk with summary(cars), the code itself and its outcome are presented in the output\nFrom the R code chunk with plot(pressure), only its outcome is presented in the output\n\nThis is because of the chunk option echo: false in the second R code chunk\n\n\n\nTo set a chunk option, use the following syntax:\n```{r}\n#| option-name: choice\n\nR codes come here\n```\n\nExample\n```{r}\n#| echo: false\n\nR codes come here\n```\n\n\n\n\n\nImportant\n\n\nNo space between the initiation of an R code chunk and chunk option. For example, the echo chunk option is going to be ignored below:\n```{r}\n\n#| echo: false\n\nR codes come here\n```\n\n\n\n\n\n\n\necho and evalmessage and warningoutputincludefigure-related\n\n\n\n\necho ( true  or false): specify whether the R codes appear in the output document or not\neval ( true  or false): specify whether the R codes are evaluated or not\n\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 75-103) and its output document to see their effects.\n\n\n\n\n\n\n\n\nmessage (true or  false ): specify weather messages associated with R codes evaluation appear in the output document or not\nwarning (true or  false ): specify weather warnings associated with R codes evaluation appear in the output document or not\n\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 107-131) and its output document\n\n\n\n\n\n\n\noutput ( true , false, asis)\n\ntrue: pint all the results including warnings and messages\nfalse: hides all the results including warnings and messages\nasis: the outputs of the R codes are printed as-is without any suitable formatting\n\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 135-149) and its output document\n\n\n\n\n\n\n\ninclude: false is equivalent to having eval: true, echo: false, and results: false\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 153-166) and its output document\n\n\n\n\n\n\n\nChunk option for figure\n\nfig.align: ‘default’, ‘center’, ‘left’, ‘right’\nfig.width: in inches\nfig.height: in inches\nfig.cap: figure caption\n\n\n\n\n\n\nDirection\n\n\nPlay with these options. See here for more chunk options.\n\n\n\n\n\n\n\n\n\n\n\nWhat and why?HowNote\n\n\nSometimes, it is useful to set chunk options that apply globally (for the entire documents).\nFor example,\n\nYou are writing a term paper and the instructor may want to see only results, but not R codes.\nYou do not want any of the R codes to appear on the output document, but echo: true is the default.\nIt is a waste of time to type echo: false for all the R code chunks\n\n\n\nYou can set chunk options globally in the YAML header with the execute option like below:\n---\ntitle: \"Reporting using Quarto\"\nauthor: \"Taro Mieno\"\nformat:\n  html:\n    toc: true\n    toc-depth: 2\n    number-sections: true\n    number-depth: 2\nexecute:\n  echo: false\n---\n\n\n\n\nDirection\n\n\n\nInsert the following in the YAML header of sample_qmd.qmd file so that it looks like above\n\nexecute:\n  echo: false\n\nKnit the qmd file again and then compare lines 35-39 of the qmd file and its corresponding output.\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nLocal option always overrides the global option."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto-introduction.html#caching",
    "href": "lectures/Chapter-2-Quarto/02-Quarto-introduction.html#caching",
    "title": "02-Using Quarto to Create Documents",
    "section": "Caching",
    "text": "Caching\n\nWhat?Let’s tryChanges in codesChanges in contentsdependson\n\n\n\nIn the course of creating a document using Rmarkdown, You are going to hit the “Knit” button numerous times when you are writing a report to check whether the final output looks fine.\nEvery time you knit, all the R code chunks are evaluated, which is inefficient because R has evaluated those R code chunks before.\nSo, if we can somehow store the results of R code chunks (caching), and then let R call up the saved results instead of re-evaluating the codes all over again, we can save lots of time.\nThe benefit of doing so is greater when the processing time of the codes is longer. Caching can be done by adding cache==TRUE as a chunk option.\nBy adding the option, once an R chunk is processed, its results are saved and can be reused again by R later when you compile the document again.\n\n\n\n\n\n\n\nDirection\n\n\n\nChange eval: false to eval: true in the cache_1 chunk\nKnit and confirm that sample_qmd_cache and sample_qmd_files folders are created\nKnit again and observe that the knitting process is much faster now\n\n\n\n\n\n\n\nWhen any part of the R codes within a cached R code chunk is changed, R is smart enough to recognize the change and evaluate the R code chunk again without using the cached results for the chunk.\n\n\n\n\nDirection\n\n\nChange y = 1 + x + v to y = 1 + 2 * x +v in the cache_1 chunk and knit\n\n\n\n\n\n\n\nSometimes, your R codes within an cached R code chunk have not changed, but the content of a dataset used in the R code chunk may have changed.\nIn such a case, R is unable to recognize the change in the  content  of the dataset.\n\n\n\n\n\n\nDirection\n\n\n\nChange eval: false to eval: true in the cache_2 chunk and knit\nChange y = 1 + 2 * x + v back to y = 1 + x +v and knit (notice that the printed number from cache_2 did not change)\n\n\n\n\n\n\n\n\nTo R, everything in the cache_2 chunk looks the same as they only look at the code texts, but not the contents of R objects.\nTherefore, R would call up the saved results instead of rerunning the R codes, which is not what you want.\nYou can use the dependson option to make R recognize any changes in cached R objects\n\n\n\n\n\nDirection\n\n\nAdd dependson: cache_1 to the cache_2 chunk as an option and knit again."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto-introduction.html#directory",
    "href": "lectures/Chapter-2-Quarto/02-Quarto-introduction.html#directory",
    "title": "02-Using Quarto to Create Documents",
    "section": "Directory",
    "text": "Directory\n\nReading FilesWhat to do?\n\n\nSuppose you are interested in reading a dataset file like this:\n\nread.csv(\"corn_price.csv\")\n\n\n\n\n\nImportant\n\n\nBy default, R looks for corn_price.csv in the same folder in which the qmd file is located.\n\n\n\n\n\nIn my case, the sample_qmd.qmd is located in  /Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Chapter-2-Quarto .\nThis means that RStudio tries to find  /Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Chapter-2-Quarto/corn_price.csv.\nIf the file is not in the directory, RStudio won’t be able to find the file to import and returns an error. Clearly, all the subsequent actions dependent on the dataset will not run.\n\n\n\nTo avoid errors in reading files, there are three options:\n\nOption 1 (recommended for a beginner)\nPut all the datasets you intend to use in the same directory in which your qmd file is located.\n\nOption 2\nIf the file is not in the directory, supply the full path to the file like this\n\nread.csv(\"~/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Chapter-2-Quarto/corn_price.csv\")\n\n\nOption 3\nTell R to look for a specific directory for datasets by setting a working directory using opts_knit$set(root.dir = directory) at the beginning by adding the code like below in your qmd file after the YAML header:\n```{r}\nknir::opts_knit$set(root.dir = \"~/Dropbox/TeachingUNL/Data-Science-with-R/Chapter-2-Quarto\")\n```"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto-introduction.html#output-types",
    "href": "lectures/Chapter-2-Quarto/02-Quarto-introduction.html#output-types",
    "title": "02-Using Quarto to Create Documents",
    "section": "Output types",
    "text": "Output types\n\nVarious formatsHowNote\n\n\nYou can knit an qmd file to various formats using various engines (visit here to see all the document types).\n\n\n\n\nImportant\n\n\n\nIn this course, we only use the html option. Submit your assignment in html.\nhtml is void of the concept of page. Consequently, you do not have to worry about how you should organize texts, tables, and figures within a page (fixed amount of space).\n\n\n\n\n\n\nStep 1\nTo write to an output type you want, first add an appropriate options under the format option to the YAML header like below.\ntitle: \"Reporting using Quarto\"\nauthor: \"Taro Mieno\"\nformat:\n  html:\n    toc: true\n    toc-depth: 2\n    number-sections: true\n    number-depth: 2\n  docx: default \n  typst:  \n    papersize: a5\n    margin:\n      x: 1cm\n      y: 1cm\n    columns: 2\nHere,\n\nWORD (with word option) is generated with the default options.\nPDF (with typst option) is generated with the options specified below typst:.\n\n\n\n\n\nDirection\n\n\nAdd the docx option and typst options in the YAML above to your qmd file.\n\n\n\n\n\nStep 2\nYou should see a downward triangle right to the “Render” button. Pick one format to knit to a document of the format.\n\n\nYAML and chunk options available are different based on the output format and engine. Visit here to see the options specific to particular formats."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-Quarto-introduction.html#resources",
    "href": "lectures/Chapter-2-Quarto/02-Quarto-introduction.html#resources",
    "title": "02-Using Quarto to Create Documents",
    "section": "Resources",
    "text": "Resources\nThe best resource to learn Quarto is its official website:\n\nGeneral and specific (to document type) syntax\nYAML options specific to document type"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#section",
    "href": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#section",
    "title": "02-1 Using Quarto to Create Presentations",
    "section": "",
    "text": "Incremental listMultiple columns\n\n\n\nCodeOutput\n\n\n::: {.incremental}\n- collect data\n- run statistical analysis\n- report\n:::\n\n\n\n\ncollect data\nrun statistical analysis\nreport\n\n\n\n\n\n\n\n\n\nCodeOutput\n\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\nPlot 1\n\n```{r}\nggplot(data = mtcars) +\n  geom_point(aes(y = mpg,  x = cyl))\n```\n\n:::\n\n::: {.column width=\"60%\"}\n\nPlot 2\n\n```{r}\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg))\n```\n:::\n\n::::\n\n\n\n\nPlot 1\n\nggplot(data = mtcars) +\n  geom_point(aes(y = mpg,  x = cyl))\n\n\n\n\n\n\n\n\n\nPlot 2\n\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg))"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#useful-tools",
    "href": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#useful-tools",
    "title": "02-1 Using Quarto to Create Presentations",
    "section": "Useful Tools",
    "text": "Useful Tools\n\nIncremental listMultiple columnsScrollableSpeaker NoteLogoTabsets\n\n\n\nCodeOutput\n\n\n::: {.incremental}\n- collect data\n- run statistical analysis\n- report\n:::\n\n\n\n\ncollect data\nrun statistical analysis\nreport\n\n\n\n\n\n\n\n\n\nCodeOutput\n\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\nPlot 1\n\n```{r}\nggplot(data = mtcars) +\n  geom_point(aes(y = mpg,  x = cyl))\n```\n\n:::\n\n::: {.column width=\"60%\"}\n\nPlot 2\n\n```{r}\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg))\n```\n:::\n\n::::\n\n\n\n\nPlot 1\n\nggplot(data = mtcars) +\n  geom_point(aes(y = mpg,  x = cyl))\n\n\n\n\n\n\n\n\n\nPlot 2\n\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdd scrollable: true under revealjs: to make each of the slides scrollable when the contents are too big to present on a screen.\n\n---\nformat:\n  revealjs:\n    scrollable: true\n---\n\nscrollable: true is enabled in this presentation.\nyou\ncan\nsee\nthat\nright?\n\n\n\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n\n\n\n\n\n\n\n\n\nYou do not see me!\n\n\n\n\n\n:“Try”\n\n\nHitting the s key will generate a pop-up window with speaker view.\n\n\n\n\n\n\nYou can add a logo with the logo option under revealjs:.\n---\nformat:\n  revealjs:\n    logo: logo.png\n---\n\nThis presentation has the code below in the YAMl and you can see the logo at the bottom-right corner.\n---\nformat:\n  revealjs:\n    logo: nebraska-n.jpg\n---\n\n\nYou can create tabs using the following code:\n::: {.panel-tabset}\n\n### Tab A\n\nContent for `Tab A`\n\n### Tab B\n\nContent for `Tab B`\n\n:::"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#theme",
    "href": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#theme",
    "title": "02-1 Using Quarto to Create Presentations",
    "section": "Theme",
    "text": "Theme\n\nPre-made themesCustomized themes\n\n\nThere are many pre-made themes that you can apply to revealjs presentations. See the list here.\nYou can set a theme using the theme option in the YAML header like below:\n\nformat:\n  revealjs: \n    theme: dark\n\n\n\n\n\nDirection\n\n\nTry one of the themes listed and see how the theme of the presentation changes."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#figure",
    "href": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#figure",
    "title": "02-1 Using Quarto to Create Presentations",
    "section": "Figure",
    "text": "Figure\n\nHowExample 1Example 2Example 3To be exact\n\n\nYou can use\n\nout-width: option to control the size of a figure.\nfig-align: option to control the alignment of a figure.\n\nSee here for all the options available.\n\n\n\nCodeOutput\n\n\n```{r}\n#| out-width: 100%\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n```\n\n\n\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCodeOutput\n\n\n```{r}\n#| out-width: 80%\n#| fig-align: center\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n```\n\n\n\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCodeOutput\n\n\n```{r}\n#| out-width: 50%\n#| fig-align: right\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n```\n\n\n\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHowCodeOutput\n\n\nTo set the figure size exactly you can specify all of the four options:\n\nfig-width\nfig-height\nout-width\nout-height\n\n\n\n\nNote\n\n\n\nBy default fig- options take numeric numbers and the unit is inch.\nFor out- options you need to add in after a numeric number to make them consistent with the fig- options.\n\n\n\n\n\n\n```{r}\n#| fig-width: 10\n#| fig-height: 3\n#| out-width: 10in\n#| out-height: 3in\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n```\n\n\n\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg))"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#resources",
    "href": "lectures/Chapter-2-Quarto/02-1-Quarto-revealjs.html#resources",
    "title": "02-1 Using Quarto to Create Presentations",
    "section": "Resources",
    "text": "Resources\n\nThe best resources is the official documentation of how to use Quarto with revealjs found here.\nThere are more you can do with revealjs, which can be found here (I did not find them necessary)."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-0-Github-sublime-merge.html#github",
    "href": "lectures/Chapter-2-Quarto/02-0-Github-sublime-merge.html#github",
    "title": "02-0: Clone Github Repositories",
    "section": "Github",
    "text": "Github\n\nGithub is an online service to store primarily computer programs (small datasets are okay to share).\nGithub repository is like a folder on your computer (but it is online)\n\npublic: anybody can access it\nprivate: only the owner can access it (you cannot even see it on Github)\n\nThere are numerous public repositories that serve as excellent examples to learn coding\nYou can clone (just another way of saying copy) any public Github repositories to your local computer\n\n\n\n\n\nObjective\n\n\nLearn how to clone Github repositories."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-0-Github-sublime-merge.html#sublime-merge",
    "href": "lectures/Chapter-2-Quarto/02-0-Github-sublime-merge.html#sublime-merge",
    "title": "02-0: Clone Github Repositories",
    "section": "Sublime Merge",
    "text": "Sublime Merge\n\nIn cloning Github repositories, we will use Sublime Merge.\nSublime Merge is certainly not the only option. But, I found it very easy and light-weight to use especially for just cloning Github repositories.\n\n\n\n\n\nInstall Sublime Merge\n\n\nClick here and install it."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-0-Github-sublime-merge.html#clone-a-repository-to-your-computer",
    "href": "lectures/Chapter-2-Quarto/02-0-Github-sublime-merge.html#clone-a-repository-to-your-computer",
    "title": "02-0: Clone Github Repositories",
    "section": "Clone a repository to your computer",
    "text": "Clone a repository to your computer\n\nCopy the url of the repositoryClone the repositoryDo it yourself\n\n\n\nVisit the Github repository you want to clone (copy)\nClick on the Code button\nclick on the a button with two sheets of papers, which will copy the url of the repository\n\n\n\n\n\nStep 1Step 2\n\n\nGo to Sublime Merge and follow file -&gt; Clone Repository\n\n\n\nYou should now see something like below.\n\n\nNote that the source url you copied is already printed on the Source URL box (if not, just paste the url yourself).\nOn Repository Name, the name of the repository for which you copied the url is printed automatically. If you would like a different name, type the name you want.\nOn Destination Path, click on the gray box with ... to select the folder on your machine in which the repository is going to be cloned.\nFinally, hit the Clone button\n\n\n\n\n\n\n\n\nLet’s clone a repository that has a template for creating reaveljs presentation slides using Quarto.\nWe will actually use this template later, so do not delete it after you clone it.\nThe repository is found here"
  },
  {
    "objectID": "templates/sample_qmd_revealjs.html#slide-title",
    "href": "templates/sample_qmd_revealjs.html#slide-title",
    "title": "Sample Quarto Presentation with Revealjs",
    "section": "Slide title",
    "text": "Slide title\n\nggplot(data = mtcars) +\n  geom_point(aes(y = mpg, x = cyl))"
  },
  {
    "objectID": "templates/sample_qmd_revealjs.html#slide-title-1",
    "href": "templates/sample_qmd_revealjs.html#slide-title-1",
    "title": "Sample Quarto Presentation with Revealjs",
    "section": "Slide title",
    "text": "Slide title\nTabsets:\n\nTab 1Tab 2Tab 3"
  },
  {
    "objectID": "templates/sample_qmd_revealjs.html#one-more-slide-title",
    "href": "templates/sample_qmd_revealjs.html#one-more-slide-title",
    "title": "Sample Quarto Presentation with Revealjs",
    "section": "One more slide title",
    "text": "One more slide title\nNested Tabsets:\n\nTab 1Tab 2Tab 3\n\n\n\nTab 1Tab 2Tab 3Tab 4"
  },
  {
    "objectID": "templates/sample_qmd_revealjs.html#slide-with-tabsets",
    "href": "templates/sample_qmd_revealjs.html#slide-with-tabsets",
    "title": "Sample Quarto Presentation with Revealjs",
    "section": "Slide with tabsets",
    "text": "Slide with tabsets\n\nTab 1Tab 2Tab 3"
  },
  {
    "objectID": "templates/sample_qmd_revealjs.html#slide-with-nested-tabsets",
    "href": "templates/sample_qmd_revealjs.html#slide-with-nested-tabsets",
    "title": "Sample Quarto Presentation with Revealjs",
    "section": "Slide with nested tabsets",
    "text": "Slide with nested tabsets\n\nTab 1Tab 2Tab 3\n\n\n\nTab 1Tab 2Tab 3Tab 4"
  },
  {
    "objectID": "templates/sample_qmd_revealjs.html#slide-with-a-figure",
    "href": "templates/sample_qmd_revealjs.html#slide-with-a-figure",
    "title": "Sample Quarto Presentation with Revealjs",
    "section": "Slide with a figure",
    "text": "Slide with a figure"
  },
  {
    "objectID": "templates/sample_qmd_revealjs.html#slide-with-an-incremental-list",
    "href": "templates/sample_qmd_revealjs.html#slide-with-an-incremental-list",
    "title": "Sample Quarto Presentation with Revealjs",
    "section": "Slide with an incremental list",
    "text": "Slide with an incremental list\n\n\ncollect data\nrun statistical analysis\nreport"
  },
  {
    "objectID": "templates/sample_qmd_revealjs.html#slide-with-columns",
    "href": "templates/sample_qmd_revealjs.html#slide-with-columns",
    "title": "Sample Quarto Presentation with Revealjs",
    "section": "Slide with columns",
    "text": "Slide with columns\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNice plot title"
  },
  {
    "objectID": "templates/sample_qmd_revealjs.html#slide-with-a-talbe",
    "href": "templates/sample_qmd_revealjs.html#slide-with-a-talbe",
    "title": "Sample Quarto Presentation with Revealjs",
    "section": "Slide with a talbe",
    "text": "Slide with a talbe\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2"
  },
  {
    "objectID": "templates/sample_qmd_revealjs.html#slide-with-a-table",
    "href": "templates/sample_qmd_revealjs.html#slide-with-a-table",
    "title": "Sample Quarto Presentation with Revealjs",
    "section": "Slide with a table",
    "text": "Slide with a table\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2"
  },
  {
    "objectID": "templates/sample_qmd_revealjs.html#slide-with-regression-results",
    "href": "templates/sample_qmd_revealjs.html#slide-with-regression-results",
    "title": "Sample Quarto Presentation with Revealjs",
    "section": "Slide with regression results",
    "text": "Slide with regression results\n\nreg &lt;- lm(mpg ~ cyl + disp, data = mtcars) \n\nmodelsummary::modelsummary(reg)\n\n \n\n  \n    \n    \n    tinytable_dxt5mck7oj7yrjoiauyp\n    \n    \n    \n    \n  \n\n  \n    \n      \n        \n        \n              \n                 \n                (1)\n              \n        \n        \n        \n                \n                  (Intercept)\n                  34.661 \n                \n                \n                             \n                  (2.547)\n                \n                \n                  cyl        \n                  -1.587 \n                \n                \n                             \n                  (0.712)\n                \n                \n                  disp       \n                  -0.021 \n                \n                \n                             \n                  (0.010)\n                \n                \n                  Num.Obs.   \n                  32     \n                \n                \n                  R2         \n                  0.760  \n                \n                \n                  R2 Adj.    \n                  0.743  \n                \n                \n                  AIC        \n                  167.1  \n                \n                \n                  BIC        \n                  173.0  \n                \n                \n                  Log.Lik.   \n                  -79.573\n                \n                \n                  F          \n                  45.808 \n                \n                \n                  RMSE       \n                  2.91"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-2-Quarto-revealjs.html#get-started",
    "href": "lectures/Chapter-2-Quarto/02-2-Quarto-revealjs.html#get-started",
    "title": "02-2: Using Quarto to Create Presentations",
    "section": "Get Started",
    "text": "Get Started\n\nYAMLCreating a new slideInclude R codes and results\n\n\nThe first thing you need to do to create a presentation using Quarto via revealjs is to add appropriate format information in the YAML header of the qmd file like below:\n\n---\ntitle: \"02-1 Using Quarto to Create Presentations\"\nformat:\n  revealjs: \n    theme: [default, ../custom.scss]\n    fontsize: 1.6em\n    callout-icon: false\n    scrollable: true\n    echo: true\n    fig-dpi: 400\n---\n\n\n\n\nNote\n\n\n\nformat needs to be specified as revealjs\nYou can add revealjs-specific options below revealjs: (We will look at various options later).\n\n\n\n\n\n\nYou can start a new slide using either # or ##.\n\nUse # (level 1 header)\n# new section title\n\nBy default, this creates a new slide with new section title printed left-aligned at the middle of the slide.\n\nUse ## (level 2 header)\n## new slide title\n\nBy default, this creates a new slide with new slide title printed at the top left corner of the slide.\n\n\n\n\nDirection\n\n\nLook at the sample_qmd_revealjs.qmd\n\n\n\n\n\n\nWe have already learned how to do this. The way we include R codes are consistent across different output formats (including presentation with revealjs)!!\n```{r}\nR codes \n```\n\n\n\n\nRecommended global settings for research presentations\n\n\nPlace the options below in the YAML header, which hides all the codes, messages, and warnings that the audience does not have to see.\nexecute:\n  echo: false\n  message: false\n  warning: false"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-2-Quarto-revealjs.html#useful-tools",
    "href": "lectures/Chapter-2-Quarto/02-2-Quarto-revealjs.html#useful-tools",
    "title": "02-2: Using Quarto to Create Presentations",
    "section": "Useful Tools",
    "text": "Useful Tools\n\nIncremental listMultiple columnsScrollableSpeaker NoteLogoTabsets\n\n\n\nCodeOutput\n\n\n::: {.incremental}\n- collect data\n- run statistical analysis\n- report\n:::\n\n\n\n\ncollect data\nrun statistical analysis\nreport\n\n\n\n\n\n\n\n\n\nCodeOutput\n\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\nPlot 1\n\n```{r}\nggplot(data = mtcars) +\n  geom_point(aes(y = mpg,  x = cyl))\n```\n\n:::\n\n::: {.column width=\"60%\"}\n\nPlot 2\n\n```{r}\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg))\n```\n:::\n\n::::\n\n\n\n\nPlot 1\n\nggplot(data = mtcars) +\n  geom_point(aes(y = mpg,  x = cyl))\n\n\n\n\n\n\n\n\n\nPlot 2\n\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdd scrollable: true under revealjs: to make each of the slides scrollable when the contents are too big to present on a screen.\n\n---\nformat:\n  revealjs:\n    scrollable: true\n---\n\nscrollable: true is enabled in this presentation.\nyou\ncan\nsee\nthat\nright?\n\n\n\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n\n\n\n\n\n\n\n\n\nYou do not see me!\n\n\n\n\n\nTry\n\n\nHitting the “s” key will generate a pop-up window with speaker view.\n\n\n\n\n\n\nYou can add a logo with the logo option under revealjs:.\n---\nformat:\n  revealjs:\n    logo: logo.png\n---\n\nThis presentation has the code below in the YAMl and you can see the logo at the bottom-right corner.\n---\nformat:\n  revealjs:\n    logo: nebraska-n.jpg\n---\n\n\nYou can create tabs using the following code:\n\n::: {.panel-tabset}\n\n### Tab A\n\nContent for `Tab A`\n\n### Tab B\n\nContent for `Tab B`\n\n:::"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-2-Quarto-revealjs.html#figure",
    "href": "lectures/Chapter-2-Quarto/02-2-Quarto-revealjs.html#figure",
    "title": "02-2: Using Quarto to Create Presentations",
    "section": "Figure",
    "text": "Figure\n\nHowExample 1Example 2Example 3To be exact\n\n\nYou can use\n\nout-width: option to control the size of a figure.\nfig-align: option to control the alignment of a figure.\n\nSee here for all the options available.\n\n\n\nCodeOutput\n\n\n```{r}\n#| out-width: 100%\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n```\n\n\n\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCodeOutput\n\n\n```{r}\n#| out-width: 80%\n#| fig-align: center\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n```\n\n\n\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCodeOutput\n\n\n```{r}\n#| out-width: 50%\n#| fig-align: right\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n```\n\n\n\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHowCodeOutput\n\n\nTo set the figure size exactly you can specify all of the four options:\n\nfig-width\nfig-height\nout-width\nout-height\n\n\n\n\nNote\n\n\n\nBy default fig- options take numeric numbers and the unit is inch.\nFor out- options you need to add in after a numeric number to make them consistent with the fig- options.\n\n\n\n\n\n\n```{r}\n#| fig-width: 10\n#| fig-height: 3\n#| out-width: 10in\n#| out-height: 3in\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg)) \n```\n\n\n\nggplot(data = mtcars) +\n  geom_histogram(aes(x = mpg))"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-2-Quarto-revealjs.html#theme",
    "href": "lectures/Chapter-2-Quarto/02-2-Quarto-revealjs.html#theme",
    "title": "02-2: Using Quarto to Create Presentations",
    "section": "Theme",
    "text": "Theme\n\nPre-made themesCustomized themes\n\n\nThere are many pre-made themes that you can apply to revealjs presentations. See the list here.\nYou can set a theme using the theme option in the YAML header like below:\n\nformat:\n  revealjs: \n    theme: dark\n\n\n\n\n\nDirection\n\n\nTry one of the themes listed and see how the theme of the presentation changes."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-2-Quarto-revealjs.html#resources",
    "href": "lectures/Chapter-2-Quarto/02-2-Quarto-revealjs.html#resources",
    "title": "02-2: Using Quarto to Create Presentations",
    "section": "Resources",
    "text": "Resources\n\nThe best resources is the official documentation of how to use Quarto with revealjs found here.\nThere are more you can do with revealjs, which can be found here (I have not found them necessary)."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#data.frame-and-tibble-1",
    "href": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#data.frame-and-tibble-1",
    "title": "03-1: Importing Files and Exporting to Files",
    "section": "data.frame and tibble",
    "text": "data.frame and tibble\n\nWhat are they?ObjectivesPreparation 1Preparation 2\n\n\ndata.frame\nThe traditional (most common) class of two-dimensional data (rows and columns) supported by R.\n\ntibble\nA relatively newer class of two-dimensional data that brings minor enhancements over data.frame.\ntibble is defined by the tibble package, which is part of the tidyverse package.\n\n\n\nLearn basic operations on data.frame and tibble\nHighlight some differences between the two (They are almost interchangeable, and you do no need to pay much attention to which class of data you are dealing with)\n\n\n\nWe use HousePrices dataset from the AER package.\n\n#--- load the AER package ---#\nlibrary(AER)\n\n#--- load the HousePrices data ---#\ndata(HousePrices)\n\n\nHousePrices is a data.frame.\n\nclass(HousePrices)\n\n[1] \"data.frame\"\n\n\n\n\nYou can convert a data.frame into a tibble using as_tibble():\n\nHousePrices_tbl &lt;- as_tibble(HousePrices)\n\nHousePrices is a tibble (and also a data.frame).\n\nclass(HousePrices_tbl)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\""
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#display-method",
    "href": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#display-method",
    "title": "03-1: Importing Files and Exporting to Files",
    "section": "display method",
    "text": "display method\n\ndata.frametibble\n\n\n\nHousePrices\n\n     price lotsize bedrooms bathrooms stories driveway recreation fullbase\n1    42000    5850        3         1       2      yes         no      yes\n2    38500    4000        2         1       1      yes         no       no\n3    49500    3060        3         1       1      yes         no       no\n4    60500    6650        3         1       2      yes        yes       no\n5    61000    6360        2         1       1      yes         no       no\n6    66000    4160        3         1       1      yes        yes      yes\n7    66000    3880        3         2       2      yes         no      yes\n8    69000    4160        3         1       3      yes         no       no\n9    83800    4800        3         1       1      yes        yes      yes\n10   88500    5500        3         2       4      yes        yes       no\n11   90000    7200        3         2       1      yes         no      yes\n12   30500    3000        2         1       1       no         no       no\n13   27000    1700        3         1       2      yes         no       no\n14   36000    2880        3         1       1       no         no       no\n15   37000    3600        2         1       1      yes         no       no\n16   37900    3185        2         1       1      yes         no       no\n17   40500    3300        3         1       2       no         no       no\n18   40750    5200        4         1       3      yes         no       no\n19   45000    3450        1         1       1      yes         no       no\n20   45000    3986        2         2       1       no        yes      yes\n21   48500    4785        3         1       2      yes        yes      yes\n22   65900    4510        4         2       2      yes         no      yes\n23   37900    4000        3         1       2      yes         no       no\n24   38000    3934        2         1       1      yes         no       no\n25   42000    4960        2         1       1      yes         no       no\n26   42300    3000        2         1       2      yes         no       no\n27   43500    3800        2         1       1      yes         no       no\n28   44000    4960        2         1       1      yes         no      yes\n29   44500    3000        3         1       1       no         no       no\n30   44900    4500        3         1       2      yes         no       no\n31   45000    3500        2         1       1       no         no      yes\n32   48000    3500        4         1       2      yes         no       no\n33   49000    4000        2         1       1      yes         no       no\n34   51500    4500        2         1       1      yes         no       no\n35   61000    6360        2         1       2      yes         no       no\n36   61000    4500        2         1       1      yes         no       no\n37   61700    4032        2         1       1      yes         no      yes\n38   67000    5170        3         1       4      yes         no       no\n39   82000    5400        4         2       2      yes         no       no\n40   54500    3150        2         2       1       no         no      yes\n41   66500    3745        3         1       2      yes         no      yes\n42   70000    4520        3         1       2      yes         no      yes\n43   82000    4640        4         1       2      yes         no       no\n44   92000    8580        5         3       2      yes         no       no\n45   38000    2000        2         1       2      yes         no       no\n46   44000    2160        3         1       2       no         no      yes\n47   41000    3040        2         1       1       no         no       no\n48   43000    3090        3         1       2       no         no       no\n49   48000    4960        4         1       3       no         no       no\n50   54800    3350        3         1       2      yes         no       no\n51   55000    5300        5         2       2      yes         no       no\n52   57000    4100        4         1       1       no         no      yes\n53   68000    9166        2         1       1      yes         no      yes\n54   95000    4040        3         1       2      yes         no      yes\n55   38000    3630        3         3       2       no        yes       no\n56   25000    3620        2         1       1      yes         no       no\n57   25245    2400        3         1       1       no         no       no\n58   56000    7260        3         2       1      yes        yes      yes\n59   35500    4400        3         1       2      yes         no       no\n60   30000    2400        3         1       2      yes         no       no\n61   48000    4120        2         1       2      yes         no       no\n62   48000    4750        2         1       1      yes         no       no\n63   52000    4280        2         1       1      yes         no       no\n64   54000    4820        3         1       2      yes         no       no\n65   56000    5500        4         1       2      yes        yes      yes\n66   60000    5500        3         1       2      yes         no       no\n67   60000    5040        3         1       2      yes         no      yes\n68   67000    6000        2         1       1      yes         no      yes\n69   47000    2500        2         1       1       no         no       no\n70   70000    4095        3         1       2       no        yes      yes\n71   45000    4095        2         1       1      yes         no       no\n72   51000    3150        3         1       2      yes         no      yes\n73   32500    1836        2         1       1       no         no      yes\n74   34000    2475        3         1       2      yes         no       no\n75   35000    3210        3         1       2      yes         no      yes\n76   36000    3180        3         1       1       no         no       no\n77   45000    1650        3         1       2       no         no      yes\n78   47000    3180        4         1       2      yes         no      yes\n79   55000    3180        2         2       1      yes         no      yes\n80   63900    6360        2         1       1      yes         no      yes\n81   50000    4240        3         1       2      yes         no       no\n82   35000    3240        2         1       1       no        yes       no\n83   50000    3650        3         1       2      yes         no       no\n84   43000    3240        3         1       2      yes         no       no\n85   55500    3780        2         1       2      yes        yes      yes\n86   57000    6480        3         1       2       no         no       no\n87   60000    5850        2         1       1      yes        yes      yes\n88   78000    3150        3         2       1      yes        yes      yes\n89   35000    3000        2         1       1      yes         no       no\n90   44000    3090        2         1       1      yes        yes      yes\n91   47000    6060        3         1       1      yes        yes      yes\n92   58000    5900        4         2       2       no         no      yes\n93  163000    7420        4         1       2      yes        yes      yes\n94  128000    8500        3         2       4      yes         no       no\n95  123500    8050        3         1       1      yes        yes      yes\n96   39000    6800        2         1       1      yes         no       no\n97   53900    8250        3         1       1      yes         no       no\n98   59900    8250        3         1       1      yes         no      yes\n99   35000    3500        2         1       1      yes        yes       no\n100  43000    2835        2         1       1      yes         no       no\n101  57000    4500        3         2       2       no         no      yes\n102  79000    3300        3         3       2      yes         no      yes\n103 125000    4320        3         1       2      yes         no      yes\n104 132000    3500        4         2       2      yes         no       no\n105  58000    4992        3         2       2      yes         no       no\n106  43000    4600        2         1       1      yes         no       no\n107  48000    3720        2         1       1       no         no       no\n108  58500    3680        3         2       2      yes         no       no\n109  73000    3000        3         2       2      yes        yes      yes\n110  63500    3750        2         1       1      yes        yes      yes\n111  43000    5076        3         1       1       no         no       no\n112  46500    4500        2         1       1       no         no       no\n113  92000    5000        3         1       2      yes         no       no\n114  75000    4260        4         1       2      yes         no      yes\n115  75000    6540        4         2       2       no         no       no\n116  85000    3700        4         1       2      yes        yes       no\n117  93000    3760        3         1       2      yes         no       no\n118  94500    4000        3         2       2      yes         no      yes\n119 106500    4300        3         2       2      yes         no      yes\n120 116000    6840        5         1       2      yes        yes      yes\n121  61500    4400        2         1       1      yes         no       no\n122  80000   10500        4         2       2      yes         no       no\n123  37000    4400        2         1       1      yes         no       no\n124  59500    4840        3         1       2      yes         no       no\n125  70000    4120        2         1       1      yes         no      yes\n126  95000    4260        4         2       2      yes         no       no\n127 117000    5960        3         3       2      yes        yes      yes\n128 122500    8800        3         2       2      yes         no       no\n129 123500    4560        3         2       2      yes        yes      yes\n130 127000    4600        3         2       2      yes        yes       no\n131  35000    4840        2         1       2      yes         no       no\n132  44500    3850        3         1       2      yes         no       no\n133  49900    4900        3         1       2       no         no       no\n134  50500    3850        3         1       1      yes         no       no\n135  65000    3760        3         1       1      yes         no       no\n136  90000    6000        4         2       4      yes         no       no\n137  46000    4370        3         1       2      yes         no       no\n138  35000    7700        2         1       1      yes         no       no\n139  26500    2990        2         1       1       no         no       no\n140  43000    3750        3         1       2      yes         no       no\n141  56000    3000        3         1       2      yes         no       no\n142  40000    2650        3         1       2      yes         no      yes\n143  51000    4500        4         2       2      yes         no      yes\n144  51000    4500        2         1       1       no         no       no\n145  57250    4500        3         1       2       no         no      yes\n146  44000    4500        2         1       2      yes         no       no\n147  61000    2175        3         1       2       no        yes      yes\n148  62000    4500        3         2       3      yes         no       no\n149  80000    4800        5         2       3       no         no      yes\n150  50000    4600        4         1       2      yes         no       no\n151  59900    3450        3         1       2      yes         no       no\n152  35500    3000        3         1       2       no         no       no\n153  37000    3600        2         2       2      yes         no      yes\n154  42000    3600        3         1       2       no         no       no\n155  48000    3750        3         1       1      yes         no       no\n156  60000    2610        4         3       2       no         no       no\n157  60000    2953        3         1       2      yes         no      yes\n158  60000    2747        4         2       2       no         no       no\n159  62000    1905        5         1       2       no         no      yes\n160  63000    3968        3         1       2       no         no       no\n161  63900    3162        3         1       2      yes         no       no\n162 130000    6000        4         1       2      yes         no      yes\n163  25000    2910        3         1       1       no         no       no\n164  50000    2135        3         2       2       no         no       no\n165  52900    3120        3         1       2       no         no      yes\n166  62000    4075        3         1       1      yes        yes      yes\n167  73500    3410        3         1       2       no         no       no\n168  38000    2800        3         1       1      yes         no       no\n169  46000    2684        2         1       1      yes         no       no\n170  48000    3100        3         1       2       no         no      yes\n171  52500    3630        2         1       1      yes         no      yes\n172  32000    1950        3         1       1       no         no       no\n173  38000    2430        3         1       1       no         no       no\n174  46000    4320        3         1       1       no         no       no\n175  50000    3036        3         1       2      yes         no      yes\n176  57500    3630        3         2       2      yes         no       no\n177  70000    5400        4         1       2      yes         no       no\n178  69900    3420        4         2       2      yes         no      yes\n179  74500    3180        3         2       2      yes         no       no\n180  42000    3660        4         1       2       no         no       no\n181  60000    4410        2         1       1       no         no       no\n182  50000    3990        3         1       2      yes         no       no\n183  58000    4340        3         1       1      yes         no       no\n184  63900    3510        3         1       2      yes         no       no\n185  28000    3420        5         1       2       no         no       no\n186  54000    3420        2         1       2      yes         no       no\n187  44700    5495        3         1       1      yes         no      yes\n188  47000    3480        4         1       2       no         no       no\n189  50000    7424        3         1       1       no         no       no\n190  57250    3460        4         1       2      yes         no       no\n191  67000    3630        3         1       2      yes         no       no\n192  52500    3630        2         1       1      yes         no       no\n193  42000    3480        3         1       2       no         no       no\n194  57500    3460        3         2       1      yes         no      yes\n195  33000    3180        2         1       1      yes         no       no\n196  34400    3635        2         1       1       no         no       no\n197  40000    3960        3         1       1      yes         no       no\n198  40500    4350        3         1       2       no         no       no\n199  46500    3930        2         1       1       no         no       no\n200  52000    3570        3         1       2      yes         no      yes\n201  53000    3600        3         1       1      yes         no       no\n202  53900    2520        5         2       1       no         no      yes\n203  50000    3480        3         1       1       no         no       no\n204  55500    3180        4         2       2      yes         no       no\n205  56000    3290        2         1       1      yes         no       no\n206  60000    4000        4         2       2       no         no       no\n207  60000    2325        3         1       2       no         no       no\n208  69500    4350        2         1       1      yes         no      yes\n209  72000    3540        2         1       1       no        yes      yes\n210  92500    3960        3         1       1      yes         no      yes\n211  40500    2640        2         1       1       no         no       no\n212  42000    2700        2         1       1       no         no       no\n213  47900    2700        3         1       1       no         no       no\n214  52000    3180        3         1       2       no         no      yes\n215  62000    3500        4         1       2      yes         no       no\n216  41000    3630        2         1       1      yes         no       no\n217 138300    6000        4         3       2      yes        yes      yes\n218  42000    3150        3         1       2       no         no       no\n219  47000    3792        4         1       2      yes         no       no\n220  64500    3510        3         1       3      yes         no       no\n221  46000    3120        3         1       2       no         no       no\n222  58000    3000        4         1       3      yes         no      yes\n223  70100    4200        3         1       2      yes         no       no\n224  78500    2817        4         2       2       no        yes      yes\n225  87250    3240        4         1       3      yes         no       no\n226  70800    2800        3         2       2       no         no      yes\n227  56000    3816        2         1       1      yes         no      yes\n228  48000    3185        2         1       1      yes         no      yes\n229  68000    6321        3         1       2      yes         no      yes\n230  79000    3650        3         2       2      yes         no       no\n231  80000    4700        4         1       2      yes        yes      yes\n232  87000    6615        4         2       2      yes        yes       no\n233  25000    3850        3         1       2      yes         no       no\n234  32500    3970        1         1       1       no         no       no\n235  36000    3000        2         1       2      yes         no       no\n236  42500    4352        4         1       2       no         no       no\n237  43000    3630        4         1       2      yes         no       no\n238  50000    3600        6         1       2      yes         no       no\n239  26000    3000        2         1       1      yes         no      yes\n240  30000    3000        4         1       2      yes         no       no\n241  34000    2787        4         2       2      yes         no       no\n242  52000    3000        2         1       2      yes         no       no\n243  70000    4770        3         1       1      yes        yes      yes\n244  27000    3649        2         1       1      yes         no       no\n245  32500    3970        3         1       2      yes         no      yes\n246  37200    2910        2         1       1       no         no       no\n247  38000    3480        2         1       1      yes         no       no\n248  42000    6615        3         1       2      yes         no       no\n249  44500    3500        2         1       1      yes         no       no\n250  45000    3450        3         1       2      yes         no      yes\n251  48500    3450        3         1       1      yes         no      yes\n252  52000    3520        2         2       1      yes         no      yes\n253  53900    6930        4         1       2       no         no       no\n254  60000    4600        3         2       2      yes         no       no\n255  61000    4360        4         1       2      yes         no       no\n256  64500    3450        3         1       2      yes         no      yes\n257  71000    4410        4         3       2      yes         no      yes\n258  75500    4600        2         2       1      yes         no       no\n259  33500    3640        2         1       1      yes         no       no\n260  41000    6000        2         1       1      yes         no       no\n261  41000    5400        4         1       2      yes         no       no\n262  46200    3640        4         1       2      yes         no      yes\n263  48500    3640        2         1       1      yes         no       no\n264  48900    4040        2         1       1      yes         no       no\n265  50000    3640        2         1       1      yes         no       no\n266  51000    3640        2         1       1      yes         no       no\n267  52500    5640        2         1       1       no         no       no\n268  52500    3600        2         1       1      yes         no       no\n269  54000    3600        2         1       1      yes         no       no\n270  59000    4632        4         1       2      yes         no       no\n271  60000    3640        3         2       2      yes         no      yes\n272  63000    4900        2         1       2      yes         no      yes\n273  64000    4510        4         1       2      yes         no       no\n274  64900    4100        2         2       1      yes        yes      yes\n275  65000    3640        3         1       2      yes         no       no\n276  66000    5680        3         1       2      yes        yes       no\n277  70000    6300        3         1       1      yes         no       no\n278  65500    4000        3         1       2      yes         no       no\n279  57000    3960        3         1       2      yes         no       no\n280  52000    5960        3         1       2      yes        yes      yes\n281  54000    5830        2         1       1      yes         no       no\n282  74500    4500        4         2       1       no         no      yes\n283  90000    4100        3         2       3      yes         no       no\n284  45000    6750        2         1       1      yes         no       no\n285  45000    9000        3         1       2      yes         no       no\n286  65000    2550        3         1       2      yes         no      yes\n287  55000    7152        3         1       2      yes         no       no\n288  62000    6450        4         1       2      yes         no       no\n289  30000    3360        2         1       1      yes         no       no\n290  34000    3264        2         1       1      yes         no       no\n291  38000    4000        3         1       1      yes         no       no\n292  39000    4000        3         1       2      yes         no       no\n293  45000    3069        2         1       1      yes         no       no\n294  47000    4040        2         1       1      yes         no       no\n295  47500    4040        2         1       1      yes         no       no\n296  49000    3185        2         1       1      yes         no       no\n297  50000    5900        2         1       1      yes         no       no\n298  50000    3120        3         1       2      yes         no       no\n299  52900    5450        2         1       1      yes         no       no\n300  53000    4040        2         1       1      yes         no       no\n301  55000    4080        2         1       1      yes         no       no\n302  56000    8080        3         1       1      yes         no       no\n303  58500    4040        2         1       2      yes         no       no\n304  59500    4080        3         1       2      yes         no       no\n305  60000    5800        3         1       1      yes         no       no\n306  64000    5885        2         1       1      yes         no       no\n307  67000    9667        4         2       2      yes        yes      yes\n308  68100    3420        4         2       2      yes         no       no\n309  70000    5800        2         1       1      yes        yes      yes\n310  72000    7600        4         1       2      yes         no       no\n311  57500    5400        3         1       1      yes         no       no\n312  69900    4995        4         2       1      yes         no      yes\n313  70000    3000        3         1       2      yes         no      yes\n314  75000    5500        3         2       1      yes         no      yes\n315  76900    6450        3         2       1      yes        yes      yes\n316  78000    6210        4         1       4      yes        yes       no\n317  80000    5000        3         1       4      yes         no       no\n318  82000    5000        3         1       3      yes         no       no\n319  83000    5828        4         1       4      yes        yes       no\n320  83000    5200        3         1       3      yes         no       no\n321  83900    5500        3         1       3      yes        yes       no\n322  88500    6350        3         2       3      yes        yes       no\n323  93000    8250        3         2       3      yes         no       no\n324  98000    6000        3         1       1      yes         no       no\n325  98500    7700        3         2       1      yes         no       no\n326  99000    8880        3         2       2      yes         no      yes\n327 101000    8880        2         1       1      yes         no       no\n328 110000    6480        3         2       4      yes         no       no\n329 115442    7000        3         2       4      yes         no       no\n330 120000    8875        3         1       1      yes         no       no\n331 124000    7155        3         2       1      yes        yes      yes\n332 175000    8960        4         4       4      yes         no       no\n333  50000    7350        2         1       1      yes         no       no\n334  55000    3850        2         1       1      yes         no       no\n335  60000    7000        3         1       1      yes         no       no\n336  61000    7770        2         1       1      yes         no       no\n337 106000    7440        3         2       1      yes        yes      yes\n338 155000    7500        3         3       1      yes         no      yes\n339 141000    8100        4         1       2      yes        yes      yes\n340  62500    3900        3         1       2      yes         no       no\n341  70000    2970        3         1       3      yes         no       no\n342  73000    3000        3         1       2      yes         no      yes\n343  80000   10500        2         1       1      yes         no       no\n344  80000    5500        3         2       2      yes         no       no\n345  88000    4500        3         1       4      yes         no       no\n346  49000    3850        3         1       1      yes         no       no\n347  52000    4130        3         2       2      yes         no       no\n348  59500    4046        3         1       2      yes         no      yes\n349  60000    4079        3         1       3      yes         no       no\n350  64000    4000        3         1       2      yes         no       no\n351  64500    9860        3         1       1      yes         no       no\n352  68500    7000        3         1       2      yes         no      yes\n353  78500    7980        3         1       1      yes         no       no\n354  86000    6800        2         1       1      yes        yes      yes\n355  86900    4300        6         2       2      yes         no       no\n356  75000   10269        3         1       1      yes         no       no\n357  78000    6100        3         1       3      yes        yes       no\n358  95000    6420        3         2       3      yes         no       no\n359  97000   12090        4         2       2      yes         no       no\n360 107000    6600        3         1       4      yes         no       no\n361 130000    6600        4         2       2      yes        yes      yes\n362 145000    8580        4         3       4      yes         no       no\n363 175000    9960        3         2       2      yes         no      yes\n364  72000   10700        3         1       2      yes        yes      yes\n365  84900   15600        3         1       1      yes         no       no\n366  99000   13200        2         1       1      yes         no      yes\n367 114000    9000        4         2       4      yes         no       no\n368 120000    7950        5         2       2      yes         no      yes\n369 145000   16200        5         3       2      yes         no       no\n370  79000    6100        3         2       1      yes         no      yes\n371  82000    6360        3         1       1      yes        yes      yes\n372  85000    6420        3         1       1      yes         no      yes\n373 100500    6360        4         2       3      yes         no       no\n374 122000    6540        4         2       2      yes        yes      yes\n375 126500    6420        3         2       2      yes         no       no\n376 133000    6550        4         2       2      yes         no       no\n377 140000    5750        3         2       4      yes        yes       no\n378 190000    7420        4         2       3      yes         no       no\n379  84000    7160        3         1       1      yes         no      yes\n380  97000    4000        3         2       2      yes         no      yes\n381 103500    9000        4         2       4      yes        yes       no\n382 112500    6550        3         1       2      yes         no      yes\n383 140000   13200        3         1       2      yes         no      yes\n384  74700    7085        3         1       1      yes        yes      yes\n385  78000    6600        4         2       2      yes        yes      yes\n386  78900    6900        3         1       1      yes        yes      yes\n387  83900   11460        3         1       3      yes         no       no\n388  85000    7020        3         1       1      yes         no      yes\n389  85000    6540        3         1       1      yes        yes      yes\n390  86000    8000        3         1       1      yes        yes      yes\n391  86900    9620        3         1       1      yes         no      yes\n392  94500   10500        3         2       1      yes         no      yes\n393  96000    5020        3         1       4      yes         no       no\n394 106000    7440        3         2       4      yes         no       no\n395  72000    6600        3         1       1      yes        yes      yes\n396  74500    7200        3         1       2      yes        yes      yes\n397  77000    6710        3         2       2      yes        yes      yes\n398  80750    6660        4         2       2      yes        yes      yes\n399  82900    7000        3         1       1      yes         no      yes\n400  85000    7231        3         1       2      yes        yes      yes\n401  92500    7410        3         1       1      yes        yes      yes\n402  76000    7800        3         1       1      yes         no      yes\n403  77500    6825        3         1       1      yes        yes      yes\n404  80000    6360        3         1       3      yes         no       no\n405  80000    6600        4         2       1      yes         no      yes\n406  86000    6900        3         2       1      yes        yes      yes\n407  87000    6600        3         1       1      yes        yes      yes\n408  87500    6420        3         1       3      yes         no      yes\n409  89000    6600        3         2       1      yes         no      yes\n410  89900    6600        3         2       3      yes         no       no\n411  90000    9000        3         1       1      yes         no      yes\n412  95000    6500        3         2       3      yes         no       no\n413 112000    6360        3         2       4      yes         no       no\n414  31900    5300        3         1       1       no         no       no\n415  52000    2850        3         2       2       no         no      yes\n416  90000    6400        3         1       1      yes        yes      yes\n417 100000   11175        3         1       1      yes         no      yes\n418  91700    6750        2         1       1      yes        yes      yes\n419 174500    7500        4         2       2      yes         no      yes\n420  94700    6000        3         1       2      yes         no       no\n421  68000   10240        2         1       1      yes         no       no\n422  80000    5136        3         1       2      yes        yes      yes\n423  61100    3400        3         1       2      yes         no      yes\n424  62900    2880        3         1       2      yes         no       no\n425  65500    3840        3         1       2      yes         no       no\n426  66000    2870        2         1       2      yes        yes      yes\n427  49500    5320        2         1       1      yes         no       no\n428  50000    3512        2         1       1      yes         no       no\n429  53500    3480        2         1       1      yes         no       no\n430  58550    3600        3         1       1      yes         no      yes\n431  64500    3520        2         1       2      yes         no       no\n432  65000    5320        3         1       2      yes        yes      yes\n433  69000    6040        3         1       1      yes         no       no\n434  73000   11410        2         1       2      yes         no       no\n435  75000    8400        3         1       2      yes        yes      yes\n436  75000    5300        4         2       1      yes         no       no\n437 132000    7800        3         2       2      yes         no       no\n438  60000    3520        3         1       2      yes         no       no\n439  65000    5360        3         1       2      yes         no       no\n440  69000    6862        3         1       2      yes         no       no\n441  51900    3520        3         1       1      yes         no       no\n442  57000    4050        2         1       2      yes        yes      yes\n443  65000    3520        3         1       1      yes         no       no\n444  79500    4400        4         1       2      yes         no       no\n445  72500    5720        2         1       2      yes         no       no\n446 104900   11440        4         1       2      yes         no      yes\n447 114900    7482        3         2       3      yes         no       no\n448 120000    5500        4         2       2      yes         no      yes\n449  58000    4320        3         1       2      yes         no       no\n450  67000    5400        2         1       2      yes         no       no\n451  67000    4320        3         1       1      yes         no       no\n452  69000    4815        2         1       1      yes         no       no\n453  73000    6100        3         1       1      yes         no      yes\n454  73500    7980        3         1       1      yes         no       no\n455  74900    6050        3         1       1      yes         no      yes\n456  75000    3800        3         1       2      yes        yes      yes\n457  79500    5400        5         1       2      yes        yes      yes\n458 120900    6000        3         2       4      yes        yes      yes\n459  44555    2398        3         1       1      yes         no       no\n460  47000    2145        3         1       2      yes         no      yes\n461  47600    2145        3         1       2      yes         no      yes\n462  49000    2145        3         1       3      yes         no       no\n463  49000    2610        3         1       2      yes         no      yes\n464  49000    1950        3         2       2      yes         no      yes\n465  49500    2145        3         1       3      yes         no       no\n466  52000    2275        3         1       3      yes         no       no\n467  54000    2856        3         1       3      yes         no       no\n468  55000    2015        3         1       2      yes         no      yes\n469  55000    2176        2         1       2      yes        yes       no\n470  56000    2145        4         2       1      yes         no      yes\n471  60000    2145        3         1       3      yes         no       no\n472  60500    2787        3         1       1      yes         no      yes\n473  50000    9500        3         1       2      yes         no       no\n474  64900    4990        4         2       2      yes        yes      yes\n475  93000    6670        3         1       3      yes         no      yes\n476  85000    6254        4         2       1      yes         no      yes\n477  61500   10360        2         1       1      yes         no       no\n478  88500    5500        3         2       1      yes        yes      yes\n479  88000    5450        4         2       1      yes         no      yes\n480  89000    5500        3         1       3      yes         no       no\n481  89500    6000        4         1       3      yes        yes      yes\n482  95000    5700        3         1       1      yes        yes      yes\n483  95500    6600        2         2       4      yes         no      yes\n484  51500    4000        2         1       1      yes         no       no\n485  62900    4880        3         1       1      yes         no       no\n486 118500    4880        4         2       2      yes         no       no\n487  42900    8050        2         1       1      yes         no       no\n488  44100    8100        2         1       1      yes         no       no\n489  47000    5880        3         1       1      yes         no       no\n490  50000    5880        2         1       1      yes         no       no\n491  50000   12944        3         1       1      yes         no       no\n492  53000    6020        3         1       1      yes         no       no\n493  53000    4050        2         1       1      yes         no       no\n494  54000    8400        2         1       1      yes         no       no\n495  58500    5600        2         1       1      yes         no       no\n496  59000    5985        3         1       1      yes         no      yes\n497  60000    4500        3         1       1      yes         no      yes\n498  62900    4920        3         1       2      yes         no       no\n499  64000    8250        3         1       1      yes         no       no\n500  65000    8400        4         1       4      yes         no       no\n501  67900    6440        2         1       1      yes         no       no\n502  68500    8100        4         1       4      yes         no      yes\n503  70000    6720        3         1       1      yes         no       no\n504  70500    5948        3         1       2      yes         no       no\n505  71500    8150        3         2       1      yes        yes      yes\n506  71900    4800        2         1       1      yes        yes      yes\n507  75000    9800        4         2       2      yes        yes       no\n508  75000    8520        3         1       1      yes         no       no\n509  87000    8372        3         1       3      yes         no       no\n510  64000    4040        3         1       2      yes         no       no\n511  70000    4646        3         1       2      yes        yes      yes\n512  47500    4775        4         1       2      yes         no       no\n513  62600    4950        4         1       2      yes         no       no\n514  66000    5010        3         1       2      yes         no      yes\n515  58900    6060        2         1       1      yes         no      yes\n516  53000    3584        2         1       1      yes         no       no\n517  95000    6000        3         2       3      yes        yes       no\n518  96500    6000        4         2       4      yes         no       no\n519 101000    6240        4         2       2      yes         no       no\n520 102000    6000        3         2       2      yes        yes       no\n521 103000    7680        4         2       4      yes        yes       no\n522 105000    6000        4         2       4      yes        yes       no\n523 108000    6000        4         2       4      yes         no       no\n524 110000    6000        4         2       4      yes         no       no\n525 113000    6000        4         2       4      yes         no       no\n526 120000    7475        3         2       4      yes         no       no\n527 105000    5150        3         2       4      yes         no       no\n528 106000    6325        3         1       4      yes         no       no\n529 107500    6000        3         2       4      yes         no       no\n530 108000    6000        3         2       3      yes         no       no\n531 113750    6000        3         1       4      yes        yes       no\n532 120000    7000        3         1       4      yes         no       no\n533  70000   12900        3         1       1      yes         no       no\n534  71000    7686        3         1       1      yes        yes      yes\n535  82000    5000        3         1       3      yes         no       no\n536  82000    5800        3         2       4      yes         no       no\n537  82500    6000        3         2       4      yes         no       no\n538  83000    4800        3         1       3      yes         no       no\n539  84000    6500        3         2       3      yes         no       no\n540  85000    7320        4         2       2      yes         no       no\n541  85000    6525        3         2       4      yes         no       no\n542  91500    4800        3         2       4      yes        yes       no\n543  94000    6000        3         2       4      yes         no       no\n544 103000    6000        3         2       4      yes        yes       no\n545 105000    6000        3         2       2      yes        yes       no\n546 105000    6000        3         1       2      yes         no       no\n    gasheat aircon garage prefer\n1        no     no      1     no\n2        no     no      0     no\n3        no     no      0     no\n4        no     no      0     no\n5        no     no      0     no\n6        no    yes      0     no\n7        no     no      2     no\n8        no     no      0     no\n9        no     no      0     no\n10       no    yes      1     no\n11       no    yes      3     no\n12       no     no      0     no\n13       no     no      0     no\n14       no     no      0     no\n15       no     no      0     no\n16       no    yes      0     no\n17       no     no      1     no\n18       no     no      0     no\n19       no     no      0     no\n20       no     no      1     no\n21       no    yes      1     no\n22       no     no      0     no\n23       no    yes      0     no\n24       no     no      0     no\n25       no     no      0     no\n26       no     no      0     no\n27       no     no      0     no\n28       no    yes      0     no\n29       no    yes      0     no\n30       no    yes      0     no\n31       no     no      0     no\n32       no    yes      2     no\n33       no     no      0     no\n34       no     no      0     no\n35       no     no      0     no\n36       no    yes      2     no\n37       no     no      0     no\n38       no    yes      0     no\n39       no    yes      2     no\n40       no     no      0     no\n41       no     no      0     no\n42       no    yes      0     no\n43       no     no      1     no\n44       no     no      2     no\n45       no     no      0     no\n46       no     no      0     no\n47       no     no      0     no\n48       no     no      0     no\n49       no     no      0     no\n50       no     no      0     no\n51       no     no      0     no\n52       no     no      0     no\n53       no    yes      2     no\n54      yes     no      1     no\n55       no     no      0     no\n56       no     no      0     no\n57       no     no      0     no\n58       no     no      3     no\n59       no     no      0     no\n60       no     no      0     no\n61       no     no      0     no\n62       no     no      0     no\n63       no    yes      2     no\n64       no     no      0     no\n65       no     no      0     no\n66       no    yes      0     no\n67       no    yes      0     no\n68       no    yes      1     no\n69       no    yes      0     no\n70       no    yes      0     no\n71       no     no      2     no\n72       no     no      0     no\n73       no     no      0     no\n74       no     no      0     no\n75       no     no      0     no\n76       no     no      0     no\n77       no     no      0     no\n78       no    yes      0     no\n79       no     no      2     no\n80       no    yes      1     no\n81       no    yes      0     no\n82       no     no      1     no\n83       no     no      0     no\n84       no     no      2     no\n85       no     no      0     no\n86       no    yes      1     no\n87       no     no      2     no\n88       no    yes      0     no\n89       no     no      1     no\n90       no     no      0     no\n91       no     no      0     no\n92       no     no      1     no\n93       no    yes      2     no\n94       no    yes      2     no\n95       no    yes      1     no\n96       no     no      0     no\n97       no     no      2     no\n98       no     no      3     no\n99       no     no      0     no\n100      no     no      0     no\n101      no    yes      0     no\n102      no     no      0     no\n103     yes     no      2     no\n104     yes     no      2     no\n105      no     no      2     no\n106      no     no      0     no\n107      no    yes      0     no\n108      no     no      0     no\n109      no     no      0     no\n110      no     no      0     no\n111      no     no      0     no\n112      no     no      0     no\n113      no    yes      0     no\n114      no    yes      0     no\n115      no    yes      0     no\n116      no    yes      0     no\n117     yes     no      2     no\n118      no    yes      1     no\n119      no     no      1     no\n120      no    yes      1     no\n121      no     no      1     no\n122      no     no      1     no\n123      no     no      0     no\n124      no     no      1     no\n125      no     no      1     no\n126     yes     no      0     no\n127      no     no      1     no\n128      no    yes      2     no\n129      no    yes      1     no\n130      no    yes      2     no\n131      no     no      0     no\n132      no     no      0     no\n133      no     no      0     no\n134      no     no      2     no\n135      no     no      2     no\n136      no     no      1     no\n137      no     no      0     no\n138      no     no      0     no\n139      no     no      1     no\n140      no     no      0     no\n141      no     no      0     no\n142      no     no      1     no\n143      no     no      2     no\n144      no     no      0     no\n145      no    yes      0     no\n146     yes     no      1     no\n147      no    yes      0     no\n148     yes     no      1     no\n149     yes     no      0     no\n150      no     no      0     no\n151      no     no      1     no\n152      no     no      0     no\n153      no     no      1     no\n154      no     no      1     no\n155      no     no      0     no\n156      no     no      0     no\n157      no    yes      0     no\n158      no     no      0     no\n159      no     no      0     no\n160      no     no      0     no\n161      no    yes      1     no\n162      no     no      2     no\n163      no     no      0     no\n164      no     no      0     no\n165     yes     no      0     no\n166      no     no      2     no\n167      no    yes      0     no\n168      no     no      0     no\n169      no    yes      1     no\n170      no     no      0     no\n171      no     no      0     no\n172     yes     no      0     no\n173      no     no      0     no\n174      no     no      1     no\n175      no     no      0     no\n176     yes     no      2     no\n177      no     no      0     no\n178      no    yes      2     no\n179      no     no      2     no\n180      no     no      0     no\n181      no     no      1     no\n182      no     no      0     no\n183      no     no      0     no\n184      no     no      0     no\n185      no     no      0     no\n186     yes     no      1     no\n187      no     no      0     no\n188      no     no      1     no\n189      no     no      0     no\n190      no    yes      0     no\n191      no     no      2     no\n192      no    yes      0     no\n193      no     no      1     no\n194      no    yes      1     no\n195      no     no      0     no\n196      no     no      0     no\n197      no     no      0     no\n198     yes     no      1     no\n199      no     no      0     no\n200      no     no      0     no\n201      no     no      1     no\n202      no    yes      1     no\n203      no    yes      0     no\n204      no     no      0     no\n205     yes     no      1     no\n206      no     no      0     no\n207      no     no      0     no\n208      no     no      0     no\n209      no     no      0     no\n210      no     no      2     no\n211      no     no      1     no\n212      no     no      0     no\n213      no     no      0     no\n214      no     no      0     no\n215      no     no      2     no\n216      no     no      0     no\n217     yes     no      2     no\n218      no     no      0     no\n219      no     no      0     no\n220      no     no      0     no\n221      no     no      0     no\n222      no    yes      2     no\n223      no     no      1     no\n224      no     no      1     no\n225      no     no      1     no\n226      no    yes      1     no\n227      no    yes      2     no\n228      no     no      2     no\n229      no    yes      1     no\n230      no     no      2     no\n231      no    yes      1     no\n232     yes     no      1     no\n233      no     no      0     no\n234      no     no      0     no\n235      no     no      0     no\n236      no     no      1     no\n237      no     no      3     no\n238      no     no      1     no\n239      no     no      2     no\n240      no     no      0     no\n241      no     no      0     no\n242      no    yes      0     no\n243      no     no      0     no\n244      no     no      0     no\n245      no     no      0     no\n246      no     no      0     no\n247      no     no      1     no\n248      no     no      0     no\n249      no     no      0     no\n250      no     no      0     no\n251      no     no      2     no\n252      no     no      0     no\n253      no     no      1     no\n254      no    yes      1     no\n255      no     no      0     no\n256      no     no      1     no\n257      no     no      2     no\n258      no    yes      2     no\n259      no     no      0     no\n260      no     no      0     no\n261      no     no      0     no\n262      no     no      0     no\n263      no     no      0     no\n264      no     no      0     no\n265      no     no      1     no\n266      no     no      0     no\n267      no     no      0     no\n268      no     no      0     no\n269      no     no      0     no\n270      no    yes      0     no\n271      no     no      0     no\n272      no     no      0     no\n273      no    yes      2     no\n274      no     no      0     no\n275      no    yes      0     no\n276      no    yes      1     no\n277      no    yes      2     no\n278      no     no      1     no\n279      no     no      0     no\n280      no     no      0     no\n281      no     no      2     no\n282      no    yes      2     no\n283      no    yes      2     no\n284      no     no      0     no\n285      no     no      2     no\n286      no     no      0     no\n287      no    yes      0     no\n288      no     no      0     no\n289      no     no      1     no\n290      no     no      0     no\n291      no     no      0     no\n292      no     no      1     no\n293      no     no      1     no\n294      no     no      0     no\n295      no     no      1     no\n296      no     no      2     no\n297      no     no      1     no\n298      no     no      1     no\n299      no     no      0     no\n300      no     no      0     no\n301      no     no      0     no\n302      no    yes      2     no\n303      no     no      1     no\n304      no     no      2     no\n305     yes     no      2     no\n306      no    yes      1     no\n307      no     no      1     no\n308      no     no      0     no\n309      no    yes      0     no\n310      no    yes      2     no\n311      no     no      3     no\n312      no     no      0     no\n313      no    yes      0     no\n314      no     no      0     no\n315     yes     no      0     no\n316      no    yes      0     no\n317      no     no      0     no\n318      no    yes      0     no\n319      no     no      0     no\n320      no    yes      0     no\n321      no    yes      1     no\n322      no    yes      0     no\n323      no    yes      0     no\n324      no    yes      1     no\n325      no     no      2     no\n326      no    yes      1     no\n327      no    yes      1     no\n328      no    yes      2     no\n329      no    yes      2     no\n330      no     no      1     no\n331      no    yes      2     no\n332      no    yes      3     no\n333      no     no      1     no\n334      no     no      0     no\n335      no     no      3     no\n336      no     no      1     no\n337      no    yes      0    yes\n338      no    yes      2    yes\n339      no    yes      2    yes\n340      no     no      0     no\n341      no     no      0     no\n342      no     no      0     no\n343      no     no      1     no\n344      no     no      1     no\n345      no    yes      0     no\n346      no     no      0     no\n347      no     no      2     no\n348      no     no      1     no\n349      no     no      0     no\n350      no     no      2     no\n351      no     no      0     no\n352      no     no      0     no\n353      no     no      2     no\n354      no     no      2     no\n355      no     no      0     no\n356      no     no      1    yes\n357      no    yes      0    yes\n358      no    yes      0    yes\n359      no     no      2    yes\n360      no    yes      3    yes\n361      no    yes      1    yes\n362      no    yes      2    yes\n363      no     no      2    yes\n364      no     no      0     no\n365      no    yes      2     no\n366     yes     no      1     no\n367      no    yes      2     no\n368     yes     no      2     no\n369      no     no      0     no\n370      no     no      2    yes\n371      no    yes      2    yes\n372      no    yes      0    yes\n373      no    yes      2    yes\n374      no    yes      2    yes\n375      no    yes      1    yes\n376      no    yes      1    yes\n377      no    yes      1    yes\n378      no    yes      2    yes\n379      no     no      2    yes\n380      no    yes      0    yes\n381      no    yes      1    yes\n382      no    yes      0    yes\n383      no    yes      2    yes\n384      no     no      2    yes\n385      no     no      0    yes\n386      no     no      0    yes\n387      no     no      2    yes\n388      no    yes      2    yes\n389      no     no      2    yes\n390      no    yes      2    yes\n391      no     no      2    yes\n392      no    yes      1    yes\n393      no    yes      0    yes\n394      no     no      1    yes\n395      no     no      0    yes\n396      no     no      1    yes\n397      no     no      1    yes\n398      no     no      1    yes\n399      no     no      2    yes\n400      no    yes      0    yes\n401      no    yes      2    yes\n402      no    yes      2    yes\n403      no    yes      0    yes\n404      no     no      0    yes\n405      no     no      0    yes\n406      no     no      0    yes\n407      no     no      2    yes\n408      no     no      0    yes\n409      no    yes      0    yes\n410      no    yes      0    yes\n411      no     no      1    yes\n412      no    yes      0    yes\n413      no    yes      0    yes\n414      no    yes      0    yes\n415      no     no      0    yes\n416      no    yes      1    yes\n417      no    yes      1    yes\n418      no     no      2    yes\n419      no    yes      3    yes\n420     yes     no      1    yes\n421      no    yes      2    yes\n422      no    yes      0    yes\n423      no     no      2    yes\n424      no     no      0    yes\n425      no     no      1    yes\n426      no     no      0    yes\n427      no     no      1    yes\n428      no     no      1    yes\n429      no     no      0    yes\n430      no    yes      0    yes\n431      no     no      0    yes\n432      no     no      0    yes\n433      no     no      2    yes\n434      no     no      0    yes\n435      no    yes      2    yes\n436      no    yes      0    yes\n437      no     no      0    yes\n438      no     no      0    yes\n439      no     no      2    yes\n440      no    yes      2    yes\n441      no     no      2    yes\n442      no     no      0    yes\n443      no     no      0    yes\n444      no    yes      2    yes\n445      no    yes      0    yes\n446      no     no      1    yes\n447     yes     no      1    yes\n448      no    yes      1    yes\n449      no     no      2    yes\n450      no     no      0    yes\n451      no     no      0    yes\n452      no    yes      0    yes\n453      no    yes      0    yes\n454      no     no      1    yes\n455      no     no      0    yes\n456      no     no      1    yes\n457      no    yes      0    yes\n458      no    yes      0    yes\n459      no     no      0    yes\n460      no     no      0    yes\n461      no     no      0    yes\n462      no     no      0    yes\n463      no     no      0    yes\n464      no     no      0    yes\n465      no     no      0    yes\n466     yes    yes      0    yes\n467      no     no      0    yes\n468      no     no      0    yes\n469      no     no      0    yes\n470      no     no      0    yes\n471      no     no      1    yes\n472      no     no      0    yes\n473      no     no      3    yes\n474      no     no      0    yes\n475      no     no      0    yes\n476      no     no      1    yes\n477      no     no      1    yes\n478      no     no      2    yes\n479      no    yes      0    yes\n480      no     no      1    yes\n481      no     no      0    yes\n482      no    yes      2    yes\n483      no     no      0    yes\n484      no     no      0    yes\n485      no     no      2    yes\n486      no    yes      1    yes\n487      no     no      0     no\n488      no     no      1     no\n489      no     no      1     no\n490      no     no      0     no\n491      no     no      0     no\n492      no     no      0     no\n493      no     no      0     no\n494      no     no      1     no\n495      no    yes      0     no\n496      no     no      0     no\n497      no     no      0     no\n498      no     no      1     no\n499      no     no      0     no\n500      no     no      3     no\n501      no    yes      3     no\n502      no    yes      2     no\n503      no     no      0     no\n504      no    yes      0     no\n505      no     no      0     no\n506      no     no      0     no\n507      no     no      2     no\n508      no    yes      2     no\n509      no    yes      2     no\n510      no     no      1     no\n511      no     no      2     no\n512      no     no      0     no\n513      no    yes      0     no\n514      no     no      0     no\n515      no     no      1     no\n516     yes     no      0     no\n517      no    yes      0     no\n518      no    yes      0     no\n519      no    yes      1     no\n520      no     no      1     no\n521      no    yes      1     no\n522      no    yes      1     no\n523      no    yes      1     no\n524      no     no      2     no\n525      no    yes      1     no\n526      no    yes      2     no\n527      no    yes      2     no\n528      no    yes      1     no\n529      no    yes      1     no\n530      no    yes      0     no\n531      no    yes      2     no\n532      no    yes      2     no\n533      no     no      2     no\n534     yes     no      0     no\n535      no    yes      0     no\n536      no    yes      0     no\n537      no    yes      0     no\n538      no    yes      0     no\n539      no    yes      0     no\n540      no     no      0     no\n541      no     no      1     no\n542      no    yes      0     no\n543      no    yes      0     no\n544      no    yes      1     no\n545      no    yes      1     no\n546      no    yes      1     no\n\n\n\n\n\nHousePrices_tbl\n\n# A tibble: 546 × 12\n   price lotsize bedrooms bathrooms stories driveway recreation fullbase gasheat\n   &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt; &lt;fct&gt;    &lt;fct&gt;      &lt;fct&gt;    &lt;fct&gt;  \n 1 42000    5850        3         1       2 yes      no         yes      no     \n 2 38500    4000        2         1       1 yes      no         no       no     \n 3 49500    3060        3         1       1 yes      no         no       no     \n 4 60500    6650        3         1       2 yes      yes        no       no     \n 5 61000    6360        2         1       1 yes      no         no       no     \n 6 66000    4160        3         1       1 yes      yes        yes      no     \n 7 66000    3880        3         2       2 yes      no         yes      no     \n 8 69000    4160        3         1       3 yes      no         no       no     \n 9 83800    4800        3         1       1 yes      yes        yes      no     \n10 88500    5500        3         2       4 yes      yes        no       no     \n# ℹ 536 more rows\n# ℹ 3 more variables: aircon &lt;fct&gt;, garage &lt;dbl&gt;, prefer &lt;fct&gt;"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#accessing-parts-of-the-data",
    "href": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#accessing-parts-of-the-data",
    "title": "03-1: Importing Files and Exporting to Files",
    "section": "Accessing parts of the data",
    "text": "Accessing parts of the data\n\nNumerical indexVariable namesUsing $\n\n\nSubsetting a data.frame works in a very similar manner as a matrix:\n\nmatrix[rows of interest, columns of interest]\n\nExample:\n2nd to 8th rows, the 3rd and 5th columns\n\n\ndata.frame\n\nHousePrices[2:8, c(3,5)]\n\n  bedrooms stories\n2        2       1\n3        3       1\n4        3       2\n5        2       1\n6        3       1\n7        3       2\n8        3       3\n\n\n\ntibble\n\nHousePrices_tbl[2:8, c(3,5)]\n\n# A tibble: 7 × 2\n  bedrooms stories\n     &lt;dbl&gt;   &lt;dbl&gt;\n1        2       1\n2        3       1\n3        3       2\n4        2       1\n5        3       1\n6        3       2\n7        3       3\n\n\n\n\n\n\n\nBut, subsetting a data.frame using numerical indexes are not recommended because it is not immediately clear to you (or your collaborators who might look at the code) what you intended to do with the code.\nInstead, the following is better:\n\ndata[, c(\"variable 1\", \"variable 2\", ...)]\n\nExamples:\n\n\ndata.frame\n\nhead(HousePrices[, \"price\"])\n\n[1] 42000 38500 49500 60500 61000 66000\n\n\n\ntibble\n\nhead(HousePrices_tbl[, \"price\"])\n\n# A tibble: 6 × 1\n  price\n  &lt;dbl&gt;\n1 42000\n2 38500\n3 49500\n4 60500\n5 61000\n6 66000\n\n\n\n\n\n\n\nAlternatively, to access a column (variable) from a dataset, you can use $ like below (remember? A data.frame is a special kind of list).\nExamples:\n\n\ndata.frame\n\nhead(HousePrices$price)\n\n[1] 42000 38500 49500 60500 61000 66000\n\n\n\ntibble\n\nhead(HousePrices_tbl$price)\n\n[1] 42000 38500 49500 60500 61000 66000"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#importing-and-exporting-datasets-1",
    "href": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#importing-and-exporting-datasets-1",
    "title": "03-1: Importing Files and Exporting to Files",
    "section": "Importing and Exporting Datasets",
    "text": "Importing and Exporting Datasets\n\nObjectives and DirectionsHow\n\n\nObjectives\n\nread datasets in various formats (csv, xlsx, dta, and rds) containing corn yields in Nebraska counties for the year of 2008.\nwrite R objects as files in various formats\n\nDirections\n\nGo here and download all the files\nPlace all the data files in the same folder (any folder)\n\n\n\nCheck the format in which the dataset is stored by looking at the extension of the file (what comes after the file name and a dot)\n\ncorn.csv: a file format Microsof Excel supports.\ncorn.xlsx: another format supported by Microsof Excel, which may have more than one tabs of data sheets.\ncorn.dta: a format that STATA support (software that is immensely popular for economists).\ncorn.rds: a format that R supports.\n\nWhen you import a dataset, you need to use a particular function that is appropriate for the particular type of format the dataset is in."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#read-a-csv-file",
    "href": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#read-a-csv-file",
    "title": "03-1: Importing Files and Exporting to Files",
    "section": "Read a CSV file",
    "text": "Read a CSV file\n\nread.csv()read_csv()Compare\n\n\nYou can use read.csv() from the base package.\nSyntax\n\n#--- NOT RUN ---#  \ndata = read.csv(path to the file to import)\n\n\nExamples\n\ncorn_yields_df &lt;- read.csv(\"~/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Lectures/Chapter-3-DataWrangling/corn_yields.csv\")\n\n\n\nYou can use read_csv() from the readr package.\nSyntax\n\n#--- NOT RUN ---#  \ndata = readr::read_csv(path to the file to import)\n\n\nExamples\n\ncorn_yields_tbl &lt;- readr::read_csv(\"~/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Lectures/Chapter-3-DataWrangling/corn_yields.csv\")\n\n\n\n Direction: evaluate corn_yields_df and corn_yields_tbl to see the differences.\n\nData read using read.csv():\n\nclass(corn_yields_df)\n\n[1] \"data.frame\"\n\n\n\nData read using read_csv():\n\nclass(corn_yields_tbl) \n\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\""
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#setting-the-working-directory",
    "href": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#setting-the-working-directory",
    "title": "03-1: Importing Files and Exporting to Files",
    "section": "Setting the working directory",
    "text": "Setting the working directory\n\nWhat and whyhownavigationRStudio project\n\n\n\nIn the previous slide, we provided a full path to the csv file to read onto R.\nIf you expect to import and/or export (save) datasets and R objects often from/to a particular directory, it would be nice to tell R to look for files in the directory by default.\n\nSo, a code like this works:\n\ncorn_yield &lt;- read.csv(\"corn_yields.csv\")\n\n\nThis will save us from writing out the full path every time we either import or export datasets.\nYou can do so by designating the directory as the working directory.\nOnce the working directory is set, R looks for files in that directory unless told otherwise.\nIt is not just when importing datasets. When you export an R object as a file, R will create a file in the working directory by default.\n\n\n\nYou can use setwd() to designate a directory as the working directory:\n\n#--- Setting a directory (path) in your computer---#\nsetwd(\"/Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Lectures/Chapter-3-DataWrangling\")\n\n\nYou can check the current working directory using the getwd() function:\n\n#--- find the current working directory ---#\ngetwd()\n\n[1] \"/Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/lectures/Chapter-3-DataWrangling\"\n\n\n\n\nSuppose it is convenient for you to set the working directory somewhere else than the folder where all the datasets are residing.\n\nsetwd(\"~/Dropbox/TeachingUNL/DataScience\")\n\n\nYou can then provide the path to the file relative to the working directory like this:\n\ndata &lt;- read_csv(\"Datasets/Chapter_3_data_wrangling/corn_yields.csv\")\n\n\nYou can use .. to move up a folder. For example, if you want to import corn_yields.csv stored in “~/Dropbox/TeachingUNL”, then the following works:\n\ndata &lt;- read_csv(\"../corn_yields.csv\")\n\n\n\nYou can create an R Project using RStudio:\n\nclick on a blue transparent box with a plus sign at the upper left corner of RStudio\nclick on “new directory” (to initiate a new folder) or “existing directory” (to designate an existing folder)\n\n( Direction:  demonstrate on RStduio)\nWhen you open an R Project folder, then the working directory is set at the project folder. Confirm this:\n\ngetwd()"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#read-a-sheet-from-an-xlsx-file",
    "href": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#read-a-sheet-from-an-xlsx-file",
    "title": "03-1: Importing Files and Exporting to Files",
    "section": "Read a sheet from an xls(x) file",
    "text": "Read a sheet from an xls(x) file\n\nInstructionSyntax and ExamplesNote\n\n\n\nYou can use read_excel() from the readxl package to read data sheets from an xls(x) file, which is part of the tidyverse package.\nThe readxl package is installed when you install the tidyverse pacakge.\nHowever, it is not loaded automatically when you load the tidyverse package.\nSo, you need to library the package even if you have loaded the tidyverse package.\n\n\nlibrary(readxl)\n\n\n\nSyntax\n\nread_excel(path to the file, sheet = x)\n\n\nx: sheet number\n\nExamples\nImport a sheet of an xls(x) file using read_excel():\n\ncorn_08 &lt;- read_excel(\"corn_yields.xls\", sheet = 1) # 1st sheet \ncorn_09 &lt;- read_excel(\"corn_yields.xls\", sheet = 2) # 2nd sheet\n\n\n\n\n#--- check the class ---#\nclass(corn_08) \n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\nNotice that the data is converted into a tibble (because the readxl package is part of the tidyverse package.)."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#read-a-stata-data-file-.dta",
    "href": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#read-a-stata-data-file-.dta",
    "title": "03-1: Importing Files and Exporting to Files",
    "section": "Read a STATA data file (.dta)",
    "text": "Read a STATA data file (.dta)\n\nInstructionSyntax and ExamplesNote\n\n\nUse the read.dta13() function from the readstata13 package.\n\n#--- install the package ---#\ninstall.packages(haven)\n\n#--- load the package ---#\nlibrary(haven) \n\n\n\nSyntax\n\n#--- Syntax (NOT RUN) ---#\nhaven::read_dta(file path)\n\nExamples\n\n#--- import the data ---#\ncorn_yields &lt;- haven::read_dta(\"corn_yields.dta\")\n\n\n\n\n#--- check the class ---#\nclass(corn_yields) \n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\nNotice that the data is converted into a data.frame object, not a tibble."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#read-an-rds-file",
    "href": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#read-an-rds-file",
    "title": "03-1: Importing Files and Exporting to Files",
    "section": "Read an rds file",
    "text": "Read an rds file\n\nInstructionSyntax and ExamplesNote\n\n\n\nAn rds ( r data set) file is a file type that is supported by R.\nYou can use the readRDS() function to read an rds file.\nNo special packages are necessary.\n\n\n\nSyntax\n\nreadRDS(\"path to the file\") \n\nExamples\n\ncorn_yields &lt;- readRDS(\"corn_yields.rds\") \n\n\n\n\nclass(corn_yields)\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n\nNotice that the imported dataset is already a tibble object. This is because the R object exported as corn_yields.rds was tibble."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#export-an-r-object",
    "href": "lectures/Chapter-3-DataWrangling/03-1-input-output.html#export-an-r-object",
    "title": "03-1: Importing Files and Exporting to Files",
    "section": "Export an R object",
    "text": "Export an R object\n\nInstructionSyntax and ExamplesNotes on RDS\n\n\n\nExporting datasets work much the same way as importing them.\nHere is the list of functions that let you export a data.frame or (tibble) in different formats:\n\ncsv: write_csv()\ndta: save.dta13()\nrds: saveRDS()\n\n\n\n\nSyntax\n\nexport_function(obeject name, file name)\n\nExamples\n\n#--- export as csv ---#\nwrite_csv(corn_yields, \"corn_yields_exp_rownames.csv\")\n\n#--- export as dta ---#\nsave.dta13(corn_yields, \"corn_yields_exp.dta\")\n\n#--- export as rds ---#\nsaveRDS(corn_yields, \"corn_yields_exp.rds\")\n\n#--- export as xls file ---#\n# just don't do it\n\n\n\ntype preservation\nYou can export any kind of R objects as an rds file.\n\na_list &lt;- list(a = c(\"R\", \"rocks\"), b = corn_yields)   \n\nsaveRDS(a_list, \"a_list.rds\")\n\nreadRDS(\"a_list.rds\")\n\n$a\n[1] \"R\"     \"rocks\"\n\n$b\n# A tibble: 161 × 9\n    Year State  FIPS County_name State_name Commodity `Data item`      Irrigated\n   &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;       &lt;chr&gt;      &lt;chr&gt;     &lt;chr&gt;                &lt;int&gt;\n 1  2008    31 31019 BUFFALO     NEBRASKA   CORN      CORN, GRAIN - Y…         0\n 2  2008    31 31019 BUFFALO     NEBRASKA   CORN      CORN, GRAIN, IR…         1\n 3  2008    31 31041 CUSTER      NEBRASKA   CORN      CORN, GRAIN - Y…         0\n 4  2008    31 31041 CUSTER      NEBRASKA   CORN      CORN, GRAIN, IR…         1\n 5  2008    31 31047 DAWSON      NEBRASKA   CORN      CORN, GRAIN - Y…         0\n 6  2008    31 31047 DAWSON      NEBRASKA   CORN      CORN, GRAIN, IR…         1\n 7  2008    31 31077 GREELEY     NEBRASKA   CORN      CORN, GRAIN - Y…         0\n 8  2008    31 31077 GREELEY     NEBRASKA   CORN      CORN, GRAIN, IR…         1\n 9  2008    31 31079 HALL        NEBRASKA   CORN      CORN, GRAIN - Y…         0\n10  2008    31 31079 HALL        NEBRASKA   CORN      CORN, GRAIN, IR…         1\n# ℹ 151 more rows\n# ℹ 1 more variable: Yield &lt;int&gt;\n\n\nAs you can see a list is saved as an rds file, and when imported, it is still a list.\nfile size Check the size of the corn data files in different formats.\nWhich one is the smallest?"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#essential-verbs",
    "href": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#essential-verbs",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Essential verbs",
    "text": "Essential verbs\n\nfilter()\nmutate()\nselect()\nrename()\narrange()\nrelocate()"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#before-we-start",
    "href": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#before-we-start",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Before we start",
    "text": "Before we start\nFor illustrations, we will use flights_mini that we create below:\n\nlibrary(nycflights13)\n\n(\nflights_mini &lt;- distinct(flights,month,day,.keep_all=TRUE) %&gt;% \n  filter(day %in% c(1,2)) %&gt;% \n  arrange(month)\n)\n\n# A tibble: 24 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     2       42           2359        43      518            442\n 3  2013     2     1      456            500        -4      652            648\n 4  2013     2     2        3           2359         4      513            444\n 5  2013     3     1        4           2159       125      318             56\n 6  2013     3     2       43           2355        48      605            440\n 7  2013     4     1      454            500        -6      636            640\n 8  2013     4     2        9           2355        14      346            345\n 9  2013     5     1        9           1655       434      308           2020\n10  2013     5     2        3           1905       298      241           2224\n# ℹ 14 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#filter-row-wise-subset",
    "href": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#filter-row-wise-subset",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "filter(): row-wise subset",
    "text": "filter(): row-wise subset\n\nInstructionSingle conditionfilter(): multiple conditionsImportantExercises\n\n\n\nfilter(): subset data row-wise using logical conditions based on variables\n\n#--- syntax ---# \nfilter(dataset, condition 1, ..., condition K)\n\n\n\n\nequal tonot equal toinequality\n\n\nObservations where month is 4:\n\nfilter(flights_mini, month == 4) \n\n# A tibble: 2 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     4     1      454            500        -6      636            640\n2  2013     4     2        9           2355        14      346            345\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nObservations where month is NOT 4:\n\nfilter(flights_mini, month != 4) \n\n# A tibble: 22 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     2       42           2359        43      518            442\n 3  2013     2     1      456            500        -4      652            648\n 4  2013     2     2        3           2359         4      513            444\n 5  2013     3     1        4           2159       125      318             56\n 6  2013     3     2       43           2355        48      605            440\n 7  2013     5     1        9           1655       434      308           2020\n 8  2013     5     2        3           1905       298      241           2224\n 9  2013     6     1        2           2359         3      341            350\n10  2013     6     2       14           2359        15      339            341\n# ℹ 12 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nObservations where month is less than 4:\n\nfilter(flights_mini, month &lt; 4) \n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     1     1      517            515         2      830            819\n2  2013     1     2       42           2359        43      518            442\n3  2013     2     1      456            500        -4      652            648\n4  2013     2     2        3           2359         4      513            444\n5  2013     3     1        4           2159       125      318             56\n6  2013     3     2       43           2355        48      605            440\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\n\n\n\n\nand (&)or (|)in any of (%in%)\n\n\n\nfilter(flights_mini, month &gt;= 9 & month &lt;= 11) \n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     9     1        9           2359        10      343            340\n2  2013     9     2        8           2255        73      126             19\n3  2013    10     1      447            500       -13      614            648\n4  2013    10     2      449            500       -11      620            648\n5  2013    11     1        5           2359         6      352            345\n6  2013    11     2      453            500        -7      644            651\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n#--- alternatively ---#\n# filter(flights_mini, month &gt;= 9, month &lt;= 11)\n\n\n\n\nfilter(flights_mini, month &gt;= 11 | month &lt;= 1) \n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     1     1      517            515         2      830            819\n2  2013     1     2       42           2359        43      518            442\n3  2013    11     1        5           2359         6      352            345\n4  2013    11     2      453            500        -7      644            651\n5  2013    12     1       13           2359        14      446            445\n6  2013    12     2       12           2250        82      103           2356\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\nfilter(flights_mini, month %in% c(1, 2, 3)) \n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     1     1      517            515         2      830            819\n2  2013     1     2       42           2359        43      518            442\n3  2013     2     1      456            500        -4      652            648\n4  2013     2     2        3           2359         4      513            444\n5  2013     3     1        4           2159       125      318             56\n6  2013     3     2       43           2355        48      605            440\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n#--- equivalently ---#\n# filter(flights_mini, month == 1 | month == 2 | month == 2) \n\nThis is very useful when you have many values to check.\n\n\n\n\n\nNotice that the original data flights_mini was not affected by the filter() operations in the previous slides.\nThis is consistent across all the verbs in dplyr. Whatever actions you take, the original data is unaltered.\n–\nTo use the transformed data for later use, you need to assign it to a new object (or overwrite if that is okay):\n\nflights_mini_filtered &lt;- filter(flights_mini, month == 4) \n\nflights_mini_filtered\n\n# A tibble: 2 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     4     1      454            500        -6      636            640\n2  2013     4     2        9           2355        14      346            345\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\nExercise 1Exercise 2Exercise 3\n\n\n\nFind the observations in June and July\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere is the output you should get:\n\n\n# A tibble: 4 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     6     1        2           2359         3      341            350\n2  2013     6     2       14           2359        15      339            341\n3  2013     7     1        1           2029       212      236           2359\n4  2013     7     2       12           2245        87      117              4\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\nFind the observations in January, April, July, September, and December\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere is the output you should get:\n\n\n# A tibble: 10 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     2       42           2359        43      518            442\n 3  2013     4     1      454            500        -6      636            640\n 4  2013     4     2        9           2355        14      346            345\n 5  2013     6     1        2           2359         3      341            350\n 6  2013     6     2       14           2359        15      339            341\n 7  2013     9     1        9           2359        10      343            340\n 8  2013     9     2        8           2255        73      126             19\n 9  2013    12     1       13           2359        14      446            445\n10  2013    12     2       12           2250        82      103           2356\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\nFind the observations by carrier “US”\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere is the output you should get:\n\n\n# A tibble: 5 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     2     1      456            500        -4      652            648\n2  2013     4     1      454            500        -6      636            640\n3  2013    10     1      447            500       -13      614            648\n4  2013    10     2      449            500       -11      620            648\n5  2013    11     2      453            500        -7      644            651\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#select-column-wise-subset",
    "href": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#select-column-wise-subset",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "select(): column-wise subset",
    "text": "select(): column-wise subset\n\nInstructionExamplesExercises\n\n\nYou can select a subset of variables using select().\n\nselect(dataset, variable 1, variable 2, ...)\n\nIf you would like to drop some variables, but want to keep all the other variables, you can take advantage of − operator:\n\nselect(dataset, - variable 1, - variable 2, ...)\n\n\n\n\nExample 1Example 2Example 3\n\n\n\nselect(flights_mini, arr_delay)\n\n# A tibble: 24 × 1\n   arr_delay\n       &lt;dbl&gt;\n 1        11\n 2        36\n 3         4\n 4        29\n 5       142\n 6        85\n 7        -4\n 8         1\n 9       408\n10       257\n# ℹ 14 more rows\n\n\n\n\n\nselect(flights_mini, month, arr_delay, dep_delay)\n\n# A tibble: 24 × 3\n   month arr_delay dep_delay\n   &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1     1        11         2\n 2     1        36        43\n 3     2         4        -4\n 4     2        29         4\n 5     3       142       125\n 6     3        85        48\n 7     4        -4        -6\n 8     4         1        14\n 9     5       408       434\n10     5       257       298\n# ℹ 14 more rows\n\n\n\n\n\nselect(flights_mini, - year, - month)  \n\n# A tibble: 24 × 17\n     day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay\n   &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1     1      517            515         2      830            819        11\n 2     2       42           2359        43      518            442        36\n 3     1      456            500        -4      652            648         4\n 4     2        3           2359         4      513            444        29\n 5     1        4           2159       125      318             56       142\n 6     2       43           2355        48      605            440        85\n 7     1      454            500        -6      636            640        -4\n 8     2        9           2355        14      346            345         1\n 9     1        9           1655       434      308           2020       408\n10     2        3           1905       298      241           2224       257\n# ℹ 14 more rows\n# ℹ 10 more variables: carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;,\n#   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\n\n\n\nExercise 1Exercise 2\n\n\nSelect all the columns except arr_delay.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere is the output you should get:\n\n\n# A tibble: 24 × 18\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     2       42           2359        43      518            442\n 3  2013     2     1      456            500        -4      652            648\n 4  2013     2     2        3           2359         4      513            444\n 5  2013     3     1        4           2159       125      318             56\n 6  2013     3     2       43           2355        48      605            440\n 7  2013     4     1      454            500        -6      636            640\n 8  2013     4     2        9           2355        14      346            345\n 9  2013     5     1        9           1655       434      308           2020\n10  2013     5     2        3           1905       298      241           2224\n# ℹ 14 more rows\n# ℹ 10 more variables: carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;,\n#   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nSelect arr_delay and month.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere is the output you should get:\n\n\n# A tibble: 24 × 2\n   month arr_delay\n   &lt;int&gt;     &lt;dbl&gt;\n 1     1        11\n 2     1        36\n 3     2         4\n 4     2        29\n 5     3       142\n 6     3        85\n 7     4        -4\n 8     4         1\n 9     5       408\n10     5       257\n# ℹ 14 more rows"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#relocate-change-the-column-order",
    "href": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#relocate-change-the-column-order",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "relocate(): change the column order",
    "text": "relocate(): change the column order\nYou can use relocate() to change the column order.\n\nrelocate(flights_mini, dep_time, dep_delay)\n\n# A tibble: 24 × 19\n   dep_time dep_delay  year month   day sched_dep_time arr_time sched_arr_time\n      &lt;int&gt;     &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;          &lt;int&gt;    &lt;int&gt;          &lt;int&gt;\n 1      517         2  2013     1     1            515      830            819\n 2       42        43  2013     1     2           2359      518            442\n 3      456        -4  2013     2     1            500      652            648\n 4        3         4  2013     2     2           2359      513            444\n 5        4       125  2013     3     1           2159      318             56\n 6       43        48  2013     3     2           2355      605            440\n 7      454        -6  2013     4     1            500      636            640\n 8        9        14  2013     4     2           2355      346            345\n 9        9       434  2013     5     1           1655      308           2020\n10        3       298  2013     5     2           1905      241           2224\n# ℹ 14 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nChosen variables come front with the order of the rest of the variable unchanged."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#piping-with-1",
    "href": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#piping-with-1",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Piping with %>%",
    "text": "Piping with %&gt;%\n\nThe BasicMore generally.ChainingWhy piping with %&gt;%\n\n\nLet f() be a function and x is an R object that f() accepts. Then,\nx %&gt;% f() is the same as f(x)\nExample\nTry the following codes and confirm they return the same results:\n\n#--- not piped ---#\nmean(seq(1, 99, by = 2))  \n\n#--- piped ---#\nseq(1, 99, by = 2) %&gt;% mean()   \n\n\n\nSuppose you have more than one arguments to the function like this:\n\nf(x1, x2, option 1, option 2)\n\nThen,\n\nz %&gt;% f(x2, option 1, option 2) \n\nis equivalent to\n\nf(z, x2, option 1, option 2) \n\nThat is, in general, an R object that precedes the piping operator (%&gt;%) becomes the  first  argument of the function that comes after the piping operator.\n\n\nWhat if the object before the piping operator is not the first argument of the subsequent function?\n\na_string &lt;- \"I do not like space\"\n\ngsub(\" \", \"\", a_string)\n\n[1] \"Idonotlikespace\"\n\n\nThis does not work:\n\na_string %&gt;%  gsub(\" \", \"\") \n\nbecause the above is equivalent to\n\na_string &lt;- gsub(a_string, \" \", \"\") \n\nYou can refer to the preceding object by . like this:\n\na_string %&gt;% gsub(\" \", \"\", .)  \n\n[1] \"Idonotlikespace\"\n\n\n\n\nYou can keep piping like this:\n\nflights_mini %&gt;% \n  select(year, month, dep_time) %&gt;% \n  relocate(dep_time) %&gt;% \n  filter(month &lt;= 3)\n\n Important:  The object created by all the codes preceding the piping operator is passed down to the function after the piping operator.\nFor example, relocate(dep_time) receives as its first argument the outcome of the evaluation of the highlighted parts of the code below.\n\n\n\nProblemAlternative 1Alternative 2 (with piping)\n\n\n\nConsider the following sequence of actions:\n\na1 &lt;- filter(flights_mini, month &lt;= 3)\n\na2 &lt;- select(a1, year, month, dep_time)\n\na3 &lt;- relocate(a2, dep_time)\n\n\n\nNotice that you generated two intermediate datasets (a1 and a2) to obtain the dataset you wanted (a3).\nThese intermediate objects are generated only for the purpose of generating the final dataset.\nIt is easy to imagine that you will soon have lots of unnecessary intermediate objects on R.\n\n\n\n\nAlternatively, you can do the following:\n\na3 &lt;- relocate(\n  select(\n    filter(flights_mini, month &lt;= 3)\n    , year, month, dep_time\n  ), \n  dep_time\n)\n\n\n\nThis does not create any intermediate objects unlike the first example.\nHowever, it is hard to understand the code partly because the order of actions is the reverse of the order of the corresponding functions you see as you read the code from left to right.\n\n\n\n\nTaking advantage of the piping operator,\n\na3 &lt;- flights_mini %&gt;% \n  filter(month &lt;= 3) %&gt;% \n  select(year, month, dep_time) %&gt;% \n  relocate(dep_time)"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#mutate-define-new-or-update-variables",
    "href": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#mutate-define-new-or-update-variables",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "mutate(): define new (or update) variables",
    "text": "mutate(): define new (or update) variables\n\nWhatmultiple variablesfunctionMore on mutate()Exercises\n\n\nYou can use mutate() to create a new variable (or overwrite the existing one) in the dataset:\nSynatax\n\nmutate(data, new variable name = expression)\n\nExample\n\nmutate(flights_mini, gain = arr_delay - dep_delay) %&gt;% \n  filter(month &lt;= 2) %&gt;% \n  relocate(gain)\n\n# A tibble: 4 × 20\n   gain  year month   day dep_time sched_dep_time dep_delay arr_time\n  &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n1     9  2013     1     1      517            515         2      830\n2    -7  2013     1     2       42           2359        43      518\n3     8  2013     2     1      456            500        -4      652\n4    25  2013     2     2        3           2359         4      513\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nYou can define multiple variables within a single mutate() function.\nYou can create a new variable based on the variables that have been just created within the same mutate() function.\nExamples\n\n\n# A tibble: 4 × 21\n   gain gain_per_hour  year month   day dep_time sched_dep_time dep_delay\n  &lt;dbl&gt;         &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n1     9          2.38  2013     1     1      517            515         2\n2    -7         -2.22  2013     1     2       42           2359        43\n3     8          4.90  2013     2     1      456            500        -4\n4    25          7.28  2013     2     2        3           2359         4\n# ℹ 13 more variables: arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;,\n#   carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;,\n#   air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nYou can apply functions to variables when creating new variables:\nExample\n\n\n# A tibble: 2 × 20\n  avg_arr_delay  year month   day dep_time sched_dep_time dep_delay arr_time\n          &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n1          61.1  2013     1     1      517            515         2      830\n2          61.1  2013     1     2       42           2359        43      518\n# ℹ 12 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nNote: the function you apply has to accept a vector (a variable column).\n\n\n\nselective mutationdichotomousMore than two cases\n\n\nSometimes, you want to to alter the values of a variable for specific rows that satisfy certain conditions.\nExample: Suppose you found out that dep_time for all the flights from JFK was misreported so that dep_time is 10 minutes earlier than the true departure times.\nSo, we would like to add 10 minutes to all the flights by JFK.\nYou can use ifelse() like this:\n\nflights_mini %&gt;% \n  mutate(\n    dep_time_correct = ifelse(origin == \"JFK\", dep_time + 10, dep_time) #&lt;&lt;\n  ) %&gt;% \n  relocate(origin, dep_time, dep_time_correct) %&gt;% arrange(origin) \n\n# A tibble: 24 × 20\n   origin dep_time dep_time_correct  year month   day sched_dep_time dep_delay\n   &lt;chr&gt;     &lt;int&gt;            &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1 EWR         517              517  2013     1     1            515         2\n 2 EWR         456              456  2013     2     1            500        -4\n 3 EWR         454              454  2013     4     1            500        -6\n 4 EWR         447              447  2013    10     1            500       -13\n 5 EWR         449              449  2013    10     2            500       -11\n 6 EWR         453              453  2013    11     2            500        -7\n 7 JFK          42               52  2013     1     2           2359        43\n 8 JFK           3               13  2013     2     2           2359         4\n 9 JFK           4               14  2013     3     1           2159       125\n10 JFK          43               53  2013     3     2           2355        48\n# ℹ 14 more rows\n# ℹ 12 more variables: arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;,\n#   carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nSuppose you want to label flights with arr_delay &gt; 0 to be time-loss and time-gain otherwise:\nYou can use ifelse() for defining a dichotomous variable like this:\n\nflights_mini %&gt;% \n  mutate(\n    loss_or_gain = ifelse(arr_delay &gt; 0, \"time-loss\", \"time-gain\") #&lt;&lt;\n  ) %&gt;% \n  relocate(arr_delay, loss_or_gain)\n\n# A tibble: 24 × 20\n   arr_delay loss_or_gain  year month   day dep_time sched_dep_time dep_delay\n       &lt;dbl&gt; &lt;chr&gt;        &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1        11 time-loss     2013     1     1      517            515         2\n 2        36 time-loss     2013     1     2       42           2359        43\n 3         4 time-loss     2013     2     1      456            500        -4\n 4        29 time-loss     2013     2     2        3           2359         4\n 5       142 time-loss     2013     3     1        4           2159       125\n 6        85 time-loss     2013     3     2       43           2355        48\n 7        -4 time-gain     2013     4     1      454            500        -6\n 8         1 time-loss     2013     4     2        9           2355        14\n 9       408 time-loss     2013     5     1        9           1655       434\n10       257 time-loss     2013     5     2        3           1905       298\n# ℹ 14 more rows\n# ℹ 12 more variables: arr_time &lt;int&gt;, sched_arr_time &lt;int&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;,\n#   distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\nThe case_when() function is useful if you have more than two cases.\nSyntax:\n\ncase_when(\n  condition 1 ~ value to assign,\n  condition 2 ~ value to assign,\n  condition 3 ~ value to assign,\n  ...\n)  \n\nExample:\n\nflights_mini %&gt;% \n  mutate(origin = case_when(\n    origin == \"JFK\" ~ \"John F. Kennedy\",\n    origin == \"EWR\" ~ \"Newark Liberty International\", \n    origin == \"LGA\" ~ \"LaGuardia\" \n    )\n  ) %&gt;% relocate(origin)\n\n# A tibble: 24 × 19\n   origin            year month   day dep_time sched_dep_time dep_delay arr_time\n   &lt;chr&gt;            &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;\n 1 Newark Liberty …  2013     1     1      517            515         2      830\n 2 John F. Kennedy   2013     1     2       42           2359        43      518\n 3 Newark Liberty …  2013     2     1      456            500        -4      652\n 4 John F. Kennedy   2013     2     2        3           2359         4      513\n 5 John F. Kennedy   2013     3     1        4           2159       125      318\n 6 John F. Kennedy   2013     3     2       43           2355        48      605\n 7 Newark Liberty …  2013     4     1      454            500        -6      636\n 8 John F. Kennedy   2013     4     2        9           2355        14      346\n 9 John F. Kennedy   2013     5     1        9           1655       434      308\n10 John F. Kennedy   2013     5     2        3           1905       298      241\n# ℹ 14 more rows\n# ℹ 11 more variables: sched_arr_time &lt;int&gt;, arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;,\n#   flight &lt;int&gt;, tailnum &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\n\n\n\n\n\n\nExercise 1Exercise 2\n\n\nFind the mean value of arr_delay in April and May (combined) and define it as a new variable named avg_arr_delay\n\n\nFind the sum of dep_delay in January, February, and December (combined) and define it as a new variable named sum_arr_delay, and then move the variable to the first column of the dataset."
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#sec-group-operation",
    "href": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#sec-group-operation",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "Grouped Operations",
    "text": "Grouped Operations\n\nMotivationHowOther summarizing functionsNew variableExercises\n\n\nGroup-wise operations, such as the mean of arrival delay by carrier are very useful to gain an insight into differences across groups.\nThe group_by() function in conjunction with summarize() function does exactly that.\n\nSyntax\n\n#--- group by variables ---#\ngroup_by(dataset, variable to group by, variable to group by, ...)  \n\n#--- summarize ---#\nsummarize(grouped dataset, expression)  \n\n\n\n\nStep 1: groupingStep 2: summarizingPiped\n\n\nYou first use group_by() to set the group for a dataset:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThere are no apparent differences in flights_carrier from flights_slim. The only thing you did by group_by() was to tell R that whatever we will do to the new dataset is going to be done by group, which is reflected in “Groups” of the printed data.\n\n\nOnce the group is set, we are ready to do some group-wise (by carrier) operations. Let’s now find the means of arr_delay by carrier so we know which carriers perform better than others. We can do so using summarize().\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nUsing the piping operator,\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nYou can apply any functions that work on a vector (a variable)\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nYou can assign the results of the grouped operations to new variables using mutate()\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nExercise 1InstructionExercise 2Exercise 3\n\n\nFind the carrier that had the longest average departure delay (dep_delay) during May through August. Below is the output you will see if you get it right.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nFor the rest of the exercises, we are going to use the weather data for the three airports in NY. First load the weather data and get familiar with the data set.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nFind the daily mean temperature (temp), humidity (humid), wind speed (wind_speed), and precipitation (precip) by the origin of departure. Do not forget to name each daily weather variable. Below is the output you will see if you get it right.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nAnswer\n\n\nCode\ndaily_weather &lt;- \n  weather %&gt;%\n  dplyr::group_by(origin, month, day) %&gt;%\n  dplyr::summarize(\n    temp = mean(temp),\n    humid = mean(humid),\n    wind_speed = mean(wind_speed),\n    precip = mean(precip)\n  )\n\n\n\n\nSubset the daily weather data you obtained in exercise 2 so that it contains weather information only in Nov, Dec, Jan, and Feb for flights that depart from “EWR”. Below is the output you will see if you get it right.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nAnswer\n\n\nCode\n(\ndaily_weather %&gt;%\n  dplyr::filter(month %in% c(11, 12, 1, 2)) %&gt;%\n  dplyr::filter(origin == \"EWR\")\n)"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#across",
    "href": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#across",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "across()",
    "text": "across()\n\nWhatSyntax and ExampleCompare\n\n\n\nacross() lets you apply the same operation (function) to multiple columns at the same time.\nIt is used with summarize() and mutate()\nIt is useful when you want to apply the same function to many variables.\n\n\n\nSyntax\n\nacross(which variables to apply the function, function, options to the function)\n\nExamples\n\n\n# A tibble: 6 × 5\n  carrier arr_delay dep_delay air_time time_hour          \n  &lt;chr&gt;       &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;dttm&gt;             \n1 9E          7.38      16.7      86.8 2013-07-03 17:06:54\n2 AA          0.364      8.59    189.  2013-07-01 03:46:41\n3 AS         -9.93       5.80    326.  2013-06-29 05:05:27\n4 B6          9.46      13.0     151.  2013-07-02 13:05:56\n5 DL          1.64       9.26    174.  2013-07-04 01:49:32\n6 EV         15.8       20.0      90.1 2013-07-04 04:33:39\n\n\nNote: na.rm = TRUE is an option for the mean() function.\n\n\nWithout across()\n\nflights %&gt;% \n  group_by(carrier) %&gt;% \n  summarize(\n    mean_arr_delay = mean(arr_delay, na.rm = TRUE),\n    mean_dep_delay = mean(dep_delay, na.rm = TRUE),\n    mean_air_time = mean(air_time, na.rm = TRUE),\n    mean_time_hour = mean(time_hour, na.rm = TRUE)\n  ) \n\n\nWith across()\n\nflights %&gt;% \n  group_by(carrier) %&gt;% \n  summarize(\n    across(c(arr_delay, dep_delay, air_time, time_hour),\n    mean,\n    na.rm = TRUE\n    )\n  )"
  },
  {
    "objectID": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#select-and-relocate",
    "href": "lectures/Chapter-3-DataWrangling/03-2-data-wrangling-dplyr.html#select-and-relocate",
    "title": "03-1-Data wrangling with tidyverse: The Basics",
    "section": "select() and relocate()",
    "text": "select() and relocate()\nThe approaches to refer to the variables that fit with a specified pattern can be applied to other dplyr operations as well:\nTry:\n\nflights %&gt;% \n  select(c(origin, where(is.numeric)))  \n\n\nflights %&gt;% \n  select(ends_with(\"delay\"))  \n\n\nflights %&gt;% \n  relocate(where(is.character))"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-1-Quarto-introduction.html#quarto-introduction",
    "href": "lectures/Chapter-2-Quarto/02-1-Quarto-introduction.html#quarto-introduction",
    "title": "02-1: Using Quarto to Create Documents",
    "section": "Quarto: Introduction",
    "text": "Quarto: Introduction\n\nWhat is and why Quarto?Using WORD?Make a report with Quarto\n\n\n\nIt allows you to effortlessly generate documents that can print both R codes and their outcomes (this lecture note is indeed written using Quarto) in a single document.\nIt is useful when you report the analysis you conducted and its source R codes to your advisor or anyone you report to (as long as that person understands R).\nThe power of Quarto goes well beyond just creating a simple html document. The full power of Quarto is on display here.\n\n\n\n\n\nQuarto Installation\n\n\nVisit here.\n\n\n\n\n\n\n\nIt would be a real pain to do so because you need to copy and paste all the R codes you run and the results onto WORD manually.\nOften times, copied R codes and results are very much likely to be badly formatted when pasting them\nQuarto obviates the need of repeating copying and pasting when you would like to communicate what you did (R codes) and what you found (results) without worrying too much about formatting.\n\n\n\nGenerating a report using Quarto is a two-step process:\n\nCreate an Quarto file (file with .qmd as an extension) with regular texts and R codes mixed inside it.\n\nYou use a special syntax to let the computer know which parts of the file are simple texts and which parts are R codes.\n\nTell the computer to process the qmd file (a click of a button on RStudio, or use the render() function)\n\nThe computer runs the R codes and get their outcomes\nCombine the text parts, R codes, and their results to produce a document"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-1-Quarto-introduction.html#quarto-the-basics",
    "href": "lectures/Chapter-2-Quarto/02-1-Quarto-introduction.html#quarto-the-basics",
    "title": "02-1: Using Quarto to Create Documents",
    "section": "Quarto: the Basics",
    "text": "Quarto: the Basics\n\nR code chunksLet’s knitqmd v.s. outputInline codeMarkdown basicsCaveat\n\n\nA qmd file would consist of two types of inputs:\n\nR code chunks\nRegular texts\n\n\n\n\n\nSpecial Syntax\n\n\nWe can indicate R codes chunks by placing R codes inside a special syntax.\n```{r}\ncodes\n```\n\n\n\n\n\n\n\n\nDirection\n\n\nTake a look at sample_qmd.qmd, which can be downloaded from here.\n\nR codes summary(cars) and plot(pressure) are enclosed individually by the special syntax\nSo, in this qmd file, R knows that it should treat them as R codes, but not regular texts.\nOn the other hand, any texts that are not enclosed by the special syntax would be recognized as regular text.\n\n\n\n\n\n\n\nThe process of compiling an qmd file to produce a document is called knitting.\n\nThe easiest way to knit is to hit the Knit button located at the top of the code pane (upper left pane by default)\nAlternatively, you can use the render() function to knit like below:\n\n\nrender(\"sample_qmd.qmd\")\n\n\n\nInspect the qmd file and its output document:\n\n\nqmd side\n\nlines 1-10: a YAML header where you control the aesthetics of the output document (more on this later)\nline 16: texts not enclosed by the special syntax\nlines 18-21: summary(cars) is an R code, which is enclosed by the special syntax\n\n\nhtml side\n\nlines 1-10: nothing\nline 16: printed as regular texts\nlines 18-21: the R code and its results printed\n\n\n\n\n\n\nYou can refer to an R object previously defined in line and display its content in line:\n\n\n\n\nDirection\n\n\nSee lines 41-51 of the qmd file\n\n\n\n\n\n\n\nheader\nmake a list\nfont\ncode highlighting\ninline math\nmath\nweb link\ncitation\n\n\n\n\n\nDirection\n\n\nCompare the chapter called “Markdown basics” of the qmd file and its corresponding output in the knitted html file\n\n\n\n\n\n\n\nWhen you knit an qmd file and create a report, R creates an R session/environment that is completely  independent  of whatever R sessions or environments you may have on your RStudio.\nThis means that when you knit an qmd file, you cannot refer to R objects you have defined on your current R session."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-1-Quarto-introduction.html#chunk-options",
    "href": "lectures/Chapter-2-Quarto/02-1-Quarto-introduction.html#chunk-options",
    "title": "02-1: Using Quarto to Create Documents",
    "section": "Chunk options",
    "text": "Chunk options\n\nWhat?Example: echoHowVarious optionsSpecify chunk options globally\n\n\nChunk options are special codes inside R code chunks to control how the code chunks operate.\nHere are some example options:\n\necho\neval\nmessage\nwarning\noutput\ninclude\ncache\nfig.cap, fig-height, etc\n\nSee all the options here.\n\n\n\nInspect the qmd file and its output document and observe that\n\nFrom the R code chunk with summary(cars), the code itself and its outcome are presented in the output\nFrom the R code chunk with plot(pressure), only its outcome is presented in the output\n\nThis is because of the chunk option echo: false in the second R code chunk\n\n\n\nTo set a chunk option, use the following syntax:\n```{r}\n#| option-name: choice\n\nR codes come here\n```\n\nExample\n```{r}\n#| echo: false\n\nR codes come here\n```\n\n\n\n\n\nImportant\n\n\nNo space between the initiation of an R code chunk and chunk option. For example, the echo chunk option is going to be ignored below:\n```{r}\n\n#| echo: false\n\nR codes come here\n```\n\n\n\n\n\n\n\necho and evalmessage and warningoutputincludefigure-related\n\n\n\n\necho ( true  or false): specify whether the R codes appear in the output document or not\neval ( true  or false): specify whether the R codes are evaluated or not\n\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 75-103) and its output document to see their effects.\n\n\n\n\n\n\n\n\nmessage (true or  false ): specify weather messages associated with R codes evaluation appear in the output document or not\nwarning (true or  false ): specify weather warnings associated with R codes evaluation appear in the output document or not\n\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 107-131) and its output document\n\n\n\n\n\n\n\noutput ( true , false, asis)\n\ntrue: pint all the results including warnings and messages\nfalse: hides all the results including warnings and messages\nasis: the outputs of the R codes are printed as-is without any suitable formatting\n\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 135-149) and its output document\n\n\n\n\n\n\n\ninclude: false is equivalent to having eval: true, echo: false, and results: false\n\n\n\n\n\nDirection\n\n\nInspect the qmd file (lines 153-166) and its output document\n\n\n\n\n\n\n\nChunk option for figure\n\nfig.align: ‘default’, ‘center’, ‘left’, ‘right’\nfig.width: in inches\nfig.height: in inches\nfig.cap: figure caption\n\n\n\n\n\n\nDirection\n\n\nPlay with these options. See here for more chunk options.\n\n\n\n\n\n\n\n\n\n\n\nWhat and why?HowNote\n\n\nSometimes, it is useful to set chunk options that apply globally (for the entire documents).\nFor example,\n\nYou are writing a term paper and the instructor may want to see only results, but not R codes.\nYou do not want any of the R codes to appear on the output document, but echo: true is the default.\nIt is a waste of time to type echo: false for all the R code chunks\n\n\n\nYou can set chunk options globally in the YAML header with the execute option like below:\n---\ntitle: \"Reporting using Quarto\"\nauthor: \"Taro Mieno\"\nformat:\n  html:\n    toc: true\n    toc-depth: 2\n    number-sections: true\n    number-depth: 2\nexecute:\n  echo: false\n---\n\n\n\n\nDirection\n\n\n\nInsert the following in the YAML header of sample_qmd.qmd file so that it looks like above\n\nexecute:\n  echo: false\n\nKnit the qmd file again and then compare lines 35-39 of the qmd file and its corresponding output.\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nLocal option always overrides the global option."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-1-Quarto-introduction.html#caching",
    "href": "lectures/Chapter-2-Quarto/02-1-Quarto-introduction.html#caching",
    "title": "02-1: Using Quarto to Create Documents",
    "section": "Caching",
    "text": "Caching\n\nWhat?Let’s tryChanges in codesChanges in contentsdependson\n\n\n\nIn the course of creating a document using Rmarkdown, You are going to hit the “Knit” button numerous times when you are writing a report to check whether the final output looks fine.\nEvery time you knit, all the R code chunks are evaluated, which is inefficient because R has evaluated those R code chunks before.\nSo, if we can somehow store the results of R code chunks (caching), and then let R call up the saved results instead of re-evaluating the codes all over again, we can save lots of time.\nThe benefit of doing so is greater when the processing time of the codes is longer. Caching can be done by adding cache==TRUE as a chunk option.\nBy adding the option, once an R chunk is processed, its results are saved and can be reused again by R later when you compile the document again.\n\n\n\n\n\n\n\nDirection\n\n\n\nChange eval: false to eval: true in the cache_1 chunk\nKnit and confirm that sample_qmd_cache and sample_qmd_files folders are created\nKnit again and observe that the knitting process is much faster now\n\n\n\n\n\n\n\nWhen any part of the R codes within a cached R code chunk is changed, R is smart enough to recognize the change and evaluate the R code chunk again without using the cached results for the chunk.\n\n\n\n\nDirection\n\n\nChange y = 1 + x + v to y = 1 + 2 * x +v in the cache_1 chunk and knit\n\n\n\n\n\n\n\nSometimes, your R codes within an cached R code chunk have not changed, but the content of a dataset used in the R code chunk may have changed.\nIn such a case, R is unable to recognize the change in the  content  of the dataset.\n\n\n\n\n\n\nDirection\n\n\n\nChange eval: false to eval: true in the cache_2 chunk and knit\nChange y = 1 + 2 * x + v back to y = 1 + x +v and knit (notice that the printed number from cache_2 did not change)\n\n\n\n\n\n\n\n\nTo R, everything in the cache_2 chunk looks the same as they only look at the code texts, but not the contents of R objects.\nTherefore, R would call up the saved results instead of rerunning the R codes, which is not what you want.\nYou can use the dependson option to make R recognize any changes in cached R objects\n\n\n\n\n\nDirection\n\n\nAdd dependson: cache_1 to the cache_2 chunk as an option and knit again."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-1-Quarto-introduction.html#directory",
    "href": "lectures/Chapter-2-Quarto/02-1-Quarto-introduction.html#directory",
    "title": "02-1: Using Quarto to Create Documents",
    "section": "Directory",
    "text": "Directory\n\nReading FilesWhat to do?\n\n\nSuppose you are interested in reading a dataset file like this:\n\nread.csv(\"corn_price.csv\")\n\n\n\n\n\nImportant\n\n\nBy default, R looks for corn_price.csv in the same folder in which the qmd file is located.\n\n\n\n\n\nIn my case, the sample_qmd.qmd is located in  /Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Chapter-2-Quarto .\nThis means that RStudio tries to find  /Users/tmieno2/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Chapter-2-Quarto/corn_price.csv.\nIf the file is not in the directory, RStudio won’t be able to find the file to import and returns an error. Clearly, all the subsequent actions dependent on the dataset will not run.\n\n\n\nTo avoid errors in reading files, there are three options:\n\nOption 1 (recommended for a beginner)\nPut all the datasets you intend to use in the same directory in which your qmd file is located.\n\nOption 2\nIf the file is not in the directory, supply the full path to the file like this\n\nread.csv(\"~/Dropbox/TeachingUNL/Data-Science-with-R-Quarto/Chapter-2-Quarto/corn_price.csv\")\n\n\nOption 3\nTell R to look for a specific directory for datasets by setting a working directory using opts_knit$set(root.dir = directory) at the beginning by adding the code like below in your qmd file after the YAML header:\n```{r}\nknir::opts_knit$set(root.dir = \"~/Dropbox/TeachingUNL/Data-Science-with-R/Chapter-2-Quarto\")\n```"
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-1-Quarto-introduction.html#output-types",
    "href": "lectures/Chapter-2-Quarto/02-1-Quarto-introduction.html#output-types",
    "title": "02-1: Using Quarto to Create Documents",
    "section": "Output types",
    "text": "Output types\n\nVarious formatsHowNote\n\n\nYou can knit an qmd file to various formats using various engines (visit here to see all the document types).\n\n\n\n\nImportant\n\n\n\nIn this course, we only use the html option. Submit your assignment in html.\nhtml is void of the concept of page. Consequently, you do not have to worry about how you should organize texts, tables, and figures within a page (fixed amount of space).\n\n\n\n\n\n\nStep 1\nTo write to an output type you want, first add an appropriate options under the format option to the YAML header like below.\ntitle: \"Reporting using Quarto\"\nauthor: \"Taro Mieno\"\nformat:\n  html:\n    toc: true\n    toc-depth: 2\n    number-sections: true\n    number-depth: 2\n  docx: default \n  typst:  \n    papersize: a5\n    margin:\n      x: 1cm\n      y: 1cm\n    columns: 2\nHere,\n\nWORD (with word option) is generated with the default options.\nPDF (with typst option) is generated with the options specified below typst:.\n\n\n\n\n\nDirection\n\n\nAdd the docx option and typst options in the YAML above to your qmd file.\n\n\n\n\n\nStep 2\nYou should see a downward triangle right to the “Render” button. Pick one format to knit to a document of the format.\n\n\nYAML and chunk options available are different based on the output format and engine. Visit here to see the options specific to particular formats."
  },
  {
    "objectID": "lectures/Chapter-2-Quarto/02-1-Quarto-introduction.html#resources",
    "href": "lectures/Chapter-2-Quarto/02-1-Quarto-introduction.html#resources",
    "title": "02-1: Using Quarto to Create Documents",
    "section": "Resources",
    "text": "Resources\nThe best resource to learn Quarto is its official website:\n\nGeneral and specific (to document type) syntax\nYAML options specific to document type"
  }
]